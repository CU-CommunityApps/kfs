<!-- CONFIGURATION MANAGEMENT TARGETS 

Tasks in this file will not be deployed with the application.  Tasks that 
are intended for use only by Kuali Foundation developers.

-->
<project name="imported">
	<!-- dummy target to keep validation happy -->
    <target name="init-properties" />
    <target name="init-property-files" />
    <target name="dist-local" />
    <target name="clean" />

	<target name="export-dataset">
    	<mkdir dir="temp/${name}-dataset" />
        <cvs command="export -d ${name}-dataset" dest="temp" cvsroot="${release.cvs.root}" package="${release.database.cvs.module}" failonerror="true" tag="${branch}" compressionlevel="6" />
	</target>
	
    <target name="package-kfs" depends="init-properties">
    	<!-- copy build file to temp dir -->
    	<delete dir="temp" failonerror="false" />
    	<mkdir dir="temp" />

    	<cvspass cvsroot="${release.cvs.root}" password="${release.cvs.password}" />
    	
    	<antcall target="export-dataset">
    		<param name="branch" value="${release.demo.dataset.cvs.tag}" />
    		<param name="name" value="demo" />
    	</antcall>
    	<antcall target="export-dataset">
    		<param name="branch" value="${release.bootstrap.dataset.cvs.tag}" />
    		<param name="name" value="bootstrap" />
    	</antcall>

        <!-- impex tool -->
    	<mkdir dir="temp/impex" />
        <cvs command="export" dest="temp" cvsroot="${release.cvs.root}" package="${release.impex.tool.cvs.module}" failonerror="true" tag="${release.impex.tool.cvs.tag}" compressionlevel="6" />
    
    	<ant antfile="temp/${release.impex.tool.cvs.module}/impex/build.xml" inheritall="false" target="package-impex-tool" />
        <unzip src="temp/${release.impex.tool.cvs.module}/db_impex.zip" dest="temp" />
        <!-- rice -->
    	
    	<mkdir dir="temp/${release.rice.cvs.module}" />
        <cvs command="export" dest="temp" cvsroot="${release.cvs.root}" package="${release.rice.cvs.module}" failonerror="true" tag="${release.rice.cvs.tag}" compressionlevel="6" />
    	
        <!-- workflow -->
    	<mkdir dir="temp/${release.workflow.cvs.module}" />
        <cvs command="export" dest="temp" cvsroot="${release.cvs.root}" package="${release.workflow.cvs.module}" failonerror="true" tag="${release.workflow.cvs.tag}" compressionlevel="6" />

    	<property name="${workflow.application}.workflow.environment" value="${build.environment}" />
        <property name="${workflow.application}.tomcat5.home" value="${appserver.home}" />
        <property name="${workflow.application}.plugin.dir" value="${basedir}" />
        <property name="${workflow.application}.institution" value="${ant.project.name}" />
        <property name="${workflow.application}.src.dist.loc" value="${basedir}/temp/${release.workflow.cvs.module}/dist" />
        <propertyset id="en-properties">
            <propertyref prefix="${workflow.application}."/>
            <mapper type="glob" from="${workflow.application}.*" to="*"/>
        </propertyset>
        <ant dir="${basedir}/temp/${release.workflow.cvs.module}" target="bundle-workflow" inheritall="false">
            <propertyset refid="${workflow.application}-properties" />
        </ant>
        <copy file="${basedir}/temp/${release.workflow.cvs.module}/dist/workflow_${workflow.version}.zip" todir="temp" overwrite="true"/>
        <ant dir="${basedir}/temp/${release.workflow.cvs.module}" target="clean" inheritall="false"/>
        <ant dir="${basedir}/temp/${release.workflow.cvs.module}" target="javadoc" inheritall="false">
            <propertyset refid="${workflow.application}-properties" />
        </ant>
    	
    	<mkdir dir="${release.patches.dir}" />

		<!-- KFS -->
    	<mkdir dir="temp/${release.kfs.cvs.module}" />
    	<cvs command="export" dest="temp" cvsroot="${release.cvs.root}" package="${release.kfs.cvs.module}" failonerror="true" tag="${release.kfs.cvs.tag}" compressionlevel="6" />

    	<!-- remove foundation-only targets import -->
    	<replace file="temp/kuali_project/build.xml">
    		<replacefilter token="&lt;import file=&quot;build-foundation.xml&quot;/&gt;" value="" />
    	</replace>

    	<!-- replace foundation database URLs -->
    	<replace file="temp/kuali_project/build/external/user/kuali-build.properties">
    		<replacefilter token="mysql.datasource.url=jdbc:mysql://wsa127.uits.indiana.edu:3306/$${datasource.username}" 
    					   value="mysql.datasource.url=jdbc:mysql://localhost:3306/$${datasource.username}" />
    		<replacefilter token="oracle.datasource.url=jdbc:oracle:thin:@esdb12-k.uits.indiana.edu:1521:KUALI" 
    					   value="oracle.datasource.url=jdbc:oracle:thin:@localhost:1521:KUALI" />
    	</replace>
    	
    	<copy file="temp/${release.kfs.cvs.module}/build/README.txt" todir="temp" />
    	
    	<!-- dump a file with the extracted tags -->
    	<echo file="temp/release-details.txt">
KFS Tag: ${release.kfs.cvs.tag}
Demo Dataset Tag: ${release.demo.dataset.cvs.tag}
Bootstrap Dataset Tag: ${release.bootstrap.dataset.cvs.tag}
Impex Tag: ${release.impex.tool.cvs.tag}
Rice Tag: ${release.rice.cvs.tag}
Workflow Tag: ${release.workflow.cvs.tag}   	
    	</echo>
    	
    	<!-- zip it up -->
    	<zip destfile="${release.zip.name}">
    		<zipfileset dir="temp/${release.kfs.cvs.module}" prefix="kuali-financial-system">
    			<exclude name="build-foundation.xml" />
    			<exclude name=".apt_generated" />
    		</zipfileset>
            <zipfileset dir="temp/demo-dataset" prefix="demo-data-set">
                <exclude name=".project" />
            </zipfileset>
            <zipfileset dir="temp/bootstrap-dataset" prefix="bootstrap-data-set">
                <exclude name=".project" />
            </zipfileset>
            <zipfileset dir="temp/impex" prefix="database-import-export" />
            <zipfileset dir="temp/${release.rice.cvs.module}" prefix="kuali-rice" />
            <zipfileset dir="${release.patches.dir}" prefix="patches" />
    		<zipfileset dir="temp" prefix="">
    			<include name="workflow_${workflow.version}.zip" />
    			<include name="README.txt" />
    			<include name="release-details.txt" />
    		</zipfileset>
    	</zip>
    	<delete dir="temp" verbose="false" />
    </target>
    
    <target name="setup-rice" depends="init-property-files">
        <condition property="os.safe.driver.path" value="c:${drivers.directory}/ojdbc14.jar">
            <os family="windows"/>
        </condition>
        <property name="os.safe.driver.path" value="${drivers.directory}/ojdbc14.jar" />
        <maven goals="install:install-file" options="-U -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.1.0.3.0 -Dpackaging=jar -Dfile=${os.safe.driver.path}" />
        <copy todir="${user.home}/kuali">
            <fileset dir="${build.user.directory}/${ant.project.name}" includes="**/**" />
            <filterset>
                <filter token="dev-rice-password" value="${rice.datasource.password.dev}" />
                <filter token="test-rice-password" value="${rice.datasource.password.test}" />
            </filterset>
        </copy>
        <maven goals="clean:clean install source:jar javadoc:jar" options="-U -Pinstall-kns-dev -Dpackaging=jar" />
        <touch file="${rice.project.directory}/pom.xml" />
    </target>
    
    <target name="update-rice-dev" depends="update-rice-basic,dist-local" />
    
    <target name="update-rice" depends="update-rice-basic,update-rice-extended,dist-local" />
    
    <target name="update-rice-basic" depends="init-property-files,update-rice-jars,update-rice-web" />
    
    <target name="update-rice-jars" depends="init-property-files">
        <delete>
            <fileset dir="${basedir}" includes="${lib.directory}/${rice.output.file.prefix}${rice.output.lib.suffix}" />
        </delete>
        <maven goals="clean:clean package" />
        <copy todir="${lib.directory}" flatten="true">
            <fileset dir="${rice.project.directory}" includes="${rice.output.directories}${rice.output.file.prefix}${rice.version}${rice.output.lib.suffix}" excludes="${rice.excludes}" />
        </copy>
        <get src="https://onestart.iu.edu/dav/MY/maven-mirror/maven2/${workflow.name}/${workflow.name}/${workflow.version}/${workflow.name}-${workflow.version}.jar" dest="${basedir}/${lib.directory}/${rice.name}-${workflow.name}-${workflow.version}.jar" />
    </target>
    
    <target name="update-rice-web" depends="init-property-files">
        <delete>
            <fileset dir="${build.project.directory}" includes="${rice.name}*${rice.output.web.suffix}" />
        </delete>
        <zip destfile="${build.project.directory}/${rice.name}-${rice.version}${rice.output.web.suffix}" basedir="${rice.sampleapp.directory}" includes="${rice.application}/**/**,${tags.directory}/${rice.application}/**/*.tag,${workflow.application}/**/**,${ksb.application}/**/**" excludes="**/CVS" />
    </target>
    
    <target name="update-rice-extended" depends="init-property-files,update-rice-kuali-dependencies,update-rice-licenses" />
    
    <target name="update-rice-kuali-dependencies" depends="init-property-files">
        <delete>
            <fileset dir="${dependencies.project.directory}" includes="${rice.output.file.prefix}" />
        </delete>
        <maven goals="source:jar javadoc:jar" />
        <copy todir="${dependencies.project.directory}">
            <fileset dir="${rice.project.directory}" includes="${rice.output.directories}${rice.output.file.prefix}${rice.version}${rice.output.src.suffix},${rice.output.directories}${rice.output.file.prefix}${rice.version}${rice.output.doc.suffix}" excludes="${rice.excludes}" />
            <chainedmapper>
                <flattenmapper />
                <globmapper from="*.jar" to="*.zip" />
            </chainedmapper>
        </copy>
        <!--<property name="${workflow.application}.workflow.environment" value="${build.environment}" />
        <property name="${workflow.application}.tomcat5.home" value="${appserver.home}" />
        <property name="${workflow.application}.plugin.dir" value="${basedir}" />
        <property name="${workflow.application}.institution" value="${ant.project.name}" />
        <property name="${workflow.application}.src.dist.loc" value="${workflow.project.directory}/dist" />
        <propertyset id="en-properties">
            <propertyref prefix="${workflow.application}."/>
            <mapper type="glob" from="${workflow.application}.*" to="*"/>
        </propertyset>
        <ant dir="${workflow.project.directory}" target="bundle-workflow" inheritall="false">
            <propertyset refid="${workflow.application}-properties" />
        </ant>
        <copy file="${workflow.project.directory}/dist/workflow_${workflow.version}.zip" tofile="${dependencies.project.directory}/${rice.name}-${workflow.name}-${workflow.version}-src.zip" overwrite="true"/>
        <ant dir="${workflow.project.directory}" target="clean" inheritall="false"/>
        <ant dir="${workflow.project.directory}" target="javadoc" inheritall="false">
            <propertyset refid="${workflow.application}-properties" />
        </ant>
        <zip destfile="${dependencies.project.directory}/${rice.name}-${workflow.name}-${workflow.version}-doc.zip" basedir="${workflow.project.directory}/dist/api" />-->
    </target>
    
    <target name="update-rice-licenses" depends="init-property-files">
        <zip destfile="${build.project.directory}/${rice.name}-${rice.version}-licenses.zip" basedir="${rice.project.directory}/${licenses.directory}" excludes="**/CVS" />
    </target>
    
    <macrodef name="maven">
        <attribute name="goals" />
        <attribute name="options" default="--offline" />
        <sequential>
            <java classname="org.codehaus.classworlds.Launcher" dir="${rice.project.directory}" fork="true" failonerror="true">
                <arg line="@{options} @{goals}"/>
                <sysproperty key="classworlds.conf" value="${maven.home.directory}/bin/m2.conf"/>
                <sysproperty key="maven.home" value="${maven.home.directory}"/>
                <sysproperty key="maven.test.skip" value="true"/>
                <classpath>
                    <fileset dir="${maven.home.directory}/boot">
                        <include name="classworlds-*.jar"/>
                    </fileset>
                </classpath>
            </java>
        </sequential>
    </macrodef>
</project>

!$id:
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!       Purpose: Account Labor Transactions Report
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#include "fis_error.h"
#include "fis_check.h"
#include "fis_common.h"
#include "fis_enter.h"

begin-setup

   declare-layout default
      max-lines=62
      max-columns=137
      left-margin=0
      top-margin=0
   end-declare

  Begin-SQL on-error=skip 
   CREATE TABLE fis_lodall_holdbene_mt
!   TABLESPACE FIS04
   NOLOGGING
     AS
      SELECT
        USERENV('SESSIONID') as sesid,
        a.univ_fiscal_yr,
        a.fin_coa_cd,
        a.fin_object_cd,
        b.pos_frng_bene_pct as total_rate
      FROM
        ld_lbr_obj_bene_t a,
        ld_benefits_calc_t b
      WHERE (1 = 0)
  End-SQL

end-setup


begin-heading 16

   #debug display 'entering HEADING'

   if #print_lf = 0
      #debug9 display '- printing linefeed'
      let $lb = chr(12) 
      print $lb (1,1)
    !  print ' .' (,2) 
      print '.' (,3) 
      let #print_lf = 1
   end-if

!   if #change_page_number = 1
!      #debug display '- change_page_number is set'
!      let #page_number = 1
!      let #change_page_number = 0
!   else
!      let #page_number = #page_number + 1
!   end-if

!   #debug display 'current page number is ' NOLINE
!   #debug display #page_number

!  IUIS carriage control character
!    NOT printing this, for now.
!   print '1' (,1)

   ! add a couple spaces to the first line on each page.
   print '  ' (,1)
   print $report_date (+2,2)

   if ( $include_payroll_accr = 'N' )
      let $accrual_msg = '*** NON ACCRUAL REPORT ***'
   else
      let $accrual_msg = ''
   end-if
   print $accrual_msg (,38)

   print 'PAGE' (,121)
   print #page_number (,125,8) edit 99999999
   print 'ACCOUNT NUMBER:' (+1,83)
   print $old_account_nbr (,105,7)
   print $old_sub_acct_nbr (,114,5)
   print $old_fin_coa_cd (,121,2)

   print 'FOR THE MONTH ENDING ' (+1,2)
   print $display_for_month (,23)
   print 'EFFECTIVE DATE:' (,38)
   print $old_acct_effect_dt (,55)
   print 'FISCAL OFFICER:' (,83)
   print $old_mgr_person_nm (,105,27)

   print 'PERIOD:' (+1,2)
   print $display_univ_fscpd_cd (,10) edit 99
   print 'EXPIRATION DATE:' (,38)
   print $old_acct_expiration_dt (,55)
   print 'ACCOUNT TITLE:' (,83)
   print $old_account_nm (,105,27)

   print 'ACCOUNT LABOR TRANSACTIONS' (+1,2)
   print 'SUB FUND GROUP:' (,38)
   print $old_sub_fund_grp_cd (,54)
   print 'SUB-ACCOUNT TITLE:' (,83)
   print $old_sub_acct_nm (,105,27)

   print 'REPORT ID:  ACCT_LABOR_TRANS' (+1,2)
   print 'ORGANIZATION TITLE:' (,83)
   print $old_org_nm (,105, 27)
 
   if ( $include_payroll_accr = 'N' ) 
      let $accrual_msg = '*** NON ACCRUAL REPORT ***'
   else 
      let $accrual_msg = ''
   end-if

   print 'RC TITLE:' (+1,83)
   print $old_rc_shrt_nm (,105,27)
   print 'SUB' (+3,7)
   print 'PAY' (,56)
   print 'CALCULATED' (,94)

   print 'OBJ' (+1,2)
   print 'OBJ' (,7)
   print 'EMPLOYEE' (,27)
   print 'NEW' (,40)
   print 'PERIOD' (,48)
   print 'GRP' (,56)
   print 'ERN' (,60)
   print 'BENEFIT' (,95)
   print 'DOC' (,108)
   print 'A21' (,133)

   print 'CDE' (+1,2)
   print 'CDE' (,7)
   print 'PERSON' (,15)
   print 'ID NUMBER' (,27)
   print 'POSN' (,40)
   print 'END DATE' (,47)
   print 'CDE' (,56)
   print 'CDE' (,60)
   print 'HOURS' (,66)
   print 'AMOUNT' (,80)
   print 'AMOUNT' (,96)
   print 'TYP' (,108)
   print 'DOC NBR' (,115)
   print 'PERIOD' (,132)

   print '---' (,2)
   print '---' (,7)
   print '---------------' (,11)
   print '---------' (,27)
   print '--------' (,38)
   print '--------' (,47)
   print '---' (,56)
   print '---' (,60)
   print '---------' (,64)
   print '---------------' (,75)
   print '---------------' (,92)
   print '---' (,108)
   print '----------------' (,113)
   print '-------' (,131,7)

   if #change_page_number = 1
      #debug display '- change_page_number is set'
      let #page_number = 1
      let #change_page_number = 0
   else
      let #page_number = #page_number + 1
   end-if

   #debug display 'current page number is ' NOLINE
   #debug display #page_number

   let #line_count = 0
   ! let #print_lf = 0

end-heading


begin-program

  Do EnterParameters

  Do PrepareData

  Do ProcessRegYear

  Do CleanupData



end-program


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

begin-procedure EnterParameters

   ! in fis_common.h:
   Do SetConstantGlobal

   Do EnterFiscalYear
   let $where_univ_fiscal_yr = $year_fiscal_cur
   display 'Fiscal year = ' NOLINE
   display $where_univ_fiscal_yr

   Do EnterFiscalPeriod
   let $display_univ_fscpd_cd = $fiscal_period

   ! for period 13, gather data from both periods 12 & 13
   ! also, use prior year acct & org tables
   if ( $fiscal_period = '13' )
     let $where_univ_fscpd_cd = ' a.univ_fiscal_prd_cd in ( ''12'', ''13'' ) '
     let $acct_table_nm = 'CA_PRIOR_YR_ACCT_T b,'
     let $org_table_nm = 'CA_PRIOR_YR_ORG_T c,'

   ! for all other periods, just gather data from specified period
   ! use normal account & org tables
   else
     let $where_univ_fscpd_cd = ' a.univ_fiscal_prd_cd = ''' || $fiscal_period || ''''
     let $acct_table_nm = 'CA_ACCOUNT_T b,'
     let $org_table_nm = 'CA_ORG_T c,'
   end-if


  display 'Fiscal period = ' NOLINE
   display $where_univ_fscpd_cd

   ! include or exclude Payroll accruals
   ! this assumes that payroll accruals are the only ES object type code value
   input $include_payroll_accr 'Include Payroll Accruals? (Y/N)'
   let $where_payroll_accr = ''
   if ( $include_payroll_accr = 'N' )
      let $where_obj_typ_cds = ' a.fin_obj_typ_cd IN (''EX'') '
   else 
      let $where_obj_typ_cds = ' a.fin_obj_typ_cd IN (''EX'',''ES'') '
   end-if
   display $where_obj_typ_cds

!   Do EnterChart
   let $chart_clause = ' 1=1 '
   display $chart_clause
!   let $where_fin_coa_cd = '(''BL'',''BA'',''UA'')'

   let #calendar_yr = to_number( $where_univ_fiscal_yr )
   let #fiscal_period = to_number( $fiscal_period )
   if ( #fiscal_period <= 6 )
      let #calendar_yr = #calendar_yr - 1
   end-if
   let $calendar_yr = to_char( #calendar_yr )

   ! determine the number of days in February for the current year
   Do SetFebruaryEnd( #calendar_yr, $feb_day_last )

   evaluate $display_univ_fscpd_cd
      when = '01'
         let $display_for_month = 'JULY 31, ' || $calendar_yr
         break
      when = '02'
         let $display_for_month = 'AUG. 31, ' || $calendar_yr
         break
      when = '03'
         let $display_for_month = 'SEP. 30, ' || $calendar_yr
         break
      when = '04'
         let $display_for_month = 'OCT. 31, ' || $calendar_yr
         break
      when = '05'
         let $display_for_month = 'NOV. 30, ' || $calendar_yr
         break
      when = '06'
         let $display_for_month = 'DEC. 31, ' || $calendar_yr
         break
      when = '07'
         let $display_for_month = 'JAN. 31, ' || $calendar_yr
         break
      when = '08'
         let $display_for_month = 'FEB. ' || $feb_day_last || ', ' || $calendar_yr
         break
      when = '09'
         let $display_for_month = 'MAR. 31, ' || $calendar_yr
         break
      when = '10'
         let $display_for_month = 'APR. 30, ' || $calendar_yr
         break
      when = '11'
         let $display_for_month = 'MAY 31, ' || $calendar_yr
         break
      when = '12'
         let $display_for_month = 'JUNE 30, ' || $calendar_yr
         break
      when = '13'
         let $display_for_month = 'JUNE 30, ' || $calendar_yr
         break
      when-other
         let $display_for_month = ' '
   end-evaluate

end-procedure

begin-procedure PrepareData

  #debug display 'entering PrepareData'

BEGIN-SQL
INSERT INTO fis_lodall_holdbene_mt
SELECT
     USERENV('SESSIONID'),
     a.univ_fiscal_yr, 
     a.fin_coa_cd, 
     a.fin_object_cd,
     sum(b.pos_frng_bene_pct)
  FROM
     LD_LBR_OBJ_BENE_T a,
     LD_BENEFITS_CALC_T b
  WHERE   
      a.univ_fiscal_yr = b.univ_fiscal_yr
  AND a.fin_coa_cd = b.fin_coa_cd
  AND a.finobj_bene_typ_cd = b.pos_benefit_typ_cd
  AND a.univ_fiscal_yr = [$where_univ_fiscal_yr]
  AND [$chart_clause]
  GROUP BY 
     USERENV('SESSIONID'),
     a.univ_fiscal_yr, 
     a.fin_coa_cd, 
     a.fin_object_cd
END-SQL


end-procedure !Prepare_Data


begin-procedure ProcessRegYear

   #debug display 'entering ProcessRegYear'

   let #page_number = 1
 !  let #print_lf = 1
   let #is_first = 1
   let #line_count = 0
   let #max_lines = 49
   let #line_spawned_header = 0
   let #account_hours_total = 0
   let #account_amt_total = 0
   let #account_bene_total = 0
   let #object_cd_hours_total = 0
   let #object_cd_amt_total = 0
   let #object_cd_bene_total = 0
   let #person_hours_total = 0
   let #person_amt_total = 0
   let #person_bene_total = 0
   let $BLANK = ''

BEGIN-SELECT
TO_CHAR(SYSDATE, 'MM/DD/YY')             &report_date
a.fin_coa_cd                             &fin_coa_cd
a.account_nbr || NVL(a.sub_acct_nbr, '-----') () ON-BREAK SAVE=$account_sub_acct level=2 PRINT=NEVER
a.account_nbr                            ()  ON-BREAK SAVE=$account_nbr level=1 PRINT=NEVER
a.fdoc_typ_cd                            &fdoc_typ_cd
a.fin_object_cd                          ()  ON-BREAK SAVE=$fin_object_cd level=4 PRINT=NEVER
a.fin_balance_typ_cd                     &fin_balance_typ_cd
a.fin_obj_typ_cd                         &fin_obj_typ_cd
a.fin_sub_obj_cd                         ()  ON-BREAK SAVE=$fin_sub_obj_cd level=5 PRINT=NEVER
a.fs_origin_cd                           &fs_origin_cd
a.fdoc_nbr                               &fdoc_nbr
TO_CHAR(a.pay_period_end_dt,'MM/DD/YY')  ()  ON-BREAK SAVE=$pay_period_end_dt level=8  PRINT=NEVER
a.paygroup                               &paygroup
a.erncd                                  &erncd
a.position_nbr                           ()  ON-BREAK SAVE=$position_nbr level=7 PRINT=NEVER
TO_CHAR(a.pyrl_dt_fscl_yr, '9999')       &pyrl_dt_fscl_yr
a.pyrl_dt_fsclprd_cd                     &pyrl_dt_fsclprd_cd
NVL(a.sub_acct_nbr,'-----')              ()  ON-BREAK SAVE=$sub_acct_nbr level=3 PRINT=NEVER
a.trn_debit_crdt_cd                      &trn_debit_crdt_cd
a.trn_ldgr_entr_amt                      &trn_ldgr_entr_amt
a.trn_ldgr_entr_desc                     &trn_ldgr_entr_desc
a.trn_total_hr                           &trn_total_hr
a.univ_fiscal_prd_cd                     &univ_fiscal_prd_cd
TO_CHAR(b.acct_effect_dt,'MM/DD/YY')     &acct_effect_dt
TO_CHAR(b.acct_expiration_dt,'MM/DD/YY') &acct_expiration_dt
b.account_nm                             &account_nm
b.sub_fund_grp_cd                        &sub_fund_grp_cd
c.org_nm                                 &org_nm
d.rc_shrt_nm                             &rc_shrt_nm
NVL(e.PRSN_PYRL_ID, '          ') || '  ' || a.fdoc_typ_cd  ()  ON-BREAK SAVE=$person_unvl_id level=6 PRINT=NEVER 
DECODE(a.fdoc_typ_cd, 'PAYA', 'ACCR- ' || e.person_nm, 'PAYN', 'REVR- ' || e.person_nm, e.person_nm)  &person_nm
f.univ_fiscal_prd_nm                     &univ_fiscal_prd_nm
h.sub_acct_nm                            &sub_acct_nm
m.person_nm as mgr_person_nm             &mgr_person_nm
(a.trn_ldgr_entr_amt * (i.total_rate * .01)) as bene_total    &bene_total

   let #new-page = 0

   let $old_fin_coa_cd = $fin_coa_cd
   let $old_acct_effect_dt = $acct_effect_dt
   let $old_mgr_person_nm = $mgr_person_nm
   let $old_acct_expiration_dt = $acct_expiration_dt
   let $old_account_nm = $account_nm
   let $old_sub_fund_grp_cd = $sub_fund_grp_cd
   let $old_sub_acct_nm = $sub_acct_nm
   let $old_org_nm = $org_nm
   let $old_rc_shrt_nm = $rc_shrt_nm
 
   let $report_date = &report_date
   let $fdoc_typ_cd = &fdoc_typ_cd
   let $fin_balance_typ_cd = &fin_balance_typ_cd
   let $fin_obj_typ_cd = &fin_obj_typ_cd
   let $fs_origin_cd = &fs_origin_cd
   let $fdoc_nbr = &fdoc_nbr
   let $paygroup = &paygroup
   let $erncd = &erncd
   let $fin_coa_cd = &fin_coa_cd
   let $pyrl_dt_fscl_yr = &pyrl_dt_fscl_yr
   let $pyrl_dt_fsclprd_cd = &pyrl_dt_fsclprd_cd

   let $trn_debit_crdt_cd = &trn_debit_crdt_cd
   let #trn_ldgr_entr_amt = &trn_ldgr_entr_amt
   let #bene_total = &bene_total
   if $trn_debit_crdt_cd = 'C'
      let #trn_ldgr_entr_amt = #trn_ldgr_entr_amt * -1
      let #bene_total = #bene_total * -1
   end-if

   let $trn_ldgr_entr_desc = &trn_ldgr_entr_desc
   let #trn_total_hr = &trn_total_hr
   let $univ_fiscal_prd_cd = &univ_fiscal_prd_cd
   let $acct_effect_dt = &acct_effect_dt
   let $acct_expiration_dt = &acct_expiration_dt
   let $account_nm = &account_nm
   let $sub_fund_grp_cd = &sub_fund_grp_cd
   let $org_nm = &org_nm
   let $rc_shrt_nm = &rc_shrt_nm
   let $univ_fiscal_prd_nm = &univ_fiscal_prd_nm
   let $sub_acct_nm = &sub_acct_nm
   let $mgr_person_nm = &mgr_person_nm

   !let $line_count = #line_count
   !let $this_line = $sub_acct_nbr || '  Line:' || $line_count
   !display $this_line

   if ( #is_first = 0 and $person_unvl_id != $BLANK and #new-page = 0 )
      #debug display 'person_unvl_id is not blank'
      let #person_sub_total = 0
      evaluate $old_fin_object_cd
         when = '2500'
            let #person_sub_total = 1
            break
         when = '2502'
            let #person_sub_total = 1
            break
         when = '2504'
            let #person_sub_total = 1
            break
         when = '3000'
            let #person_sub_total = 1
            break
         when = '3100'
            let #person_sub_total = 1
            break
         when = '3150'
            let #person_sub_total = 1
            break
         when = '3200'
            let #person_sub_total = 1
            break
         when = '3210'
            let #person_sub_total = 1
            break
         when = '3250'
            let #person_sub_total = 1
            break
         when = '3300'
            let #person_sub_total = 1
            break
         when = '3400'
            let #person_sub_total = 1
            break
         when = '3500'
            let #person_sub_total = 1
            break
         when = '3600'
            let #person_sub_total = 1
            break
         when = '3700'
            let #person_sub_total = 1
            break
         when = '3800'
            let #person_sub_total = 1
      end-evaluate

      if #person_sub_total = 1
          #debug display 'person_sub_total is set'
          if #line_count < #max_lines
             #debug display 'line_count < max_lines -- printing person TOTAL line'
             print '**TOTAL' (,48)
             print #person_hours_total (,64,9) edit 999999.99
             print #person_amt_total (,76,14) edit 999,999,999.99
             print #person_bene_total (,93,14) edit 999,999,999.99
             print ' ' (,126,7)
             let #line_count = #line_count + 1
          else
             #debug display 'line_count >= max_lines -- new-page, then printing person TOTAL line'
             NEW-PAGE
             let #new-page = 1
             print '**TOTAL' (,48)
             print #person_hours_total (,64,9) edit 999999.99
             print #person_amt_total (,76,14) edit 999,999,999.99
             print #person_bene_total (,93,14) edit 999,999,999.99
             print ' ' (,126,7)
             let #line_count = #line_count + 1
             let #line_spawned_header = 1
          end-if
      end-if

      let #person_hours_total = 0
      let #person_amt_total = 0
      let #person_bene_total = 0
      let $old_person_unvl_id = $person_unvl_id
   end-if

   if ( #is_first = 0 and $fin_object_cd != $BLANK )
!   if ( #is_first = 0 and $fin_object_cd != $BLANK and #new-page = 0 )
      #debug display 'fin_object_cd is not blank, and no previous new-page'
      if #line_count < #max_lines - 4
         #debug display 'line_count < (max_lines-4) -- printing object code TOTAL line'
         let $line = '***TOTAL FOR ' || $old_fin_object_cd
         print $line (+1,2)
         print #object_cd_hours_total (,64,9) edit 999999.99
         print #object_cd_amt_total (,76,14) edit 999,999,999.99
         print #object_cd_bene_total (,93,14) edit 999,999,999.99
         print ' ' (+2,126,7)
         let #line_count = #line_count + 4
      else
         #debug display 'line_count >= (max_lines-4) -- new-page, then printing object code TOTAL line'
         NEW-PAGE
         let #new-page = 1
         let $line = '***TOTAL FOR ' || $old_fin_object_cd
         print $line (+1,2)
         print #object_cd_hours_total (,64,9) edit 999999.99
         print #object_cd_amt_total (,76,14) edit 999,999,999.99
         print #object_cd_bene_total (,93,14) edit 999,999,999.99
         print ' ' (+2,126,7)
         let #line_count = #line_count + 4
         let #line_spawned_header = 1
      end-if
      let #object_cd_hours_total = 0
      let #object_cd_amt_total = 0
      let #object_cd_bene_total = 0
      let $old_fin_object_cd = $fin_object_cd
   end-if


   if ( #is_first = 0 and $account_nbr != $BLANK )
!   if ( #is_first = 0 and $account_nbr != $BLANK and #new-page = 0 )
      #debug display 'account_nbr is not blank, and no previous new-page'
      #debug display 'totals for account_nbr: ' NOLINE
      #debug display $old_account_nbr
      if #line_count < #max_lines - 5
         #debug display 'line_count < (max_lines-5) -- printing account number TOTAL line'
         let $line = '**TOTAL FOR ' || $old_account_nbr
         print $line (+4,2)
         print #account_hours_total (,64,9) edit 999999.99
         print #account_amt_total (,76,14) edit 999,999,999.99
         print #account_bene_total (,93,14) edit 999,999,999.99
         print ' ' (,126,7)
      else
         #debug display 'line_count >= (max_lines-5) -- new-page, then printing account number TOTAL line'
         NEW-PAGE
         let #new-page = 1
         let $line = '**TOTAL FOR ' || $old_account_nbr
         print $line (+4,2)
         print #account_hours_total (,64,9) edit 999999.99
         print #account_amt_total (,76,14) edit 999,999,999.99
         print #account_bene_total (,93,14) edit 999,999,999.99
         print ' ' (,126,7)
      end-if

      let #account_hours_total = 0
      let #account_amt_total = 0
      let #account_bene_total = 0
      let #change_page_number = 1
      #debug display 'another new-page for account_nbr change'
      NEW-PAGE
      let #new-page = 1
      let $old_account_nbr = $account_nbr
      let $old_sub_acct_nbr = $sub_acct_nbr
!   end-if
   else
!    if ( #is_first = 0 and $sub_acct_nbr != $old_sub_acct_nbr and #new-page = 0 )
!    if ( #is_first = 0 and $sub_acct_nbr != $BLANK and #new-page = 0 )
    if ( #is_first = 0 and $sub_acct_nbr != $BLANK )
!   if ( #is_first = 0 and $account_sub_acct != $BLANK and #new-page = 0 )
      #debug display 'account_sub_acct is not blank'
      let #change_page_number = 1
      let #line_spawned_header = 1
      NEW-PAGE
      let #new-page = 1
      let $old_sub_acct_nbr = $sub_acct_nbr
      let $old_account_sub_acct = $account_sub_acct
!      let $old_account_nbr = $account_nbr
    end-if  ! sub_acct 
   end-if  ! account

   if #is_first = 1
      #debug display 'is_first is set-- filling old_ vars'
      let $old_account_sub_acct = $account_sub_acct
      let $old_account_nbr = $account_nbr
      let $old_sub_acct_nbr = $sub_acct_nbr
      let $old_fin_object_cd = $fin_object_cd
      let $old_person_unvl_id = $person_unvl_id
   end-if

   if ( #line_count >= #max_lines and #new-page = 0 )
      #debug display 'line count >= max_lines -- calling new-page, and setting line_spawned_header'
      NEW-PAGE
      let #line_spawned_header = 1
   end-if

   if #line_spawned_header = 1
      #debug display 'line_spawned_header is set'
      if $fin_object_cd = $BLANK
         let $fin_object_cd = $old_fin_object_cd
      end-if
      if $person_unvl_id = $BLANK
         let $old_person_unvl_id = $person_unvl_id
      end-if
      let #line_spawned_header = 0
   end-if

   let $person_nm = $BLANK
   if $person_unvl_id != $BLANK
      #debug display 'person_unvl_id is not blank' 
      let $person_nm = &person_nm

      ! picking the name out of the description field is a pain!
      ! just join emplid to user table and get name there
      if ( $fdoc_typ_cd = 'ST' or $fdoc_typ_cd = 'BT' )
         let $person_nm = substr($trn_ldgr_entr_desc,1,15)
      else
         let #in_group = 0
         evaluate $old_fin_object_cd
            when = '5600'
               let #in_group = 1
               break
            when = '5610'
               let #in_group = 1
               break
            when = '5625'
               let #in_group = 1
               break
            when = '5700'
               let #in_group = 1
               break
            when = '5760'
               let #in_group = 1
               break
            when = '5765'
               let #in_group = 1
               break
            when = '5770'
               let #in_group = 1
               break
            when = '5771'
               let #in_group = 1
               break
            when = '5772'
               let #in_group = 1
               break
            when = '5773'
               let #in_group = 1
               break
            when = '5775'
               let #in_group = 1
         end-evaluate

         if #in_group = 1
!            let $person_nm = substr($trn_ldgr_entr_desc,13,15)
            let $person_nm = $trn_ldgr_entr_desc

!         else
!            let $person_nm = substr($trn_ldgr_entr_desc,6,15)

         end-if
      end-if
   end-if

   let $a21_period = $pyrl_dt_fscl_yr || '/' || $pyrl_dt_fsclprd_cd
   let $a21_period = ltrim($a21_period, ' ')
   let $doc_nbr = $fs_origin_cd || '/' || $fdoc_nbr

   let #x5000_amount = #trn_ldgr_entr_amt
   let #x5000_bene_amt = #bene_total
   evaluate $old_fin_object_cd
      when = '5625'
         let #x5000_amount = 0
         let #x5000_bene_amt = 0
         break
      when = '5760'
         let #x5000_amount = 0
         let #x5000_bene_amt = 0
         break
      when = '5771'
         let #x5000_amount = 0
         let #x5000_bene_amt = 0
         break
      when = '5772'
         let #x5000_amount = 0
         let #x5000_bene_amt = 0
         break
      when = '5773'
         let #x5000_amount = 0
         let #x5000_bene_amt = 0
         break
   end-evaluate


   #debug print #line_count (,1,2)

   print $fin_object_cd (,2,4)
   print $fin_sub_obj_cd (,7,3)
   print $person_nm (,11,15) 
   print $person_unvl_id (,27,10)
   print $position_nbr (,38,8)
   print $pay_period_end_dt (,47,8)
   print $paygroup (,56,3)
   print $erncd (,60,3)
   print #trn_total_hr (,64,9) edit 999999.99
   print #trn_ldgr_entr_amt (,76,14) edit 999,999,999.99 
   print #bene_total (,93,14) edit 999,999,999.99 
   print $fdoc_typ_cd (,108,4)
   print $doc_nbr (,113,17)
   print $a21_period (,131,7)

   let #account_hours_total = #account_hours_total + #trn_total_hr
   let #account_amt_total = #account_amt_total + #x5000_amount 
   let #account_bene_total = #account_bene_total + #x5000_bene_amt
   let #object_cd_hours_total = #object_cd_hours_total + #trn_total_hr
   let #object_cd_amt_total = #object_cd_amt_total + #trn_ldgr_entr_amt
   let #object_cd_bene_total = #object_cd_bene_total + #bene_total
   let #person_hours_total = #person_hours_total + #trn_total_hr
   let #person_amt_total = #person_amt_total + #trn_ldgr_entr_amt
   let #person_bene_total = #person_bene_total + #bene_total

   let #new-page = 0
   let #is_first = 0  
   let #line_count = #line_count + 1
   let $account_sub_acct = $BLANK
   let $account_nbr = $BLANK
   let $fin_object_cd = $BLANK
   let $fin_sub_obj_cd = $BLANK
 !  always print pay period end date
 !   let $pay_period_end_dt = $BLANK
 !  always print position nbr
 !   let $position_nbr = $BLANK
   let $sub_acct_nbr = $BLANK
   let $person_unvl_id = $BLANK

FROM
          ld_ldgr_entr_t a,
 ! something like the following syntax used to be possible,
 ! but I cannot figure out how to make it work.
 !         [ ca_account_t b, : $acct_table_nm ]
 !         [ ca_org_t c, : $org_table_nm ]
          ca_account_t b,
          ca_org_t c,
          ca_rc_t d,
          fs_universal_usr_t e,
          sh_acct_period_t f,
          ca_sub_fund_grp_t g,
          ca_sub_acct_t h,
	  fis_lodall_holdbene_mt i,
	  fs_universal_usr_t m

WHERE     a.univ_fiscal_yr = [$where_univ_fiscal_yr]
 ! AND       a.fin_obj_typ_cd IN ('EX','ES')
AND       [$where_obj_typ_cds]
AND       a.fin_balance_typ_cd = 'AC'
 ! AND       a.univ_fiscal_prd_cd = [$where_univ_fscpd_cd]
AND [$where_univ_fscpd_cd]
 ! AND       a.fin_coa_cd in [$where_fin_coa_cd]
AND [$chart_clause]
 ! [$where_payroll_accr]
AND       a.account_nbr = b.account_nbr (+)
AND       a.fin_coa_cd = b.fin_coa_cd (+)

AND       b.fin_coa_cd = c.fin_coa_cd (+)
AND       b.org_cd = c.org_cd (+)

AND       c.rc_cd = d.rc_cd (+)

AND       a.emplid = e.PRSN_PYRL_ID (+)

AND       b.acct_mgr_unvl_id = m.person_unvl_id (+)

AND       a.univ_fiscal_yr = f.univ_fiscal_yr (+)
AND       a.univ_fiscal_prd_cd = f.univ_fiscal_prd_cd (+)

AND       b.sub_fund_grp_cd = g.sub_fund_grp_cd (+)

AND       a.fin_coa_cd = h.fin_coa_cd (+)
AND       a.account_nbr = h.account_nbr (+)
AND       a.sub_acct_nbr = h.sub_acct_nbr (+)

AND       a.univ_fiscal_yr = i.univ_fiscal_yr (+)
AND       a.fin_coa_cd = i.fin_coa_cd (+)
AND       a.fin_object_cd = i.fin_object_cd (+)
AND       i.sesid (+) = USERENV('SESSIONID')

! #debug AND rownum < 1001

ORDER BY  a.account_nbr,
          a.sub_acct_nbr,
	  a.univ_fiscal_prd_cd,
	  a.fin_object_cd,
	  a.fin_sub_obj_cd,
          a.fdoc_typ_cd,
	  e.person_nm,
	  e.person_unvl_id,
	  a.position_nbr,
	  a.pay_period_end_dt,
	  a.paygroup,
	  a.erncd  

END-SELECT


end-procedure !ProcessRegYear



! remove records from temp table
begin-procedure CleanupData

! note that use of DROP TABLE precludes the possibility of concurrent
! executions of this report.
Begin-SQL
  DROP TABLE fis_lodall_holdbene_mt
 ! DELETE FROM fis_lodall_holdbene_mt
 ! WHERE sesid = USERENV('SESSIONID')
End-Sql

end-procedure




/*
 * Copyright 2008 The Kuali Foundation.
 * 
 * Licensed under the Educational Community License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.opensource.org/licenses/ecl1.php
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kuali.kfs.coa.service.impl;

import org.kuali.kfs.coa.businessobject.Organization;
import org.kuali.kfs.coa.service.OrganizationService;
import org.kuali.kfs.sys.context.SpringContext;
import org.kuali.rice.kim.bo.types.dto.AttributeSet;
import org.kuali.rice.kim.bo.types.impl.KimAttributesTranslatorBase;
import org.kuali.rice.kim.util.KimConstants;

/**
 * 
 * This class is an implementation of the KimAttributesTranslator interface 
 * for converting from a chartOfAccountsCode and organizationCode property to a campusCode.
 *
 * The translator should return all attributes passed in as well as the additional attribute (campusCode) generated by the translator.
 *
 * If the target attribute already exists, do not run the conversion - just return the original AttributeSet.
 */
public class CampusAttributesTranslator extends KimAttributesTranslatorBase {

    /***
     * @see org.kuali.rice.kim.bo.types.impl.KimAttributesTranslatorBase#translateAndAddAttributes(org.kuali.rice.kim.bo.types.dto.AttributeSet)
     */
    public AttributeSet translateAttributes(final AttributeSet attributes){
        //Translate chartOfAccountsCode and organizationCode property to campusCode and add
        if(attributes.get(KimConstants.KIM_ATTRIB_CAMPUS_CODE)!=null)
            return attributes;
        AttributeSet translatedAttributes = new AttributeSet();
        translatedAttributes.putAll(attributes);
        Organization org = ((OrganizationService)SpringContext.getBean(OrganizationService.class)).getByPrimaryId(
                attributes.get(KimConstants.KIM_ATTRIB_CHART_CODE), attributes.get(KimConstants.KIM_ATTRIB_ORGANIZATION_CODE));
        if(org!=null && org.getOrganizationPhysicalCampus()!=null)
            translatedAttributes.put(KimConstants.KIM_ATTRIB_CAMPUS_CODE, org.getOrganizationPhysicalCampus().getCampusCode());
        return translatedAttributes;
    }

}

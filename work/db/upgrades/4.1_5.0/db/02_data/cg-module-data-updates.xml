<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

 	
 <changeSet author='KFS50' id='Convert_CA_ICR_ACCT_T_mysql' dbms='mysql' >
  	<sql>
## MySQL data conversion for CA Account ICR values

## Set the acct seq to current max of ICR accounts - default to 10000
set @acct_seq = IFNULL((select max(id) from ca_icr_acct_seq), 10000);
select @acct_seq;

## CA_ICR_ACCT_T
INSERT CA_ICR_ACCT_T
(CA_ICR_ACCT_GNRTD_ID,
OBJ_ID,
VER_NBR,
FIN_COA_CD,
ACCOUNT_NBR,
ICR_FIN_COA_CD,
ICR_FIN_ACCT_NBR,
ACLN_PCT,
DOBJ_MAINT_CD_ACTV_IND)
SELECT @acct_seq := @acct_seq + 1, uuid(), 1, FIN_COA_CD, ACCOUNT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_ACCOUNT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
;

#Data conversion completed, increase the current max on the sequence table
INSERT ca_icr_acct_seq value (@acct_seq);

## -------------------------------------------------------------------- ##

## Set the acct seq to current max of A21 ICR accounts - default to 10000
set @a21_acct_seq = IFNULL((select max(id) from ca_a21_icr_acct_seq), 10000);
select @a21_acct_seq;

INSERT INTO CA_A21_ICR_ACCT_T
(CA_A21_ICR_ACCT_GNRTD_ID,
OBJ_ID,
VER_NBR,
FIN_COA_CD,
ACCOUNT_NBR,
SUB_ACCT_NBR,
ICR_FIN_COA_CD,
ICR_FIN_ACCT_NBR,
ACLN_PCT,
DOBJ_MAINT_CD_ACTV_IND)
SELECT @a21_acct_seq := @a21_acct_seq + 1, uuid(), 1, FIN_COA_CD, ACCOUNT_NBR, SUB_ACCT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_A21_SUB_ACCT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
;

#Data conversion completed, increase the current max on the sequence table
INSERT ca_a21_icr_acct_seq value (@a21_acct_seq);
  	</sql>
  	</changeSet>
   	<changeSet author='KFS50' id='Convert_CA_ICR_ACCT_T_oracle' dbms='oracle' >
  	<sql>
 <!--  
 Conversion script to take the ICR COA/Account Number and populate into
 the new ICR collection tables
 1) CA_ACCOUNT_T -> CA_ICR_ACCT_T
 2) CA_A21_SUB_ACCT_T -> CA_A21_ICR_ACCT_T
 3) TODO? Prior year account

  CA_ICR_ACCT_T
-->
INSERT INTO 'CA_ICR_ACCT_T'
('CA_ICR_ACCT_GNRTD_ID',
'OBJ_ID',
'VER_NBR',
'FIN_COA_CD',
'ACCOUNT_NBR',
'ICR_FIN_COA_CD',
'ICR_FIN_ACCT_NBR',
'ACLN_PCT',
'DOBJ_MAINT_CD_ACTV_IND')
SELECT CA_ICR_ACCT_SEQ.nextval, sys_guid(), 1, FIN_COA_CD, ACCOUNT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_ACCOUNT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
;

<!-- CA_ICR_ACCT_T  -->
INSERT INTO 'CA_A21_ICR_ACCT_T'
('CA_A21_ICR_ACCT_GNRTD_ID',
'OBJ_ID',
'VER_NBR',
'FIN_COA_CD',
'ACCOUNT_NBR',
'SUB_ACCT_NBR',
'ICR_FIN_COA_CD',
'ICR_FIN_ACCT_NBR',
'ACLN_PCT',
'DOBJ_MAINT_CD_ACTV_IND')
SELECT CA_A21_ICR_ACCT_SEQ.nextval, sys_guid(), 1, FIN_COA_CD, ACCOUNT_NBR, SUB_ACCT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_A21_SUB_ACCT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
; 	
  	</sql>
  	</changeSet>
</databaseChangeLog>
 
<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2012 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- ====================================================================== 
     May 17, 2012 11:45:44 AM                                                        

     KFS Data Upgrade Testing    
     
                   
     jonathan                                                                
     ====================================================================== -->
<project name="KFS Data Upgrade Testing" default="dump-kew-data">

	<property name="additional.exclusions" value="AND t.doc_typ_nm NOT IN ( 'RuleMaintenanceDocument', 'FiscalOfficerMaintenanceDocument' ) AND t.doc_typ_nm NOT LIKE 'Travel%' AND t.doc_typ_nm NOT LIKE 'Sample%'  AND t.doc_typ_nm NOT LIKE 'Recipe%' AND t.doc_typ_nm NOT LIKE 'eDoc%'"/>

	
    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="dump-kew-data" description="">
    	<echo file="${output.file}">
********************************************************************************
DOCUMENT TYPES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT  t.doc_typ_nm, t.lbl, 
        			TRIM( COALESCE( p.DOC_TYP_NM, ' ' ) ) AS parent_doc_type, 
		        	TRIM( COALESCE( t.doc_hdlr_url, ' ' ) ) AS document_handler_url, 
		        	TRIM( COALESCE( t.post_prcsr, ' ' ) ) AS post_processor, 
		        	TRIM( COALESCE( t.appl_id, ' ' ) ) AS appl_id, 
		        	TRIM( COALESCE( t.help_def_url, ' ' ) ) AS help_def_url, 
		        	TRIM( COALESCE( t.doc_search_help_url, ' ' ) ) AS doc_search_help_url, 
		        	TRIM( COALESCE( t.ADV_DOC_SRCH_URL, ' ' ) ) AS ADV_DOC_SRCH_URL 
        	    FROM KREW_DOC_TYP_T t
                    LEFT OUTER JOIN KREW_DOC_TYP_T p ON p.DOC_TYP_ID = t.PARNT_ID
        	    WHERE t.ACTV_IND = 1 AND t.CUR_IND = 1
        		  ${additional.exclusions}
        	    ORDER BY t.doc_typ_nm
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
DOCUMENT ROUTE NODES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT t.doc_typ_nm, n.nm, 
        	    	SUBSTR( n.typ, -(INSTR( REVERSE( n.typ ), '.' ) - 1) ) AS node_type,
        	   		COALESCE( n.next_doc_stat, ' ' ) AS next_app_doc_status, 
        			b.BRCH_NM AS branch_name, COALESCE( nn.nm, ' ' ) AS NEXT_NODE_NM,
                    cp.KEY_CD, cp.VAL
        	    FROM  KREW_DOC_TYP_T t
        	        INNER JOIN KREW_RTE_NODE_T n ON n.doc_typ_id = t.doc_typ_id
        	        LEFT OUTER JOIN KREW_RTE_NODE_LNK_T nl ON nl.FROM_RTE_NODE_ID = n.RTE_NODE_ID
        	        LEFT OUTER JOIN KREW_RTE_NODE_T nn ON nn.RTE_NODE_ID = nl.TO_RTE_NODE_ID
                    LEFT OUTER JOIN krew_rte_brch_proto_t b ON b.RTE_BRCH_PROTO_ID = nn.BRCH_PROTO_ID
                    LEFT OUTER JOIN KREW_RTE_NODE_CFG_PARM_T cp ON cp.RTE_NODE_ID = n.RTE_NODE_ID AND key_cd != 'contentFragment'
        	    WHERE t.ACTV_IND = 1 AND t.CUR_IND = 1
		  		  ${additional.exclusions}
        	    ORDER BY t.doc_typ_nm, n.rte_node_id, branch_name, nn.NM, cp.key_cd
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
DOCUMENT APPLICATION DOCUMENT STATUSES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT t.doc_typ_nm, DOC_STAT_NM
        		FROM KREW_DOC_TYP_T t
        	        INNER JOIN KREW_DOC_TYP_APP_DOC_STAT_T ads ON ads.doc_typ_id = t.doc_typ_id
        	    WHERE t.ACTV_IND = 1 AND t.CUR_IND = 1
		  		  ${additional.exclusions}
        	    ORDER BY doc_typ_nm, doc_stat_nm
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
DOCUMENT RULE ATTRIBUTES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT t.doc_typ_nm, ad.nm, ad.lbl, ad.RULE_ATTR_TYP_CD, ad.CLS_NM, ad.APPL_ID
        		FROM KREW_DOC_TYP_T t
        	        INNER JOIN KREW_DOC_TYP_ATTR_T a ON a.doc_typ_id = t.doc_typ_id
        	        INNER JOIN KREW_RULE_ATTR_T ad ON ad.RULE_ATTR_ID = a.RULE_ATTR_ID
        	    WHERE t.ACTV_IND = 1 AND t.CUR_IND = 1
		  		  ${additional.exclusions}
        	    ORDER BY doc_typ_nm, DOC_TYP_ATTRIB_ID
        </sql>
    </target>

	
	
	
	
    <target name="dump-kim-data" description="">
    	<echo file="${output.file}">
********************************************************************************
ATTRIBUTE DEFINITIONS
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT NMSPC_CD, NM, CMPNT_NM 
        		FROM krim_attr_defn_t
        	    ORDER BY nm
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
KIM TYPES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT t.NMSPC_CD AS type_namespace, t.NM AS type_name, t.SRVC_NM, ad.NM AS attribute_name, a.SORT_CD
        		FROM krim_typ_t t
        	        LEFT OUTER JOIN krim_typ_attr_t a ON a.KIM_TYP_ID = t.KIM_TYP_ID
        	        LEFT OUTER JOIN krim_attr_defn_t ad ON ad.KIM_ATTR_DEFN_ID = a.KIM_ATTR_DEFN_ID
        	    ORDER BY type_namespace, type_name, attribute_name
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
PERMISSION TEMPLATES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT pt.NMSPC_CD AS template_namespace, pt.NM AS template_name, t.NMSPC_CD AS type_namespace, t.NM AS type_name
        	    FROM krim_perm_tmpl_t pt
        	        LEFT OUTER JOIN krim_typ_t t ON t.KIM_TYP_ID = pt.KIM_TYP_ID
        		WHERE pt.nmspc_cd NOT LIKE 'KR%'
                  AND pt.nmspc_cd != 'KUALI'
        	    ORDER BY template_namespace, template_name
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
PERMISSIONS
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	<!-- REPLACE on the name is to compensate for bad Rice 1.0.3.1 data --> 
        	SELECT p.NMSPC_CD AS perm_namespace, REPLACE( p.NM, 'Note  Attachment', 'Note / Attachment' ) AS perm_name, pt.NMSPC_CD AS template_namespace, pt.NM AS template_name, a.NM AS attribute_name, pa.ATTR_VAL AS attribute_value
        	    FROM krim_perm_t p
        	        INNER JOIN krim_perm_tmpl_t pt ON pt.PERM_TMPL_ID = p.PERM_TMPL_ID
        	        LEFT OUTER JOIN krim_perm_attr_data_t pa ON pa.PERM_ID = p.PERM_ID
        	        LEFT OUTER JOIN krim_attr_defn_t a ON a.KIM_ATTR_DEFN_ID = pa.KIM_ATTR_DEFN_ID
        		WHERE p.nmspc_cd NOT LIKE '%TEST%'
        		  AND p.nm NOT LIKE 'Create Context%'
        		  AND p.nm NOT LIKE 'Create Term%'
        	    ORDER BY perm_namespace, perm_name, attribute_name
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
RESPONSIBILITIES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT p.NMSPC_CD AS resp_namespace, p.NM AS resp_name, pt.NM AS template_name, a.NM AS attribute_name, pa.ATTR_VAL AS attribute_value
        	    FROM krim_rsp_t p
        	        INNER JOIN krim_rsp_tmpl_t pt ON pt.RSP_TMPL_ID = p.RSP_TMPL_ID
        	        LEFT OUTER JOIN krim_rsp_attr_data_t pa ON pa.RSP_ID = p.RSP_ID
        	        LEFT OUTER JOIN krim_attr_defn_t a ON a.KIM_ATTR_DEFN_ID = pa.KIM_ATTR_DEFN_ID
	    		WHERE p.nmspc_cd NOT LIKE '%TEST%'
        	    ORDER BY resp_namespace, resp_name, attribute_name
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
ROLES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT r.NMSPC_CD AS role_namespace, r.ROLE_NM AS role_name, t.NM AS kim_type_name, COALESCE( r.DESC_TXT, ' ' ) AS role_description
        		FROM krim_role_t r
        	      LEFT OUTER JOIN krim_typ_t t ON t.KIM_TYP_ID = r.KIM_TYP_ID
        	    ORDER BY role_namespace, role_name
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
ROLE MEMBERS (ROLES ONLY)
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT r.NMSPC_CD AS role_namespace, r.ROLE_NM AS role_name, CONCAT( CONCAT( r2.NMSPC_CD, ' / ' ), r2.ROLE_NM ) AS member_role_name, a.NM AS qualifier_name, rma.ATTR_VAL AS qualifier_value
        		FROM krim_role_mbr_t rm
        	        INNER JOIN krim_role_t r ON r.ROLE_ID = rm.ROLE_ID
        	        LEFT OUTER JOIN krim_role_t r2 ON r2.ROLE_ID = rm.MBR_ID
        	        LEFT OUTER JOIN krim_role_mbr_attr_data_t rma ON rma.ROLE_MBR_ID = rm.ROLE_MBR_ID
        	        LEFT OUTER JOIN krim_attr_defn_t a ON a.KIM_ATTR_DEFN_ID = rma.KIM_ATTR_DEFN_ID
        	    WHERE r.NMSPC_CD LIKE 'KFS%'
        	      AND rm.MBR_TYP_CD = 'R'
        	    ORDER BY r.nmspc_cd, r.role_nm, member_role_name, qualifier_name, qualifier_value
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
ROLE DELEGATIONS
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT r.NMSPC_CD AS role_namespace, r.ROLE_NM AS role_name, d.DLGN_TYP_CD, CONCAT( CONCAT( r2.NMSPC_CD, ' / ' ), r2.ROLE_NM ) AS member_role_name, t.NM AS delegation_type
        		FROM krim_dlgn_t d
        	        INNER JOIN krim_role_t r ON r.role_id = d.role_id
        	        INNER JOIN krim_typ_t t ON t.KIM_TYP_ID = d.KIM_TYP_ID
        	        INNER JOIN krim_dlgn_mbr_t dm ON dm.DLGN_ID = d.DLGN_ID AND MBR_TYP_CD = 'R'
        	        LEFT OUTER JOIN krim_role_t r2 ON r2.ROLE_ID = dm.MBR_ID
        	    ORDER BY r.nmspc_cd, r.role_nm, DLGN_TYP_CD, member_role_name    
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
ROLE PERMISSIONS
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	<!-- REPLACE on the name is to compensate for bad Rice 1.0.3.1 data --> 
        	SELECT r.NMSPC_CD AS role_namespace, r.ROLE_NM AS role_name, p.NMSPC_CD AS perm_namespace, REPLACE( p.NM, 'Note  Attachment', 'Note / Attachment' ) AS perm_name
        		FROM krim_role_perm_t rp
        	      LEFT OUTER JOIN krim_role_t r ON r.ROLE_ID = rp.ROLE_ID
        	      LEFT OUTER JOIN krim_perm_t p ON p.PERM_ID = rp.perm_id
	    		WHERE p.nmspc_cd NOT LIKE '%TEST%' AND r.nmspc_cd != 'KR-RULE'
        	    ORDER BY role_namespace, role_name, perm_namespace, perm_name
        </sql>
    	<echo file="${output.file}" append="true">
********************************************************************************
ROLE RESPONSIBILITIES
********************************************************************************
</echo>    	
        <sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
        	SELECT p.NMSPC_CD AS resp_namespace, p.NM AS resp_name, r.NMSPC_CD AS role_namespace, r.ROLE_NM AS role_name, rra.ACTN_TYP_CD, rra.PRIORITY_NBR, rra.ACTN_PLCY_CD, rra.FRC_ACTN
        		FROM krim_role_rsp_t rp
        	      LEFT OUTER JOIN krim_role_t r ON r.ROLE_ID = rp.ROLE_ID
        	      LEFT OUTER JOIN krim_rsp_t p ON p.RSP_ID = rp.RSP_id
        	      LEFT OUTER JOIN krim_role_rsp_actn_t rra ON rra.ROLE_RSP_ID = rp.ROLE_RSP_ID
        	    WHERE p.NM IS NOT NULL
	    		  AND p.nmspc_cd NOT LIKE '%TEST%'
                  AND rra.ROLE_MBR_ID = '*'
        	    ORDER BY resp_namespace, resp_name, role_namespace, role_name
        </sql>
    </target>
	
	<target name="drop-tables-before-export">
		<sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}" onerror="continue" print="true">
			DROP TABLE DATABASECHANGELOGLOCK;			
		</sql>
		<sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}" onerror="continue" print="true">
			DROP TABLE DATABASECHANGELOG;			
		</sql>
	</target>

	<target name="dump-parameter-data">
		<sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
			SELECT TRIM( COALESCE( APPL_ID, ' ' ) ) AS APPL_ID, NMSPC_CD, NM, ACTV_IND
				FROM krcr_nmspc_t
			    ORDER BY NMSPC_CD
		</sql>
		<sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
			SELECT PARM_TYP_CD, NM, ACTV_IND 
				FROM krcr_parm_typ_t
			    ORDER BY PARM_TYP_CD
		</sql>
		<sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
			SELECT NMSPC_CD, CMPNT_CD, NM, ACTV_IND 
				FROM krcr_cmpnt_t
			    ORDER BY NMSPC_CD, CMPNT_CD
		</sql>
		<sql userid="${db.user}" password="${db.password}" url="${db.url}" driver="${db.driver}"
        	keepformat="true" print="true" output="${output.file}" showheaders="true" append="true">
			SELECT APPL_ID, NMSPC_CD, CMPNT_CD, PARM_NM, PARM_TYP_CD, EVAL_OPRTR_CD, 
					TRIM( COALESCE( 
						CASE 
							WHEN val LIKE '%@%' THEN ''
							WHEN val LIKE '%http%' THEN ''
							WHEN parm_nm LIKE '%FISCAL_YEAR' THEN 'xxxx'
							ELSE val 
						END, ' ' ) ) AS val, 
					COALESCE( TRIM( PARM_DESC_TXT ), ' ' ) AS PARM_DESC_TXT 
				FROM krcr_parm_t
			    ORDER BY APPL_ID, NMSPC_CD, CMPNT_CD, PARM_NM 
		</sql>
	</target>
	
	
</project>

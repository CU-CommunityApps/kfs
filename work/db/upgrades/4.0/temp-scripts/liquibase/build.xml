<?xml version="1.0" encoding="UTF-8"?>

<project name="KFS 4.0 Liquibase" basedir=".">

    <target name="init_Mysql" if="databaseIsMYSQL">
	<echo message="MYSQL database"/>
	<property name="database.url" value="${mysql.datasource.url}"/>
    </target>

    <target name="init_Oracle" unless="databaseIsMYSQL">
	<echo message="Oracle database"/>
	<property name="database.url" value="${oracle.datasource.url}"/>
    </target>

    <target name="prepare">
        <path id="liquibase.class.path" path="lib/liquibase-1.9.5.jar" />
	<property name="db.changelog.file" value="./updates/update.xml" />
 	 <tstamp>
     		 <format property="touch.time" pattern="yyyyMMdd_hhmm"
             		 offset="-5" unit="hour"/>
 	 </tstamp>

	<property file="${user.home}/kfs-build.properties" />
	<property file="${user.home}/impex-build.properties" />
	<path id="databaseDriver.class.path">
		<fileset dir="${drivers.directory}" includes="${drivers.file.pattern}" />
	</path>
	<condition  property="databaseIsMYSQL">
		<equals arg1="${datasource.ojb.platform}" arg2="MYSQL" casesensitive="false" trim="true"/>
	</condition>
        <property name="prompt.user.if.not.local.database" value="true"/>
        <fail unless="drivers.directory">drivers directory not found</fail>
		<fail unless="datasource.ojb.platform">datasource.ojb.platform not found</fail>
        <fail unless="db.changelog.file">db.changelog.file not set</fail>
        <fail unless="datasource.username">datasource.username not set</fail>
        <fail unless="datasource.password">datasource.password not set</fail>

	<taskdef name="updateDatabase" classname="liquibase.ant.DatabaseUpdateTask" classPathref="liquibase.class.path" />
    </target>

   <target name="sqlOutput" depends="prepare, init_Mysql, init_Oracle" if="database.showSql" >
	<fail unless="database.url">database.url not set</fail>
	<taskdef name="updateDatabase" classname="liquibase.ant.DatabaseUpdateTask" classPathref="liquibase.class.path" />
        <updateDatabase
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                dropFirst="false"
		outputFile="/tmp/${touch.time}.sql"
                classpathref="databaseDriver.class.path"
                >
        </updateDatabase>
    </target>

    <target name="update" depends="prepare, init_Mysql, init_Oracle, sqlOutput">
	<taskdef name="updateDatabase" classname="liquibase.ant.DatabaseUpdateTask" classPathref="liquibase.class.path" />
        <updateDatabase
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                dropFirst="false"
                classpathref="databaseDriver.class.path"
                >
        </updateDatabase>
    </target>

    <target name="rolback" depends="prepare">	
	<taskdef name="rollbackDatabase" classname="liquibase.ant.DatabaseRollbackTask" classPathref="liquibase.class.path" />
        <rollbackDatabase
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                rollbackCount="1"
                classpathref="databaseDriver.class.path"
                >
        </rollbackDatabase>
    </target>

    <target name="rolbackFuture" depends="prepare">
	<taskdef name="rollbackFutureDatabase" classname="liquibase.ant.DatabaseRollbackFutureTask" classPathref="liquibase.class.path" />
        <rollbackFutureDatabase
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                classpathref="databaseDriver.class.path"
                outputFile="/tmp/out.sql"
                >
        </rollbackFutureDatabase>
    </target>

    <target name="generateChangeLog" depends="prepare">
	<taskdef name="generateChangeLog" classname="liquibase.ant.GenerateChangeLogTask" classPathref="liquibase.class.path" />
        <generateChangeLog
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                classpathref="databaseDriver.class.path"
                outputFile="/tmp/changelog.xml"
                >
        </generateChangeLog>
    </target>


    <target name="diff" depends="prepare">
	<taskdef name="diffDatabase" classname="liquibase.ant.DiffDatabaseTask" classPathref="liquibase.class.path" />
        <diffDatabase
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                classpathref="databaseDriver.class.path"

                baseUrl="${database.url}"
                baseUsername="${datasource.username}"
                basePassword="${datasource.password}"
                baseDefaultSchemaName="liquibaseb"

                outputFile="/tmp/diff.txt"
                >
        </diffDatabase>
    </target>

    <target name="diffChangeLog" depends="prepare">
	<taskdef name="diffDatabaseToChangeLog" classname="liquibase.ant.DiffDatabaseToChangeLogTask" classPathref="liquibase.class.path" />
        <diffDatabaseToChangeLog
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
               classpathref="databaseDriver.class.path"

                baseUrl="${database.url}"
                baseUsername="${datasource.username}"
                basePassword="${datasource.password}"
                baseDefaultSchemaName="liquibaseb"

                outputFile="/tmp/diff.xml"
                >
        </diffDatabaseToChangeLog>
    </target>

    <target name="diffChangeLog-hibernate" depends="prepare">
	<taskdef name="diffDatabaseToChangeLog" classname="liquibase.ant.DiffDatabaseToChangeLogTask" classPathref="liquibase.class.path" />
        <diffDatabaseToChangeLog
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"

                baseUrl="hibernate:hibernate\Hibernate.cfg.xml"

                outputFile="/tmp/hibernate.diff.xml"
                classpathref="databaseDriver.class.path"/>
    </target>

    <target name="dbdoc" depends="prepare">
	<taskdef name="dbDoc" classname="liquibase.ant.DBDocTask" classPathref="liquibase.class.path" />
        <dbDoc
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                classpathref="databaseDriver.class.path"
		outputDirectory="dbdoc-ant"  
                >
        </dbDoc>
    </target>

    <target name="tag" depends="prepare">
	<taskdef name="tagDatabase" classname="liquibase.ant.TagDatabaseTask" classPathref="liquibase.class.path" />
        <tagDatabase
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
               classpathref="databaseDriver.class.path"

                tag="ant-tag"
                >
        </tagDatabase>
    </target>

    <target name="changeLogSync" depends="prepare">
	<taskdef name="changeLogSync" classname="liquibase.ant.ChangeLogSyncTask" classPathref="liquibase.class.path" />
        <changeLogSync
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                classpathref="databaseDriver.class.path"
                >
        </changeLogSync>
    </target>

    <target name="dropAll" depends="prepare">
	<taskdef name="dropAllDatabaseObjects" classname="liquibase.ant.DropAllTask" classPathref="liquibase.class.path" />
        <dropAllDatabaseObjects
                changeLogFile="${db.changelog.file}"
                driver="${import.torque.database.driver}"
                url="${database.url}"
                username="${datasource.username}"
                password="${datasource.password}"
                promptOnNonLocalDatabase="${prompt.user.if.not.local.database}"
                classpathref="databaseDriver.class.path"
                schemas="liquibase,liquibaseb"
                >
        </dropAllDatabaseObjects>
    </target>
</project>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Copyright 2012 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<databaseChangeLog xmlns='http://www.liquibase.org/xml/ns/dbchangelog'
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xsi:schemaLocation='http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd'>

<!-- JHK: commenting out problem script 	
 <changeSet author="KFS50" id='Convert_CA_ICR_ACCT_T_mysql' dbms='mysql' >
  	<sql>
## MySQL data conversion for CA Account ICR values

## Set the acct seq to current max of ICR accounts - default to 10000
INSERT INTO CA_ICR_ACCT_SEQ VALUES ( NULL )
;
set @acct_seq = SELECT LAST_INSERT_ID()
;
select @acct_seq
;
## CA_ICR_ACCT_T
INSERT CA_ICR_ACCT_T
(CA_ICR_ACCT_GNRTD_ID,
OBJ_ID,
VER_NBR,
FIN_COA_CD,
ACCOUNT_NBR,
ICR_FIN_COA_CD,
ICR_FIN_ACCT_NBR,
ACLN_PCT,
DOBJ_MAINT_CD_ACTV_IND)
SELECT @acct_seq := @acct_seq + 1, uuid(), 1, FIN_COA_CD, ACCOUNT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_ACCOUNT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
;

#Data conversion completed, increase the current max on the sequence table
INSERT INTO CA_ICR_ACCT_SEQ VALUES (@acct_seq);

## Set the acct seq to current max of A21 ICR accounts - default to 10000
INSERT INTO CA_A21_ICR_ACCT_SEQ VALUES ( NULL )
;
set @a21_acct_seq = SELECT LAST_INSERT_ID()
;
select @a21_acct_seq
;
INSERT INTO CA_A21_ICR_ACCT_T
(CA_A21_ICR_ACCT_GNRTD_ID,
OBJ_ID,
VER_NBR,
FIN_COA_CD,
ACCOUNT_NBR,
SUB_ACCT_NBR,
ICR_FIN_COA_CD,
ICR_FIN_ACCT_NBR,
ACLN_PCT,
DOBJ_MAINT_CD_ACTV_IND)
SELECT @a21_acct_seq := @a21_acct_seq + 1, uuid(), 1, FIN_COA_CD, ACCOUNT_NBR, SUB_ACCT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_A21_SUB_ACCT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
;

#Data conversion completed, increase the current max on the sequence table
INSERT INTO CA_A21_ICR_ACCT_SEQ VALUES (@a21_acct_seq);
  	</sql>
  	</changeSet>
-->  	
   	<changeSet author="KFS50" id='Convert_CA_ICR_ACCT_T_oracle' dbms='oracle' >
  	<sql>
 <!--  
 KFSMI 6963 Conversion script to take the ICR COA/Account Number and populate into
 the new ICR collection tables
 1) CA_ACCOUNT_T -> CA_ICR_ACCT_T
 2) CA_A21_SUB_ACCT_T -> CA_A21_ICR_ACCT_T
 3) TODO? Prior year account - Per KFSMI-6956 "No data conversion script is needed as the prior year account tables is wiped each year."

  CA_ICR_ACCT_T
-->
INSERT INTO CA_ICR_ACCT_T
(CA_ICR_ACCT_GNRTD_ID,
OBJ_ID,
VER_NBR,
FIN_COA_CD,
ACCOUNT_NBR,
ICR_FIN_COA_CD,
ICR_FIN_ACCT_NBR,
ACLN_PCT,
DOBJ_MAINT_CD_ACTV_IND)
SELECT CA_ICR_ACCT_SEQ.nextval, sys_guid(), 1, FIN_COA_CD, ACCOUNT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_ACCOUNT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
;

<!-- CA_ICR_ACCT_T  -->
INSERT INTO CA_A21_ICR_ACCT_T
(CA_A21_ICR_ACCT_GNRTD_ID,
OBJ_ID,
VER_NBR,
FIN_COA_CD,
ACCOUNT_NBR,
SUB_ACCT_NBR,
ICR_FIN_COA_CD,
ICR_FIN_ACCT_NBR,
ACLN_PCT,
DOBJ_MAINT_CD_ACTV_IND)
SELECT CA_A21_ICR_ACCT_SEQ.nextval, sys_guid(), 1, FIN_COA_CD, ACCOUNT_NBR, SUB_ACCT_NBR, ICR_FIN_COA_CD, ICR_ACCOUNT_NBR, 100, 'Y'
  FROM CA_A21_SUB_ACCT_T
 WHERE ICR_ACCOUNT_NBR IS NOT NULL
   AND ICR_FIN_COA_CD IS NOT NULL
; 	
  	</sql>
  	</changeSet>
</databaseChangeLog>
 
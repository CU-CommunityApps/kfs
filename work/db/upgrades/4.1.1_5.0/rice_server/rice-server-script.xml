<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Copyright 2012 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<databaseChangeLog xmlns='http://www.liquibase.org/xml/ns/dbchangelog'
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xsi:schemaLocation='http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd'>

	<changeSet author="RICE20" id="RICE_SERVER_UPDATES_oracle" dbms="oracle">

	<sql splitStatements="false"><![CDATA[
		DECLARE
			PROCEDURE drop_ref_cons( TableName IN VARCHAR2 ) IS
				CURSOR tab_ref_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName
						  AND constraint_type = 'R';
            BEGIN
                FOR cons IN tab_ref_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
            END;
			PROCEDURE drop_cons( TableName IN VARCHAR2 ) IS
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName
						  AND constraint_type IN ( 'P', 'U' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
        BEGIN
			drop_ref_cons( 'KREW_RIA_DOC_T' );
			drop_ref_cons( 'KREW_RIA_DOCTYPE_MAP_T' );
			drop_ref_cons( 'KREW_RMV_RPLC_DOC_T ' );
			drop_ref_cons( 'KREW_RMV_RPLC_GRP_T' );
			drop_ref_cons( 'KREW_RMV_RPLC_RULE_T' );
			drop_ref_cons( 'KRMS_CNTXT_VLD_EVENT_T' );
			drop_ref_cons( 'KRSB_FLT_SVC_DEF_T' );
			drop_ref_cons( 'KRSB_SVC_DEF_T' );
			drop_ref_cons( 'KREW_DOC_TYP_APP_DOC_STAT_T' );
			drop_ref_cons( 'KREW_INIT_RTE_NODE_INSTN_T' );
			drop_ref_cons( 'KREW_ACTN_ITM_T' );
			drop_ref_cons( 'KREW_ACTN_RQST_T' );
			drop_ref_cons( 'KREW_ACTN_TKN_T' );
			drop_ref_cons( 'KREW_APP_DOC_STAT_TRAN_T' );
			drop_ref_cons( 'KREW_DOC_HDR_CNTNT_T' );
			drop_ref_cons( 'KREW_DOC_HDR_EXT_DT_T' );
			drop_ref_cons( 'KREW_DOC_HDR_EXT_FLT_T' );
			drop_ref_cons( 'KREW_DOC_HDR_EXT_LONG_T' );
			drop_ref_cons( 'KREW_DOC_HDR_EXT_T' );
			drop_ref_cons( 'KREW_DOC_HDR_T' );
			drop_ref_cons( 'KREW_DOC_LNK_T' );
			drop_ref_cons( 'KREW_DOC_NTE_T' );
			drop_ref_cons( 'KREW_DOC_TYP_ATTR_T' );
			drop_ref_cons( 'KREW_DOC_TYP_PLCY_RELN_T' );
			drop_ref_cons( 'KREW_DOC_TYP_PROC_T' );
			drop_ref_cons( 'KREW_DOC_TYP_T' );
			drop_ref_cons( 'KREW_EDL_DMP_T' );
			drop_ref_cons( 'KREW_EDL_FLD_DMP_T' );
			drop_ref_cons( 'KREW_OUT_BOX_ITM_T' );
			drop_ref_cons( 'KREW_RMV_RPLC_DOC_T' );
			drop_ref_cons( 'KREW_RTE_NODE_INSTN_T' );
			drop_ref_cons( 'KREW_RTE_NODE_T' );
			drop_ref_cons( 'KREW_RULE_T' );
			drop_ref_cons( 'KREW_ATT_T' );
			drop_ref_cons( 'KREW_DLGN_RSP_T' );
			drop_ref_cons( 'KREW_INIT_RTE_NODE' );
			drop_ref_cons( 'KREW_RTE_BRCH_PROTO_T' );
			drop_ref_cons( 'KREW_RTE_BRCH_ST_T' );
			drop_ref_cons( 'KREW_RTE_BRCH_T' );
			drop_ref_cons( 'KREW_RTE_NODE_CFG_PARM_T' );
			drop_ref_cons( 'KREW_RTE_NODE_INSTN_LNK_T' );
			drop_ref_cons( 'KREW_RTE_NODE_INSTN_ST_T' );
			drop_ref_cons( 'KREW_RTE_NODE_LNK_T' );
			drop_ref_cons( 'KREW_RULE_ATTR_T' );
			drop_ref_cons( 'KREW_RULE_EXPR_T' );
			drop_ref_cons( 'KREW_RULE_EXT_T' );
			drop_ref_cons( 'KREW_RULE_EXT_VAL_T' );
			drop_ref_cons( 'KREW_RULE_RSP_T' );
			drop_ref_cons( 'KREW_RULE_TMPL_ATTR_T' );
			drop_ref_cons( 'KREW_RULE_TMPL_OPTN_T' );
			drop_ref_cons( 'KREW_RULE_TMPL_T' );

			drop_cons( 'KREW_RIA_DOC_T' );
			drop_cons( 'KREW_RIA_DOCTYPE_MAP_T' );
			drop_cons( 'KREW_RMV_RPLC_DOC_T ' );
			drop_cons( 'KREW_RMV_RPLC_GRP_T' );
			drop_cons( 'KREW_RMV_RPLC_RULE_T' );
			drop_cons( 'KRMS_CNTXT_VLD_EVENT_T' );
			drop_cons( 'KRSB_FLT_SVC_DEF_T' );
			drop_cons( 'KRSB_SVC_DEF_T' );
			drop_cons( 'KREW_DOC_TYP_APP_DOC_STAT_T' );
			drop_cons( 'KREW_INIT_RTE_NODE_INSTN_T' );
			drop_cons( 'KREW_ACTN_ITM_T' );
			drop_cons( 'KREW_ACTN_RQST_T' );
			drop_cons( 'KREW_ACTN_TKN_T' );
			drop_cons( 'KREW_APP_DOC_STAT_TRAN_T' );
			drop_cons( 'KREW_DOC_HDR_CNTNT_T' );
			drop_cons( 'KREW_DOC_HDR_EXT_DT_T' );
			drop_cons( 'KREW_DOC_HDR_EXT_FLT_T' );
			drop_cons( 'KREW_DOC_HDR_EXT_LONG_T' );
			drop_cons( 'KREW_DOC_HDR_EXT_T' );
			drop_cons( 'KREW_DOC_HDR_T' );
			drop_cons( 'KREW_DOC_LNK_T' );
			drop_cons( 'KREW_DOC_NTE_T' );
			drop_cons( 'KREW_DOC_TYP_ATTR_T' );
			drop_cons( 'KREW_DOC_TYP_PLCY_RELN_T' );
			drop_cons( 'KREW_DOC_TYP_PROC_T' );
			drop_cons( 'KREW_DOC_TYP_T' );
			drop_cons( 'KREW_EDL_DMP_T' );
			drop_cons( 'KREW_EDL_FLD_DMP_T' );
			drop_cons( 'KREW_OUT_BOX_ITM_T' );
			drop_cons( 'KREW_RMV_RPLC_DOC_T' );
			drop_cons( 'KREW_RTE_NODE_INSTN_T' );
			drop_cons( 'KREW_RTE_NODE_T' );
			drop_cons( 'KREW_RULE_T' );
			drop_cons( 'KREW_ATT_T' );
			drop_cons( 'KREW_DLGN_RSP_T' );
			drop_cons( 'KREW_INIT_RTE_NODE' );
			drop_cons( 'KREW_RTE_BRCH_PROTO_T' );
			drop_cons( 'KREW_RTE_BRCH_ST_T' );
			drop_cons( 'KREW_RTE_BRCH_T' );
			drop_cons( 'KREW_RTE_NODE_CFG_PARM_T' );
			drop_cons( 'KREW_RTE_NODE_INSTN_LNK_T' );
			drop_cons( 'KREW_RTE_NODE_INSTN_ST_T' );
			drop_cons( 'KREW_RTE_NODE_LNK_T' );
			drop_cons( 'KREW_RULE_ATTR_T' );
			drop_cons( 'KREW_RULE_EXPR_T' );
			drop_cons( 'KREW_RULE_EXT_T' );
			drop_cons( 'KREW_RULE_EXT_VAL_T' );
			drop_cons( 'KREW_RULE_RSP_T' );
			drop_cons( 'KREW_RULE_TMPL_ATTR_T' );
			drop_cons( 'KREW_RULE_TMPL_OPTN_T' );
			drop_cons( 'KREW_RULE_TMPL_T' );
		END;
		]]></sql>		

		<sql splitStatements="false"><![CDATA[
		-- 
		-- 2010-04-15.sql
		-- 
		ALTER TABLE krns_sesn_doc_t ADD (OBJ_ID VARCHAR2(36))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE krns_sesn_doc_t ADD (VER_NBR NUMBER(8) DEFAULT 0)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2010-05-03.sql
		-- 
		
		
		ALTER TABLE KRIM_PND_GRP_ATTR_DATA_T ADD (ACTV_IND VARCHAR2(1) default 'Y'
		                                        , EDIT_FLAG VARCHAR2(1) default 'N')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		-- 
		-- 2010-05-12.sql
		-- 
		
		
		alter table kren_chnl_subscrp_t add OBJ_ID varchar2(36)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_cntnt_typ_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_chnl_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_ntfctn_msg_deliv_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_ntfctn_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_prio_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_prodcr_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_recip_list_t add OBJ_ID varchar2(36)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_sndr_t add OBJ_ID varchar2(36)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_recip_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_rvwer_t add OBJ_ID varchar2(36) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_chnl_subscrp_t add ver_nbr NUMBER(8)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_recip_list_t add ver_nbr NUMBER(8)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_sndr_t add ver_nbr NUMBER(8)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table kren_recip_t add ver_nbr NUMBER(8)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		-- 
		-- 2011-03-23.sql
		-- 
		
		
		update KREW_DOC_TYP_T set POST_PRCSR='org.kuali.rice.edl.framework.workflow.EDocLitePostProcessor'
		where POST_PRCSR='org.kuali.rice.kew.edl.EDocLitePostProcessor'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		update KREW_DOC_TYP_T set POST_PRCSR='org.kuali.rice.edl.framework.workflow.EDocLiteDatabasePostProcessor'
		where POST_PRCSR='org.kuali.rice.kew.edl.EDLDatabasePostProcessor'
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		-- 
		-- 2011-04-28.sql
		-- 
		--
		-- KULRICE-4794
		-- The following statements will change the DOC_HDR_ID from a decimal to a VARCHAR(40) on various tables. 
		--
		-- NOTE:  If a table is empty, one statement can be used to convert the DOC_HDR_ID as follows:
		-- ALTER TABLE TABLE_NAME_HERE MODIFY (DOC_HDR_ID VARCHAR2(40))
		--
		--
		-- KREW_ACTN_ITM_T 
		--
		
		ALTER TABLE KREW_ACTN_ITM_T RENAME TO OLD_KREW_ACTN_ITM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_ITM_T ( 
		    ACTN_ITM_ID   	NUMBER(14,0),
		    PRNCPL_ID     	VARCHAR2(40) NOT NULL,
		    ASND_DT       	DATE NOT NULL,
		    RQST_CD       	CHAR(1) NOT NULL,
		    ACTN_RQST_ID  	NUMBER(14,0) NOT NULL,
		    DOC_HDR_ID     	VARCHAR2(40) NOT NULL,
		    ROLE_NM       	VARCHAR2(2000) NULL,
		    DLGN_PRNCPL_ID	VARCHAR2(40) NULL,
		    DOC_HDR_TTL   	VARCHAR2(255) NULL,
		    DOC_TYP_LBL   	VARCHAR2(128) NOT NULL,
		    DOC_HDLR_URL  	VARCHAR2(255) NOT NULL,
		    DOC_TYP_NM    	VARCHAR2(64) NOT NULL,
		    RSP_ID        	NUMBER(14,0) NOT NULL,
		    DLGN_TYP      	VARCHAR2(1) NULL,
		    VER_NBR       	NUMBER(8,0) DEFAULT 0 NULL,
		    DTYPE         	VARCHAR2(50) NULL,
		    GRP_ID        	VARCHAR2(40) NULL,
		    DLGN_GRP_ID   	VARCHAR2(40) NULL,
		    RQST_LBL      	VARCHAR2(255) NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_ACTN_ITM_T SELECT * FROM OLD_KREW_ACTN_ITM_T
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_ACTN_ITM_T
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_ITM_T ADD CONSTRAINT KREW_ACTN_ITM_TP1 PRIMARY KEY (ACTN_ITM_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI1 ON KREW_ACTN_ITM_T(PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI2 ON KREW_ACTN_ITM_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI3 ON KREW_ACTN_ITM_T(ACTN_RQST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI5 ON KREW_ACTN_ITM_T(PRNCPL_ID, DLGN_TYP, DOC_HDR_ID)
		]]></sql>


		<sql splitStatements="false"><![CDATA[
		--
		-- KREW_ACTN_RQST_T 
		-- Depending on the size of the table, this conversion can take a long time.  Example - takes 90 minutes for 38 million rows. 
		--
		ALTER TABLE KREW_ACTN_RQST_T RENAME TO OLD_KREW_ACTN_RQST_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_RQST_T ( 
		    ACTN_RQST_ID        	NUMBER(14,0),
		    PARNT_ID            	NUMBER(14,0) NULL,
		    ACTN_RQST_CD        	CHAR(1) NOT NULL,
		    DOC_HDR_ID          	VARCHAR2(40) NOT NULL,
		    RULE_ID             	NUMBER(19,0) NULL,
		    STAT_CD             	CHAR(1) NOT NULL,
		    RSP_ID              	NUMBER(14,0) NOT NULL,
		    PRNCPL_ID           	VARCHAR2(40) NULL,
		    ROLE_NM             	VARCHAR2(2000) NULL,
		    QUAL_ROLE_NM        	VARCHAR2(2000) NULL,
		    QUAL_ROLE_NM_LBL_TXT	VARCHAR2(2000) NULL,
		    RECIP_TYP_CD        	CHAR(1) NULL,
		    PRIO_NBR            	NUMBER(8,0) NOT NULL,
		    RTE_TYP_NM          	VARCHAR2(255) NULL,
		    RTE_LVL_NBR         	NUMBER(8,0) NOT NULL,
		    RTE_NODE_INSTN_ID   	NUMBER(19,0) NULL,
		    ACTN_TKN_ID         	NUMBER(14,0) NULL,
		    DOC_VER_NBR         	NUMBER(8,0) NOT NULL,
		    CRTE_DT             	DATE NOT NULL,
		    RSP_DESC_TXT        	VARCHAR2(200) NULL,
		    FRC_ACTN            	NUMBER(1,0) DEFAULT 0,
		    ACTN_RQST_ANNOTN_TXT	VARCHAR2(2000) NULL,
		    DLGN_TYP            	CHAR(1) NULL,
		    APPR_PLCY           	CHAR(1) NULL,
		    CUR_IND             	NUMBER(1,0) DEFAULT 1,
		    VER_NBR             	NUMBER(8,0) DEFAULT 0,
		    GRP_ID              	VARCHAR2(40) NULL,
		    RQST_LBL            	VARCHAR2(255) NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_ACTN_RQST_T SELECT * FROM OLD_KREW_ACTN_RQST_T
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_ACTN_RQST_T
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_RQST_T ADD CONSTRAINT KREW_ACTN_RQST_TP1 PRIMARY KEY (ACTN_RQST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T11 ON KREW_ACTN_RQST_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T12 ON KREW_ACTN_RQST_T(PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T13 ON KREW_ACTN_RQST_T(ACTN_TKN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T14 ON KREW_ACTN_RQST_T(PARNT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T15 ON KREW_ACTN_RQST_T(RSP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T16 ON KREW_ACTN_RQST_T(STAT_CD, RSP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T17 ON KREW_ACTN_RQST_T(RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T19 ON KREW_ACTN_RQST_T(STAT_CD, DOC_HDR_ID)
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_ACTN_TKN_T 
		-- Depending on the size of the table, this conversion can take a long time.  Example - takes 10 minutes for 18 million rows. 
		--
		
		ALTER TABLE KREW_ACTN_TKN_T RENAME TO OLD_KREW_ACTN_TKN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_TKN_T ( 
		    ACTN_TKN_ID    	NUMBER(14,0),
		    DOC_HDR_ID      VARCHAR2(40) NOT NULL,
		    PRNCPL_ID      	VARCHAR2(40) NOT NULL,
		    DLGTR_PRNCPL_ID	VARCHAR2(40),
		    ACTN_CD        	CHAR(1) NOT NULL,
		    ACTN_DT        	DATE NOT NULL,
		    DOC_VER_NBR    	NUMBER(8,0) NOT NULL,
		    ANNOTN         	VARCHAR2(2000),
		    CUR_IND        	NUMBER(1,0) DEFAULT 1,
		    VER_NBR        	NUMBER(8,0) DEFAULT 0,
		    DLGTR_GRP_ID   	VARCHAR2(40)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_ACTN_TKN_T SELECT * FROM OLD_KREW_ACTN_TKN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_ACTN_TKN_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_TKN_T ADD CONSTRAINT KREW_ACTN_TKN_TP1 PRIMARY KEY (ACTN_TKN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI1 ON KREW_ACTN_TKN_T(DOC_HDR_ID, PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI2 ON KREW_ACTN_TKN_T(DOC_HDR_ID, PRNCPL_ID, ACTN_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI3 ON KREW_ACTN_TKN_T(PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI4 ON KREW_ACTN_TKN_T(DLGTR_PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI5 ON KREW_ACTN_TKN_T(DOC_HDR_ID)
		]]></sql>

		<sql splitStatements="false"><![CDATA[		
		--
		-- KREW_APP_DOC_STAT_TRAN_T 
		--
		
		ALTER TABLE KREW_APP_DOC_STAT_TRAN_T RENAME TO OLD_KREW_APP_DOC_STAT_TRAN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_APP_DOC_STAT_TRAN_T
		(
		      APP_DOC_STAT_TRAN_ID NUMBER(19),
		      DOC_HDR_ID VARCHAR2(40),
		      APP_DOC_STAT_FROM VARCHAR2(64),
		      APP_DOC_STAT_TO VARCHAR2(64),
		      STAT_TRANS_DATE DATE,
		      VER_NBR NUMBER(8) default 0,
		      OBJ_ID VARCHAR2(36) NOT NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_APP_DOC_STAT_TRAN_T SELECT * FROM OLD_KREW_APP_DOC_STAT_TRAN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_APP_DOC_STAT_TRAN_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_APP_DOC_STAT_TRAN_T ADD CONSTRAINT KREW_APP_DOC_STAT_TRAN_TP1 PRIMARY KEY(APP_DOC_STAT_TRAN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_APP_DOC_STAT_TRAN_T ADD CONSTRAINT KREW_APP_DOC_STAT_TRAN_TC0 UNIQUE (OBJ_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_APP_DOC_STAT_TI1 ON KREW_APP_DOC_STAT_TRAN_T (DOC_HDR_ID, STAT_TRANS_DATE)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_APP_DOC_STAT_TI2 ON KREW_APP_DOC_STAT_TRAN_T (DOC_HDR_ID, APP_DOC_STAT_FROM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_APP_DOC_STAT_TI3 ON KREW_APP_DOC_STAT_TRAN_T (DOC_HDR_ID, APP_DOC_STAT_TO)
		]]></sql>

		<sql><![CDATA[		
		--
		-- KREW_DOC_HDR_CNTNT_T 
		-- Depending on the size of the table, this conversion can take a long time.  Example - takes 45 minutes for 8 million rows 
		-- 
		ALTER TABLE KREW_DOC_HDR_CNTNT_T RENAME TO OLD_KREW_DOC_HDR_CNTNT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_CNTNT_T ( 
		    DOC_HDR_ID   	VARCHAR2(40),
		    DOC_CNTNT_TXT	CLOB NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_CNTNT_T SELECT * FROM OLD_KREW_DOC_HDR_CNTNT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_DOC_HDR_CNTNT_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_CNTNT_T ADD CONSTRAINT KREW_DOC_HDR_CNTNT_TP1 PRIMARY KEY (DOC_HDR_ID)
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_HDR_EXT_DT_T 
		-- 
		
		ALTER TABLE KREW_DOC_HDR_EXT_DT_T RENAME TO OLD_KREW_DOC_HDR_EXT_DT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_DT_T ( 
		    DOC_HDR_EXT_DT_ID	NUMBER(19,0),
		    DOC_HDR_ID   		VARCHAR2(40) NOT NULL,
		    KEY_CD           	VARCHAR2(256) NOT NULL,
		    VAL              	DATE NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_DT_T SELECT * FROM OLD_KREW_DOC_HDR_EXT_DT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_DOC_HDR_EXT_DT_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_DT_T ADD CONSTRAINT KREW_DOC_HDR_EXT_DT_TP1 PRIMARY KEY (DOC_HDR_EXT_DT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_DT_TI1 ON KREW_DOC_HDR_EXT_DT_T(KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_DT_TI2 ON KREW_DOC_HDR_EXT_DT_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_DT_TI3 ON KREW_DOC_HDR_EXT_DT_T(VAL)
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_HDR_EXT_LONG_T 
		-- 
		
		ALTER TABLE KREW_DOC_HDR_EXT_LONG_T RENAME TO OLD_KREW_DOC_HDR_EXT_LONG_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_LONG_T ( 
		    DOC_HDR_EXT_LONG_ID	NUMBER(19,0),
		    DOC_HDR_ID   		VARCHAR2(40) NOT NULL,
		    KEY_CD             	VARCHAR2(256) NOT NULL,
		    VAL                	NUMBER(22,0) NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_LONG_T SELECT * FROM OLD_KREW_DOC_HDR_EXT_LONG_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_DOC_HDR_EXT_LONG_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_LONG_T ADD CONSTRAINT KREW_DOC_HDR_EXT_LONG_TP1 PRIMARY KEY (DOC_HDR_EXT_LONG_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI1 ON KREW_DOC_HDR_EXT_LONG_T(KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI2 ON KREW_DOC_HDR_EXT_LONG_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI3 ON KREW_DOC_HDR_EXT_LONG_T(VAL)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_HDR_EXT_FLT_T 
		-- 
		
		ALTER TABLE KREW_DOC_HDR_EXT_FLT_T RENAME TO OLD_KREW_DOC_HDR_EXT_FLT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_FLT_T ( 
		    DOC_HDR_EXT_FLT_ID	NUMBER(19,0),
			DOC_HDR_ID    		VARCHAR2(40) NOT NULL,
		    KEY_CD            	VARCHAR2(256) NOT NULL,
		    VAL               	NUMBER(30,15) NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_FLT_T SELECT * FROM OLD_KREW_DOC_HDR_EXT_FLT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_DOC_HDR_EXT_FLT_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_FLT_T ADD CONSTRAINT KREW_DOC_HDR_EXT_FLT_TP1 PRIMARY KEY (DOC_HDR_EXT_FLT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI1 ON KREW_DOC_HDR_EXT_FLT_T(KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI2 ON KREW_DOC_HDR_EXT_FLT_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI3 ON KREW_DOC_HDR_EXT_FLT_T(VAL)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_HDR_EXT_T 
		-- 
		
		ALTER TABLE KREW_DOC_HDR_EXT_T RENAME TO OLD_KREW_DOC_HDR_EXT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_T ( 
		    DOC_HDR_EXT_ID	NUMBER(19,0),
			DOC_HDR_ID    	VARCHAR2(40) NOT NULL,
		    KEY_CD        	VARCHAR2(256) NOT NULL,
		    VAL           	VARCHAR2(2000)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_T SELECT * FROM OLD_KREW_DOC_HDR_EXT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_DOC_HDR_EXT_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_T ADD CONSTRAINT KREW_DOC_HDR_EXT_TP1 PRIMARY KEY (DOC_HDR_EXT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_TI1 ON KREW_DOC_HDR_EXT_T(KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_TI2 ON KREW_DOC_HDR_EXT_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_TI3 ON KREW_DOC_HDR_EXT_T(VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_HDR_T 
		-- This SQL works in such a way that the column does not change positions in the table.
		-- Done this way to limit disruption to existing indexes.
		--
		
		ALTER TABLE KREW_DOC_HDR_T ADD DOC_HDR_ID_TEMP VARCHAR2(40)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		UPDATE KREW_DOC_HDR_T SET DOC_HDR_ID_TEMP = DOC_HDR_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		UPDATE KREW_DOC_HDR_T SET DOC_HDR_ID = NULL
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_T MODIFY (DOC_HDR_ID VARCHAR2(40))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		UPDATE KREW_DOC_HDR_T SET DOC_HDR_ID = DOC_HDR_ID_TEMP
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_T DROP COLUMN DOC_HDR_ID_TEMP
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_NTE_T 
		--
		
		ALTER TABLE KREW_DOC_NTE_T RENAME TO OLD_KREW_DOC_NTE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_NTE_T ( 
		    DOC_NTE_ID    	NUMBER(19,0),
			DOC_HDR_ID    	VARCHAR2(40) NOT NULL,
		    AUTH_PRNCPL_ID	VARCHAR2(40) NOT NULL,
		    CRT_DT        	DATE NOT NULL,
		    TXT           	VARCHAR2(4000) NULL,
		    VER_NBR       	NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_NTE_T SELECT * FROM OLD_KREW_DOC_NTE_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_DOC_NTE_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_NTE_T ADD CONSTRAINT KREW_DOC_NTE_TP1 PRIMARY KEY (DOC_NTE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_NTE_TI1 ON KREW_DOC_NTE_T (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_TYP_T 
		-- After this conversion, the doc_hdr_id column will be at the end of the table. 
		-- Done this way to limit disruption to existing indexes.
		--
		
		ALTER TABLE KREW_DOC_TYP_T RENAME COLUMN DOC_HDR_ID TO DOC_HDR_ID_OLD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_T ADD DOC_HDR_ID VARCHAR2(40)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		UPDATE KREW_DOC_TYP_T SET DOC_HDR_ID = DOC_HDR_ID_OLD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_T DROP COLUMN DOC_HDR_ID_OLD
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_EDL_DMP_T 
		-- 
		
		ALTER TABLE KREW_EDL_DMP_T RENAME TO OLD_KREW_EDL_DMP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_EDL_DMP_T ( 
		    DOC_HDR_ID             	VARCHAR2(40),
		    DOC_TYP_NM             	VARCHAR2(64) NOT NULL,
		    DOC_HDR_STAT_CD        	CHAR(1) NOT NULL,
		    DOC_HDR_MDFN_DT        	DATE NOT NULL,
		    DOC_HDR_CRTE_DT        	DATE NOT NULL,
		    DOC_HDR_TTL            	VARCHAR2(255) NULL,
		    DOC_HDR_INITR_PRNCPL_ID	VARCHAR2(40) NOT NULL,
		    CRNT_NODE_NM           	VARCHAR2(30) NOT NULL,
		    VER_NBR                	NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_EDL_DMP_T SELECT * FROM OLD_KREW_EDL_DMP_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_EDL_DMP_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_EDL_DMP_T ADD CONSTRAINT KREW_EDL_DMP_TP1 PRIMARY KEY (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_EDL_DMP_TI1 ON KREW_EDL_DMP_T(DOC_TYP_NM, DOC_HDR_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_EDL_FLD_DMP_T 
		--
		
		ALTER TABLE KREW_EDL_FLD_DMP_T RENAME TO OLD_KREW_EDL_FLD_DMP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_EDL_FLD_DMP_T ( 
		    EDL_FIELD_DMP_ID	NUMBER(14,0),
		    DOC_HDR_ID      	VARCHAR2(40) NOT NULL,
		    FLD_NM          	VARCHAR2(255) NOT NULL,
		    FLD_VAL         	VARCHAR2(4000) NULL,
		    VER_NBR         	NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_EDL_FLD_DMP_T SELECT * FROM OLD_KREW_EDL_FLD_DMP_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_EDL_FLD_DMP_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_EDL_FLD_DMP_T ADD CONSTRAINT KREW_EDL_FLD_DMP_TP1 PRIMARY KEY (EDL_FIELD_DMP_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_INIT_RTE_NODE_INSTN_T 
		-- 
		
		ALTER TABLE KREW_INIT_RTE_NODE_INSTN_T RENAME TO OLD_INIT_RTE_NODE_INSTN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_INIT_RTE_NODE_INSTN_T ( 
		    DOC_HDR_ID       	VARCHAR2(40),
		    RTE_NODE_INSTN_ID	NUMBER(19,0)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_INIT_RTE_NODE_INSTN_T SELECT * FROM OLD_INIT_RTE_NODE_INSTN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_INIT_RTE_NODE_INSTN_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_INIT_RTE_NODE_INSTN_T ADD CONSTRAINT KREW_INIT_RTE_NODE_INSTN_TP1 PRIMARY KEY (DOC_HDR_ID, RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI1 ON KREW_INIT_RTE_NODE_INSTN_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI2 ON KREW_INIT_RTE_NODE_INSTN_T(RTE_NODE_INSTN_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_OUT_BOX_ITM_T 
		-- 
		
		ALTER TABLE KREW_OUT_BOX_ITM_T RENAME TO OLD_KREW_OUT_BOX_ITM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_OUT_BOX_ITM_T ( 
		    ACTN_ITM_ID   	NUMBER(14,0),
		    PRNCPL_ID     	VARCHAR2(40) NOT NULL,
		    ASND_DT       	DATE NOT NULL,
		    RQST_CD       	CHAR(1) NOT NULL,
		    ACTN_RQST_ID  	NUMBER(14,0) NOT NULL,
		    DOC_HDR_ID    	VARCHAR2(40) NOT NULL,
		    ROLE_NM       	VARCHAR2(2000) NULL,
		    DLGN_PRNCPL_ID	VARCHAR2(40) NULL,
		    DOC_HDR_TTL   	VARCHAR2(255) NULL,
		    DOC_TYP_LBL   	VARCHAR2(128) NOT NULL,
		    DOC_HDLR_URL  	VARCHAR2(255) NOT NULL,
		    DOC_TYP_NM    	VARCHAR2(64) NOT NULL,
		    RSP_ID        	NUMBER(14,0) NOT NULL,
		    DLGN_TYP      	VARCHAR2(1) NULL,
		    VER_NBR       	NUMBER(8,0) DEFAULT 0 NULL,
		    GRP_ID        	VARCHAR2(40) NULL,
		    DLGN_GRP_ID   	VARCHAR2(40) NULL,
		    RQST_LBL      	VARCHAR2(255) NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_OUT_BOX_ITM_T SELECT * FROM OLD_KREW_OUT_BOX_ITM_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_OUT_BOX_ITM_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_OUT_BOX_ITM_T ADD CONSTRAINT KREW_OUT_BOX_ITM_TP1 PRIMARY KEY (ACTN_ITM_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_OUT_BOX_ITM_TI1 ON KREW_OUT_BOX_ITM_T(PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_OUT_BOX_ITM_TI2 ON KREW_OUT_BOX_ITM_T(DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_OUT_BOX_ITM_TI3 ON KREW_OUT_BOX_ITM_T(ACTN_RQST_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_RMV_RPLC_DOC_T 
		--
		
		ALTER TABLE KREW_RMV_RPLC_DOC_T RENAME TO OLD_KREW_RMV_RPLC_DOC_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RMV_RPLC_DOC_T ( 
		    DOC_HDR_ID  	VARCHAR2(40),
		    OPRN          	CHAR(1) NOT NULL,
		    PRNCPL_ID     	VARCHAR2(40) NOT NULL,
		    RPLC_PRNCPL_ID	VARCHAR2(40) NULL,
		    VER_NBR       	NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RMV_RPLC_DOC_T SELECT * FROM OLD_KREW_RMV_RPLC_DOC_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_RMV_RPLC_DOC_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RMV_RPLC_DOC_T ADD CONSTRAINT KREW_RMV_RPLC_DOC_TP1 PRIMARY KEY (DOC_HDR_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_RMV_RPLC_GRP_T 
		--
		
		ALTER TABLE KREW_RMV_RPLC_GRP_T RENAME TO OLD_KREW_RMV_RPLC_GRP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RMV_RPLC_GRP_T ( 
		    DOC_HDR_ID  VARCHAR2(40),
		    GRP_ID    	NUMBER(14,0)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RMV_RPLC_GRP_T SELECT * FROM OLD_KREW_RMV_RPLC_GRP_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_RMV_RPLC_GRP_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RMV_RPLC_GRP_T ADD CONSTRAINT KREW_RMV_RPLC_GRP_TP1 PRIMARY KEY (DOC_HDR_ID, GRP_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_RMV_RPLC_RULE_T 
		--
		
		ALTER TABLE KREW_RMV_RPLC_RULE_T RENAME TO OLD_KREW_RMV_RPLC_RULE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RMV_RPLC_RULE_T ( 
		    DOC_HDR_ID  VARCHAR2(40),
		    RULE_ID   	NUMBER(19,0)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RMV_RPLC_RULE_T SELECT * FROM OLD_KREW_RMV_RPLC_RULE_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_RMV_RPLC_RULE_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RMV_RPLC_RULE_T ADD CONSTRAINT KREW_RMV_RPLC_RULE_TP1 PRIMARY KEY (DOC_HDR_ID, RULE_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_RTE_NODE_INSTN_T 
		-- 
		
		ALTER TABLE KREW_RTE_NODE_INSTN_T RENAME TO OLD_KREW_RTE_NODE_INSTN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_NODE_INSTN_T ( 
		    RTE_NODE_INSTN_ID     	NUMBER(19,0),
		    DOC_HDR_ID            	VARCHAR2(40) NOT NULL,
		    RTE_NODE_ID           	NUMBER(19,0) NOT NULL,
		    BRCH_ID               	NUMBER(19,0) NULL,
		    PROC_RTE_NODE_INSTN_ID	NUMBER(19,0) NULL,
		    ACTV_IND              	NUMBER(1,0) DEFAULT 0 NOT NULL,
		    CMPLT_IND             	NUMBER(1,0) DEFAULT 0 NOT NULL,
		    INIT_IND              	NUMBER(1,0) DEFAULT 0 NOT NULL,
		    VER_NBR               	NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_NODE_INSTN_T SELECT * FROM OLD_KREW_RTE_NODE_INSTN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_RTE_NODE_INSTN_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_INSTN_T ADD CONSTRAINT KREW_RTE_NODE_INSTN_TP1 PRIMARY KEY (RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI1 ON KREW_RTE_NODE_INSTN_T(DOC_HDR_ID, ACTV_IND, CMPLT_IND)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI2 ON KREW_RTE_NODE_INSTN_T(RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI3 ON KREW_RTE_NODE_INSTN_T(BRCH_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI4 ON KREW_RTE_NODE_INSTN_T(PROC_RTE_NODE_INSTN_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_RULE_T
		--
		
		ALTER TABLE KREW_RULE_T RENAME TO OLD_KREW_RULE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_T ( 
		    RULE_ID           	NUMBER(19,0),
		    NM                	VARCHAR2(256) NULL,
		    RULE_TMPL_ID      	NUMBER(19,0) NULL,
		    RULE_EXPR_ID      	NUMBER(19,0) NULL,
		    ACTV_IND          	NUMBER(1,0) NOT NULL,
		    RULE_BASE_VAL_DESC	VARCHAR2(2000) NULL,
		    FRC_ACTN          	NUMBER(1,0) NOT NULL,
		    DOC_TYP_NM        	VARCHAR2(64) NOT NULL,
		    DOC_HDR_ID          VARCHAR2(40) NULL,
		    TMPL_RULE_IND     	NUMBER(1,0) NULL,
		    FRM_DT            	DATE NULL,
		    TO_DT             	DATE NULL,
		    DACTVN_DT         	DATE NULL,
		    CUR_IND           	NUMBER(1,0) DEFAULT 0 NULL,
		    RULE_VER_NBR      	NUMBER(8,0) DEFAULT 0 NULL,
		    DLGN_IND          	NUMBER(1,0) NULL,
		    PREV_RULE_VER_NBR 	NUMBER(19,0) NULL,
		    ACTVN_DT          	DATE NULL,
		    VER_NBR           	NUMBER(8,0) DEFAULT 0 NULL,
		    OBJ_ID            	VARCHAR2(36) NOT NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_T SELECT * FROM OLD_KREW_RULE_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_RULE_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_T ADD CONSTRAINT KREW_RULE_TP1 PRIMARY KEY (RULE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_T ADD CONSTRAINT KREW_RULE_TC0 UNIQUE (OBJ_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KREW_DOC_LNK_T 
		--
		
		ALTER TABLE KREW_DOC_LNK_T RENAME TO OLD_KREW_DOC_LNK_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		create table KREW_DOC_LNK_T(
		           DOC_LNK_ID NUMBER(19),
		           ORGN_DOC_ID VARCHAR2(40) NOT NULL,
		           DEST_DOC_ID VARCHAR2(40) NOT NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_LNK_T SELECT * FROM OLD_KREW_DOC_LNK_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DROP TABLE OLD_KREW_DOC_LNK_T
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_LNK_T ADD CONSTRAINT KREW_DOC_LNK_TP1 PRIMARY KEY (DOC_LNK_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		create INDEX KREW_DOC_LNK_TI1 on krew_doc_lnk_t(ORGN_DOC_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- 
		-- 2011-05-09.sql
		-- 
		--
		--
		-- DDL for KRMS repository
		--
		--
		-- -----------------------------------------------------
		-- Table krms_typ_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_typ_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_typ_t (
		  typ_id VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  nmspc_cd VARCHAR2(40)  NOT NULL ,
		  srvc_nm VARCHAR2(200) NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (typ_id) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		-- -----------------------------------------------------
		-- Table krms_attr_defn_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_attr_defn_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_attr_defn_t (
		  attr_defn_id VARCHAR2(255)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  nmspc_cd VARCHAR2(40)  NOT NULL ,
		  lbl VARCHAR2(40) NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  cmpnt_nm VARCHAR2(100) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (attr_defn_id) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_typ_attr_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_typ_attr_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_typ_attr_t (
		  typ_attr_id VARCHAR2(40)  NOT NULL ,
		  seq_no NUMBER(5)  NOT NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  attr_defn_id VARCHAR2(255)  NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (typ_attr_id) ,
		  -- CREATE INDEX krms_typ_attr_ti1 (attr_defn_id ASC) ,
		  -- CREATE INDEX krms_typ_attr_ti2 (typ_id ASC) ,
		  CONSTRAINT krms_typ_attr_tc1 UNIQUE (typ_id, attr_defn_id) ,
		  CONSTRAINT krms_typ_attr_fk1
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krms_attr_defn_t (attr_defn_id ),
		  CONSTRAINT krms_typ_attr_fk2
		    FOREIGN KEY (typ_id )
		    REFERENCES krms_typ_t (typ_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_typ_attr_ti1 on krms_typ_attr_t (attr_defn_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_typ_attr_ti2 on krms_typ_attr_t (typ_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_rule_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_rule_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_rule_t (
		  rule_id VARCHAR2(40)  NOT NULL ,
		  nmspc_cd VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  prop_id VARCHAR2(40)  NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  descr_txt VARCHAR2(4000) NULL ,
		  PRIMARY KEY (rule_id) 
		  -- CREATE INDEX krms_rule_ti1 (prop_id ASC) ,
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_rule_ti1 on krms_rule_t (prop_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krms_prop_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_prop_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_prop_t (
		  prop_id VARCHAR2(40)  NOT NULL ,
		  desc_txt VARCHAR2(100) NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  dscrm_typ_cd VARCHAR2(10)  NOT NULL ,
		  cmpnd_op_cd VARCHAR2(40) NULL ,
		  rule_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (prop_id) ,
		  -- CREATE INDEX krms_prop_ti1 (rule_id ASC) ,
		  -- CREATE INDEX krms_prop_fk2 (typ_id ASC) ,
		  CONSTRAINT krms_prop_fk1
		    FOREIGN KEY (rule_id )
		    REFERENCES krms_rule_t (rule_id ) ,
		  CONSTRAINT krms_prop_fk2
		    FOREIGN KEY (typ_id )
		    REFERENCES krms_typ_t (typ_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_prop_ti1 on krms_prop_t (rule_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_prop_fk2 on krms_prop_t (typ_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		ALTER TABLE krms_rule_t ADD CONSTRAINT krms_rule_fk1
		    FOREIGN KEY (prop_id )
		    REFERENCES krms_prop_t (prop_id )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_rule_attr_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_rule_attr_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_rule_attr_t (
		  rule_attr_id VARCHAR2(40)  NOT NULL ,
		  rule_id VARCHAR2(40)  NOT NULL ,
		  attr_defn_id VARCHAR2(40)  NOT NULL ,
		  attr_val VARCHAR2(400) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (rule_attr_id) ,
		  -- CREATE INDEX krms_rule_attr_ti1 (rule_id ASC) ,
		  -- CREATE INDEX krms_rule_attr_ti2 (attr_defn_id ASC) ,
		  CONSTRAINT krms_rule_attr_fk1
		    FOREIGN KEY (rule_id )
		    REFERENCES krms_rule_t (rule_id ) ,
		  CONSTRAINT krms_rule_attr_fk2
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krms_attr_defn_t (attr_defn_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_rule_attr_ti1 on krms_rule_attr_t (rule_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_rule_attr_ti2 on krms_rule_attr_t (attr_defn_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_actn_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_actn_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_actn_t (
		  actn_id VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(40) NULL ,
		  desc_txt VARCHAR2(4000) NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  rule_id VARCHAR2(40) NULL ,
		  seq_no NUMBER(5) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (actn_id) ,
		  -- CREATE INDEX KRMS_ACTN_TI2 (rule_id ASC) ,
		  -- CREATE INDEX KRMS_ACTN_TI1 (typ_id ASC) ,
		  CONSTRAINT KRMS_ACTN_TC2 UNIQUE (actn_id, rule_id, seq_no) ,
		  -- CREATE INDEX KRMS_ACTN_TI3 (rule_id ASC, seq_no ASC) ,
		  CONSTRAINT KRMS_ACTN_FK1
		    FOREIGN KEY (rule_id )
		    REFERENCES krms_rule_t (rule_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX KRMS_ACTN_TI2 on krms_actn_t (rule_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRMS_ACTN_TI1 on krms_actn_t (typ_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRMS_ACTN_TI3 on krms_actn_t (rule_id ASC, seq_no ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_actn_attr_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_actn_attr_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_actn_attr_t (
		  actn_attr_data_id VARCHAR2(40)  NOT NULL ,
		  actn_id VARCHAR2(40)  NOT NULL ,
		  attr_defn_id VARCHAR2(40)  NOT NULL ,
		  attr_val VARCHAR2(400) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (actn_attr_data_id) ,
		  -- CREATE INDEX krms_actn_attr_ti1 (actn_id ASC) ,
		  -- CREATE INDEX krms_actn_attr_ti2 (attr_defn_id ASC) ,
		  CONSTRAINT krms_actn_attr_fk1
		    FOREIGN KEY (actn_id )
		    REFERENCES krms_actn_t (actn_id ) ,
		  CONSTRAINT krms_actn_attr_fk2
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krms_attr_defn_t (attr_defn_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_actn_attr_ti1 on krms_actn_attr_t (actn_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_actn_attr_ti2 on krms_actn_attr_t (attr_defn_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_cmpnd_prop_props_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cmpnd_prop_props_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cmpnd_prop_props_t (
		  cmpnd_prop_id VARCHAR2(40)  NOT NULL ,
		  prop_id VARCHAR2(40)  NOT NULL ,
		  seq_no NUMBER(5)  NOT NULL ,
		  PRIMARY KEY (cmpnd_prop_id, prop_id) ,
		  -- CREATE INDEX krms_cmpnd_prop_props_ti1 (prop_id ASC) ,
		  -- CREATE INDEX krms_cmpnd_prop_props_fk2 (cmpnd_prop_id ASC) ,
		  CONSTRAINT krms_cmpnd_prop_props_fk1
		    FOREIGN KEY (prop_id )
		    REFERENCES krms_prop_t (prop_id ) ,
		  CONSTRAINT krms_cmpnd_prop_props_fk2
		    FOREIGN KEY (cmpnd_prop_id )
		    REFERENCES krms_prop_t (prop_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cmpnd_prop_props_ti1 on krms_cmpnd_prop_props_t (prop_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_cmpnd_prop_props_fk2 on krms_cmpnd_prop_props_t (cmpnd_prop_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_prop_parm_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_prop_parm_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_prop_parm_t (
		  prop_parm_id VARCHAR2(40)  NOT NULL ,
		  prop_id VARCHAR2(40)  NOT NULL ,
		  parm_val VARCHAR2(255) NULL ,
		  parm_typ_cd VARCHAR2(1)  NOT NULL ,
		  seq_no NUMBER(5)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (prop_parm_id) ,
		  -- CREATE INDEX krms_prop_parm_ti1 (prop_id ASC) ,
		  CONSTRAINT krms_prop_parm_fk1
		    FOREIGN KEY (prop_id )
		    REFERENCES krms_prop_t (prop_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_prop_parm_ti1 ON krms_prop_parm_t (prop_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_t (
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  nmspc_cd VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (cntxt_id) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		-- -----------------------------------------------------
		-- Table krms_agenda_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_agenda_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_agenda_t (
		  agenda_id VARCHAR2(40)  NOT NULL ,
		  nmspc_cd VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  init_agenda_itm_id VARCHAR2(40) NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (agenda_id) ,
		  -- CREATE INDEX krms_agenda_ti1 (cntxt_id ASC) ,
		  CONSTRAINT krms_agenda_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_agenda_ti1 on krms_agenda_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		-- -----------------------------------------------------
		-- Table krms_agenda_attr_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_agenda_attr_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_agenda_attr_t (
		  agenda_attr_id VARCHAR2(40)  NOT NULL ,
		  agenda_id VARCHAR2(40)  NOT NULL ,
		  attr_val VARCHAR2(400) NULL ,
		  attr_defn_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (agenda_attr_id) ,
		  -- CREATE INDEX krms_agenda_attr_ti1 (agenda_id ASC) ,
		  -- CREATE INDEX krms_agenda_attr_t12 (attr_defn_id ASC) ,
		  CONSTRAINT krms_agenda_attr_fk1
		    FOREIGN KEY (agenda_id )
		    REFERENCES krms_agenda_t (agenda_id ),
		  CONSTRAINT krms_agenda_attr_fk2
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krms_attr_defn_t (attr_defn_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_agenda_attr_ti1 on krms_agenda_attr_t (agenda_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_agenda_attr_t12 on krms_agenda_attr_t (attr_defn_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_agenda_itm_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_agenda_itm_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_agenda_itm_t (
		  agenda_itm_id VARCHAR2(40)  NOT NULL ,
		  rule_id VARCHAR2(40) NULL ,
		  sub_agenda_id VARCHAR2(40) NULL ,
		  agenda_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  when_true VARCHAR2(40) NULL ,
		  when_false VARCHAR2(40) NULL ,
		  always VARCHAR2(40) NULL ,
		  PRIMARY KEY (agenda_itm_id) ,
		  -- CREATE INDEX krms_agenda_itm_ti1 (rule_id ASC) ,
		  -- CREATE INDEX krms_agenda_itm_ti2 (agenda_id ASC) ,
		  -- CREATE INDEX krms_agenda_itm_ti3 (sub_agenda_id ASC) ,
		  -- CREATE INDEX krms_agenda_itm_ti4 (when_true ASC) ,
		  -- CREATE INDEX krms_agenda_itm_ti5 (when_false ASC) ,
		  -- CREATE INDEX krms_agenda_itm_ti6 (always ASC) ,
		  CONSTRAINT krms_agenda_itm_fk1
		    FOREIGN KEY (rule_id )
		    REFERENCES krms_rule_t (rule_id ) ,
		  CONSTRAINT krms_agenda_itm_fk2
		    FOREIGN KEY (agenda_id )
		    REFERENCES krms_agenda_t (agenda_id ) ,
		  CONSTRAINT krms_agenda_itm_fk3
		    FOREIGN KEY (sub_agenda_id )
		    REFERENCES krms_agenda_t (agenda_id ) ,
		  CONSTRAINT krms_agenda_itm_fk4
		    FOREIGN KEY (when_true )
		    REFERENCES krms_agenda_itm_t (agenda_itm_id ) ,
		  CONSTRAINT krms_agenda_itm_fk5
		    FOREIGN KEY (when_false )
		    REFERENCES krms_agenda_itm_t (agenda_itm_id ) ,
		  CONSTRAINT krms_agenda_itm_fk6
		    FOREIGN KEY (always )
		    REFERENCES krms_agenda_itm_t (agenda_itm_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_agenda_itm_ti1 on krms_agenda_itm_t (rule_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_agenda_itm_ti2 on krms_agenda_itm_t (agenda_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_agenda_itm_ti3 on krms_agenda_itm_t (sub_agenda_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_agenda_itm_ti4 on krms_agenda_itm_t (when_true ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_agenda_itm_ti5 on krms_agenda_itm_t (when_false ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_agenda_itm_ti6 on krms_agenda_itm_t (always ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		-- -----------------------------------------------------
		-- Table krms_func_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_func_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_func_t (
		  func_id VARCHAR2(40)  NOT NULL ,
		  nmspc_cd VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  desc_txt VARCHAR2(255) NULL ,
		  rtrn_typ VARCHAR2(255)  NOT NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (func_id) ,
		  -- CREATE INDEX krms_func_ti1 (typ_id ASC) ,
		  CONSTRAINT krms_func_fk1
		    FOREIGN KEY (typ_id )
		    REFERENCES krms_typ_t (typ_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_func_ti1 on krms_func_t (typ_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		-- -----------------------------------------------------
		-- Table krms_func_parm_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_func_parm_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_func_parm_t (
		  func_parm_id VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  desc_txt VARCHAR2(255) NULL ,
		  typ VARCHAR2(255)  NOT NULL ,
		  func_id VARCHAR2(40)  NOT NULL ,
		  seq_no NUMBER(5)  NOT NULL ,
		  PRIMARY KEY (func_parm_id) ,
		  -- CREATE INDEX krms_func_parm_ti1 (func_id ASC) ,
		  CONSTRAINT krms_func_parm_fk1
		    FOREIGN KEY (func_id )
		    REFERENCES krms_func_t (func_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_func_parm_ti1 on krms_func_parm_t (func_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krms_term_spec_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_term_spec_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_term_spec_t (
		  term_spec_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40) NULL ,
		  nm VARCHAR2(255)  NOT NULL ,
		  typ VARCHAR2(255)  NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8)  NOT NULL ,
		  PRIMARY KEY (term_spec_id) ,
		  CONSTRAINT krms_asset_tc1 UNIQUE (nm, cntxt_id) ,
		  -- CREATE INDEX krms_asset_ti1 (cntxt_id ASC) ,
		  CONSTRAINT krms_asset_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_asset_ti1 on krms_term_spec_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		-- -----------------------------------------------------
		-- Table krms_term_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_term_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_term_t (
		  term_id VARCHAR2(40)  NOT NULL ,
		  term_spec_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8)  NOT NULL ,
		  PRIMARY KEY (term_id) ,
		  -- CREATE INDEX krms_term_ti1 (term_spec_id ASC) ,
		  CONSTRAINT krms_term_t__fk1
		    FOREIGN KEY (term_spec_id )
		    REFERENCES krms_term_spec_t (term_spec_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_term_ti1 on krms_term_t (term_spec_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_term_parm_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_term_parm_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_term_parm_t (
		  term_parm_id VARCHAR2(40)  NOT NULL ,
		  term_id VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(255)  NOT NULL ,
		  val VARCHAR2(255) NULL ,
		  ver_nbr NUMBER(8)  NOT NULL ,
		  PRIMARY KEY (term_parm_id) ,
		  -- CREATE INDEX krms_term_parm_ti1 (term_id ASC) ,
		  CONSTRAINT krms_term_parm_fk1
		    FOREIGN KEY (term_id )
		    REFERENCES krms_term_t (term_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_term_parm_ti1 on krms_term_parm_t (term_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_term_spec_prereq_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_term_spec_prereq_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_term_spec_prereq_t (
		  cntxt_term_spec_prereq_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  term_spec_id VARCHAR2(40)  NOT NULL ,
		  PRIMARY KEY (cntxt_term_spec_prereq_id) ,
		  -- CREATE INDEX krms_cntxt_asset_prereq_ti1 (cntxt_id ASC) ,
		  -- CREATE INDEX krms_cntxt_asset_prereq_ti2 (term_spec_id ASC) ,
		  CONSTRAINT krms_cntxt_asset_prereq_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) ,
		  CONSTRAINT krms_cntxt_asset_prereq_fk2
		    FOREIGN KEY (term_spec_id )
		    REFERENCES krms_term_spec_t (term_spec_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cntxt_asset_prereq_ti1 on krms_cntxt_term_spec_prereq_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_cntxt_asset_prereq_ti2 on krms_cntxt_term_spec_prereq_t (term_spec_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		-- -----------------------------------------------------
		-- Table krms_term_rslvr_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_term_rslvr_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_term_rslvr_t (
		  term_rslvr_id VARCHAR2(40)  NOT NULL ,
		  nmspc_cd VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(100)  NOT NULL ,
		  typ_id VARCHAR2(40)  NOT NULL ,
		  output_term_spec_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40) NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y'  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (term_rslvr_id) ,
		  -- CREATE INDEX krms_term_rslvr_ti1 (cntxt_id ASC) ,
		  -- CREATE INDEX krms_term_rslvr_ti2 (typ_id ASC) ,
		  CONSTRAINT krms_term_rslvr_tc1 UNIQUE (nmspc_cd, nm, cntxt_id) ,
		  CONSTRAINT krms_term_rslvr_fk1
		    FOREIGN KEY (output_term_spec_id )
		    REFERENCES krms_term_spec_t (term_spec_id ) ,
		  CONSTRAINT krms_term_rslvr_fk2
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) ,
		  CONSTRAINT krms_term_rslvr_fk3
		    FOREIGN KEY (typ_id )
		    REFERENCES krms_typ_t (typ_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_term_rslvr_ti1 on krms_term_rslvr_t (cntxt_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_term_rslvr_ti2 on krms_term_rslvr_t (typ_id ASC) 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		     --
		     ----
		------------
		---------------
		------------
		     ----
		     --
		
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_attr_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_attr_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_attr_t (
		  cntxt_attr_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  attr_val VARCHAR2(400) NULL ,
		  attr_defn_id VARCHAR2(40) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (cntxt_attr_id) ,
		  -- CREATE INDEX krms_cntxt_attr_ti1 (cntxt_id ASC) ,
		  -- CREATE INDEX krms_cntxt_attr_ti2 (attr_defn_id ASC) ,
		  CONSTRAINT krms_cntxt_attr_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) ,
		  CONSTRAINT krms_cntxt_attr_fk2
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krms_attr_defn_t (attr_defn_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cntxt_attr_ti1 on krms_cntxt_attr_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_cntxt_attr_ti2 on krms_cntxt_attr_t (attr_defn_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_vld_actn_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_vld_actn_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_vld_actn_t (
		  cntxt_vld_actn_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  actn_typ_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (cntxt_vld_actn_id) ,
		  -- CREATE INDEX krms_cntxt_vld_actn_ti1 (cntxt_id ASC) ,
		  CONSTRAINT krms_cntxt_vld_actn_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cntxt_vld_actn_ti1 on krms_cntxt_vld_actn_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_term_rslvr_attr_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_term_rslvr_attr_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_term_rslvr_attr_t (
		  term_rslvr_attr_id VARCHAR2(40)  NOT NULL ,
		  term_rslvr_id VARCHAR2(40)  NOT NULL ,
		  attr_defn_id VARCHAR2(40)  NOT NULL ,
		  attr_val VARCHAR2(400) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (term_rslvr_attr_id) ,
		  -- CREATE INDEX krms_asset_rslvr_attr_ti1 (term_rslvr_id ASC) ,
		  -- CREATE INDEX krms_asset_rslvr_attr_ti2 (attr_defn_id ASC) ,
		  CONSTRAINT krms_asset_rslvr_attr_fk1
		    FOREIGN KEY (term_rslvr_id )
		    REFERENCES krms_term_rslvr_t (term_rslvr_id ) ,
		  CONSTRAINT krms_asset_rslvr_attr_fk2
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krms_attr_defn_t (attr_defn_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_asset_rslvr_attr_ti1 on krms_term_rslvr_attr_t (term_rslvr_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_asset_rslvr_attr_ti2 on krms_term_rslvr_attr_t (attr_defn_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_term_rslvr_input_spec_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_term_rslvr_input_spec_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_term_rslvr_input_spec_t (
		  term_spec_id VARCHAR2(40)  NOT NULL ,
		  term_rslvr_id VARCHAR2(40)  NOT NULL ,
		  -- CREATE INDEX krms_input_asset_ti1 (term_spec_id ASC) ,
		  -- CREATE INDEX krms_input_asset_ti2 (term_rslvr_id ASC) ,
		  PRIMARY KEY (term_spec_id, term_rslvr_id) ,
		  CONSTRAINT krms_input_asset_fk2
		    FOREIGN KEY (term_spec_id )
		    REFERENCES krms_term_spec_t (term_spec_id ) ,
		  CONSTRAINT krms_input_asset_fk1
		    FOREIGN KEY (term_rslvr_id )
		    REFERENCES krms_term_rslvr_t (term_rslvr_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_input_asset_ti1 on krms_term_rslvr_input_spec_t (term_spec_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX krms_input_asset_ti2 on krms_term_rslvr_input_spec_t (term_rslvr_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		-- -----------------------------------------------------
		-- Table krms_term_rslvr_parm_spec_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_term_rslvr_parm_spec_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_term_rslvr_parm_spec_t (
		  term_rslvr_parm_spec_id VARCHAR2(40)  NOT NULL ,
		  term_rslvr_id VARCHAR2(40)  NOT NULL ,
		  nm VARCHAR2(45)  NOT NULL ,
		  ver_nbr NUMBER(8)  NOT NULL ,
		  PRIMARY KEY (term_rslvr_parm_spec_id) ,
		  -- CREATE INDEX krms_term_reslv_parm_fk1 (term_rslvr_id ASC) ,
		  CONSTRAINT krms_term_reslv_parm_fk1
		    FOREIGN KEY (term_rslvr_id )
		    REFERENCES krms_term_rslvr_t (term_rslvr_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_term_reslv_parm_fk1 on krms_term_rslvr_parm_spec_t (term_rslvr_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_vld_func_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_vld_func_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_vld_func_t (
		  cntxt_vld_func_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  func_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (cntxt_vld_func_id) ,
		  -- CREATE INDEX krms_cntxt_vld_func_ti1 (cntxt_id ASC) ,
		  CONSTRAINT krms_cntxt_vld_func_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cntxt_vld_func_ti1 on krms_cntxt_vld_func_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_vld_rule_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_vld_rule_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_vld_rule_t (
		  cntxt_vld_rule_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  rule_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (cntxt_vld_rule_id) ,
		  -- CREATE INDEX krms_cntxt_vld_rule_ti1 (cntxt_id ASC) ,
		  CONSTRAINT krms_cntxt_vld_rule_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cntxt_vld_rule_ti1 on krms_cntxt_vld_rule_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_vld_event_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_vld_event_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_vld_event_t (
		  cntxt_vld_event_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  event_nm VARCHAR2(255)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (cntxt_vld_event_id) ,
		  -- CREATE INDEX krms_cntxt_vld_event_ti1 (cntxt_id ASC) ,
		  CONSTRAINT krms_cntxt_vld_event_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cntxt_vld_event_ti1 on krms_cntxt_vld_event_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		--
		--
		-- sequences
		--
		--
		
		
		CREATE SEQUENCE krms_typ_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_prop_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_rule_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_agenda_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_attr_defn_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_typ_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_actn_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_actn_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_agenda_itm_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_rule_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_vld_actn_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_agenda_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cmpnd_prop_props_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_prop_parm_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_term_spec_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_term_rslvr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_term_rslvr_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_term_rslvr_input_spec_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_term_spec_prereq_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_term_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_term_rslvr_parm_spec_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_term_parm_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_func_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_func_parm_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_vld_func_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_vld_rule_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_vld_event_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-05-13.sql
		-- 
		
		
		drop table KRSB_SVC_DEF_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop table KRSB_FLT_SVC_DEF_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop sequence KRSB_SVC_DEF_S
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop sequence KRSB_FLT_SVC_DEF_S
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KRSB_SVC_DSCRPTR_T (
		  SVC_DSCRPTR_ID varchar2(40) NOT NULL,
		  DSCRPTR clob NOT NULL,
		  PRIMARY KEY (SVC_DSCRPTR_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE SEQUENCE KRSB_SVC_DSCRPTR_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KRSB_SVC_DEF_T (
		  SVC_DEF_ID varchar2(40) NOT NULL,
		  SVC_NM varchar2(255) NOT NULL,
		  SVC_URL varchar2(500) NOT NULL,
		  INSTN_ID varchar2(255) NOT NULL,
		  APPL_NMSPC varchar2(255) NOT NULL,
		  SRVR_IP varchar2(40) NOT NULL,
		  TYP_CD varchar2(40) NOT NULL,
		  SVC_VER varchar2(40) NOT NULL,
		  STAT_CD varchar2(1) NOT NULL,
		  SVC_DSCRPTR_ID varchar2(40) NOT NULL,
		  CHKSM varchar2(30) NOT NULL,
		  VER_NBR number(8) DEFAULT 0 NOT NULL,
		  PRIMARY KEY (SVC_DEF_ID),
		  CONSTRAINT KRSB_SVC_DEF_FK1
		    FOREIGN KEY (SVC_DSCRPTR_ID)
		    REFERENCES KRSB_SVC_DSCRPTR_T(SVC_DSCRPTR_ID) ON DELETE CASCADE
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE SEQUENCE KRSB_SVC_DEF_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRSB_SVC_DEF_TI1 on KRSB_SVC_DEF_T (INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRSB_SVC_DEF_TI2 on KRSB_SVC_DEF_T (SVC_NM, STAT_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRSB_SVC_DEF_TI3 on KRSB_SVC_DEF_T (STAT_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-06-06.sql
		-- 
		
		
		ALTER TABLE KREW_DOC_TYP_T RENAME COLUMN SVC_NMSPC TO APPL_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_ATTR_T RENAME COLUMN SVC_NMSPC TO APPL_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRSB_SVC_DEF_T RENAME COLUMN APPL_NMSPC TO APPL_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRSB_MSG_QUE_T RENAME COLUMN SVC_NMSPC TO APPL_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRNS_NMSPC_T RENAME COLUMN APPL_NMSPC_CD TO APPL_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRNS_PARM_T RENAME COLUMN APPL_NMSPC_CD TO APPL_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KRNS_NMSPC_T RENAME TO KRCR_NMSPC_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRNS_PARM_TYP_T RENAME TO KRCR_PARM_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRNS_PARM_DTL_TYP_T RENAME TO KRCR_PARM_DTL_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRNS_PARM_T RENAME TO KRCR_PARM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KRNS_CAMPUS_T RENAME TO KRLC_CMP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRNS_CMP_TYP_T RENAME TO KRLC_CMP_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KR_COUNTRY_T RENAME TO KRLC_CNTRY_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KR_STATE_T RENAME TO KRLC_ST_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KR_POSTAL_CODE_T RENAME TO KRLC_PSTL_CD_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KR_COUNTY_T RENAME TO KRLC_CNTY_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-06-08.sql
		-- 
		
		
		-- make krms_rule_t.prop_id nullable
		alter table krms_rule_t modify (prop_id NULL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- add krms_actn_t.nmspc_cd
		alter table krms_actn_t add nmspc_cd varchar2(40) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- make krms_agenda_t default to 'Y'
		alter table krms_agenda_t modify actv varchar2(1) DEFAULT 'Y'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- make krms_prop_t.typ_id nullable 
		alter table krms_prop_t modify (typ_id NULL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- change krms_rule_t.descr_txt to desc_t for consistency
		alter table krms_rule_t rename column descr_txt to desc_txt
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-06-13-m6.sql
		-- 
		
		
		update krew_doc_typ_t set post_prcsr = 'org.kuali.rice.krad.workflow.postprocessor.KualiPostProcessor' where post_prcsr = 'org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krew_rule_attr_t set cls_nm = 'org.kuali.rice.krad.workflow.attribute.KualiXmlSearchableAttributeImpl' where cls_nm = 'org.kuali.rice.kns.workflow.attribute.KualiXmlSearchableAttributeImpl'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krew_rule_attr_t set cls_nm = 'org.kuali.rice.kns.workflow.attribute.KualiXMLBooleanTranslatorSearchableAttributeImpl' where cls_nm = 'org.kuali.rice.kns.workflow.attribute.KualiXMLBooleanTranslatorSearchableAttributeImpl'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krew_rule_attr_t set cls_nm = 'org.kuali.rice.kns.workflow.attribute.KualiXmlRuleAttributeImpl' where cls_nm = 'org.kuali.rice.kns.workflow.attribute.KualiXmlRuleAttributeImpl'
		]]></sql>



		
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_T RENAME TO OLD_KREW_DOC_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KREW_DOC_TYP_T
		(
		      DOC_TYP_ID VARCHAR2(40)
		        , PARNT_ID VARCHAR2(40)
		        , DOC_TYP_NM VARCHAR2(64)
		        , DOC_TYP_VER_NBR NUMBER(10) default 0
		        , ACTV_IND NUMBER(1)
		        , CUR_IND NUMBER(1)
		        , LBL VARCHAR2(128)
		        , PREV_DOC_TYP_VER_NBR VARCHAR2(40)
		        , DOC_TYP_DESC VARCHAR2(4000)
		        , DOC_HDLR_URL VARCHAR2(255)
		        , POST_PRCSR VARCHAR2(255)
		        , JNDI_URL VARCHAR2(255)
		        , BLNKT_APPR_PLCY VARCHAR2(10)
		        , ADV_DOC_SRCH_URL VARCHAR2(255)
		        , CSTM_ACTN_LIST_ATTRIB_CLS_NM VARCHAR2(255)
		        , CSTM_ACTN_EMAIL_ATTRIB_CLS_NM VARCHAR2(255)
		        , CSTM_DOC_NTE_ATTRIB_CLS_NM VARCHAR2(255)
		        , RTE_VER_NBR VARCHAR2(2) default '1'
		        , NOTIFY_ADDR VARCHAR2(255)
		        , APPL_ID VARCHAR2(255)
		        , EMAIL_XSL VARCHAR2(255)
		        , SEC_XML CLOB
		        , VER_NBR NUMBER(8) default 0
		        , BLNKT_APPR_GRP_ID VARCHAR2(40)
		        , RPT_GRP_ID VARCHAR2(40)
		        , GRP_ID VARCHAR2(40)
		        , HELP_DEF_URL VARCHAR2(4000)
		        , OBJ_ID VARCHAR2(36) NOT NULL
		        , DOC_SEARCH_HELP_URL VARCHAR2(4000)
		        , DOC_HDR_ID VARCHAR2(40)
		    , CONSTRAINT KREW_DOC_TYP_TC0 UNIQUE (OBJ_ID)
		    , CONSTRAINT KREW_DOC_TYP_TI1 UNIQUE (DOC_TYP_NM, DOC_TYP_VER_NBR)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		INSERT INTO KREW_DOC_TYP_T(
				DOC_TYP_ID
		        , PARNT_ID
		        , DOC_TYP_NM
		        , DOC_TYP_VER_NBR
		        , ACTV_IND
		        , CUR_IND
		        , LBL
		        , PREV_DOC_TYP_VER_NBR
		        , DOC_TYP_DESC
		        , DOC_HDLR_URL
		        , POST_PRCSR
		        , JNDI_URL
		        , BLNKT_APPR_PLCY
		        , ADV_DOC_SRCH_URL
		        , CSTM_ACTN_LIST_ATTRIB_CLS_NM
		        , CSTM_ACTN_EMAIL_ATTRIB_CLS_NM
		        , CSTM_DOC_NTE_ATTRIB_CLS_NM
		        , RTE_VER_NBR
		        , NOTIFY_ADDR
		        , APPL_ID
		        , EMAIL_XSL
		        , SEC_XML
		        , VER_NBR
		        , BLNKT_APPR_GRP_ID
		        , RPT_GRP_ID
		        , GRP_ID
		        , HELP_DEF_URL
		        , OBJ_ID
		        , DOC_SEARCH_HELP_URL
		        , DOC_HDR_ID
		)
		SELECT DOC_TYP_ID
		        , PARNT_ID
		        , DOC_TYP_NM
		        , DOC_TYP_VER_NBR
		        , ACTV_IND
		        , CUR_IND
		        , LBL
		        , PREV_DOC_TYP_VER_NBR
		        , DOC_TYP_DESC
		        , DOC_HDLR_URL
		        , POST_PRCSR
		        , JNDI_URL
		        , BLNKT_APPR_PLCY
		        , ADV_DOC_SRCH_URL
		        , CSTM_ACTN_LIST_ATTRIB_CLS_NM
		        , CSTM_ACTN_EMAIL_ATTRIB_CLS_NM
		        , CSTM_DOC_NTE_ATTRIB_CLS_NM
		        , RTE_VER_NBR
		        , NOTIFY_ADDR
		        , APPL_ID
		        , EMAIL_XSL
		        , SEC_XML
		        , VER_NBR
		        , BLNKT_APPR_GRP_ID
		        , RPT_GRP_ID
		        , GRP_ID
		        , HELP_DEF_URL
		        , OBJ_ID
		        , DOC_SEARCH_HELP_URL
		        , DOC_HDR_ID
		FROM OLD_KREW_DOC_TYP_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		
		DROP TABLE OLD_KREW_DOC_TYP_T CASCADE CONSTRAINTS PURGE
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		
		ALTER TABLE KREW_DOC_TYP_T
		    ADD CONSTRAINT KREW_DOC_TYP_TP1
		PRIMARY KEY (DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX KREW_DOC_TYP_TI2 
		  ON KREW_DOC_TYP_T 
		  (PARNT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_TI3 
		  ON KREW_DOC_TYP_T 
		  (DOC_TYP_ID, PARNT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_TI4 
		  ON KREW_DOC_TYP_T 
		  (PREV_DOC_TYP_VER_NBR)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_TI5 
		  ON KREW_DOC_TYP_T 
		  (CUR_IND)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_TI6 
		  ON KREW_DOC_TYP_T 
		  (DOC_TYP_NM)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_T RENAME TO OLD_KREW_DOC_HDR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KREW_DOC_HDR_T
		(
		      DOC_HDR_ID VARCHAR2(40)
		        , DOC_TYP_ID VARCHAR2(40)
		        , DOC_HDR_STAT_CD CHAR(1) NOT NULL
		        , RTE_LVL NUMBER(8) NOT NULL
		        , STAT_MDFN_DT DATE NOT NULL
		        , CRTE_DT DATE NOT NULL
		        , APRV_DT DATE
		        , FNL_DT DATE
		        , RTE_STAT_MDFN_DT DATE
		        , RTE_LVL_MDFN_DT DATE
		        , TTL VARCHAR2(255)
		        , APP_DOC_ID VARCHAR2(255)
		        , DOC_VER_NBR NUMBER(8) NOT NULL
		        , INITR_PRNCPL_ID VARCHAR2(40) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		        , RTE_PRNCPL_ID VARCHAR2(40)
		        , DTYPE VARCHAR2(50)
		        , OBJ_ID VARCHAR2(36) NOT NULL
		        , APP_DOC_STAT VARCHAR2(64)
		        , APP_DOC_STAT_MDFN_DT DATE
		    , CONSTRAINT KREW_DOC_HDR_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		INSERT INTO KREW_DOC_HDR_T(DOC_HDR_ID, DOC_TYP_ID, DOC_HDR_STAT_CD, RTE_LVL, STAT_MDFN_DT, CRTE_DT, APRV_DT, FNL_DT, RTE_STAT_MDFN_DT, RTE_LVL_MDFN_DT, TTL, APP_DOC_ID, DOC_VER_NBR, INITR_PRNCPL_ID, VER_NBR, RTE_PRNCPL_ID, DTYPE, OBJ_ID, APP_DOC_STAT, APP_DOC_STAT_MDFN_DT)
		SELECT DOC_HDR_ID, DOC_TYP_ID, DOC_HDR_STAT_CD, RTE_LVL, STAT_MDFN_DT, CRTE_DT, APRV_DT, FNL_DT, RTE_STAT_MDFN_DT, RTE_LVL_MDFN_DT, TTL, APP_DOC_ID, DOC_VER_NBR, INITR_PRNCPL_ID, VER_NBR, RTE_PRNCPL_ID, DTYPE, OBJ_ID, APP_DOC_STAT, APP_DOC_STAT_MDFN_DT
		FROM OLD_KREW_DOC_HDR_T
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		
		DROP TABLE OLD_KREW_DOC_HDR_T CASCADE CONSTRAINTS PURGE
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KREW_DOC_HDR_T
		    ADD CONSTRAINT KREW_DOC_HDR_TP1
		PRIMARY KEY (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX KREW_DOC_HDR_T10 
		  ON KREW_DOC_HDR_T 
		  (APP_DOC_STAT)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_T12 
		  ON KREW_DOC_HDR_T 
		  (APP_DOC_STAT_MDFN_DT)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI1 
		  ON KREW_DOC_HDR_T 
		  (DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI2 
		  ON KREW_DOC_HDR_T 
		  (INITR_PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI3 
		  ON KREW_DOC_HDR_T 
		  (DOC_HDR_STAT_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI4 
		  ON KREW_DOC_HDR_T 
		  (TTL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI5 
		  ON KREW_DOC_HDR_T 
		  (CRTE_DT)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI6 
		  ON KREW_DOC_HDR_T 
		  (RTE_STAT_MDFN_DT)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI7 
		  ON KREW_DOC_HDR_T 
		  (APRV_DT)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI8 
		  ON KREW_DOC_HDR_T 
		  (FNL_DT)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		  
		CREATE INDEX KREW_DOC_HDR_TI9 
		  ON KREW_DOC_HDR_T 
		  (APP_DOC_ID)
		]]></sql>

		
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_PLCY_RELN_T RENAME TO OLD_KREW_DOC_TYP_PLCY_RELN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KREW_DOC_TYP_PLCY_RELN_T
		(
		      DOC_TYP_ID VARCHAR2(40)
		        , DOC_PLCY_NM VARCHAR2(255)
		        , PLCY_NM NUMBER(1) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		        , PLCY_VAL VARCHAR2(64)
		
		    , CONSTRAINT KREW_DOC_TYP_PLCY_RELN_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		INSERT INTO KREW_DOC_TYP_PLCY_RELN_T(
		DOC_TYP_ID
		        , DOC_PLCY_NM
		        , PLCY_NM
		        , VER_NBR
		        , OBJ_ID
		        , PLCY_VAL
		)
		SELECT DOC_TYP_ID
		        , DOC_PLCY_NM
		        , PLCY_NM
		        , VER_NBR
		        , OBJ_ID
		        , PLCY_VAL
		FROM OLD_KREW_DOC_TYP_PLCY_RELN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		
		DROP TABLE OLD_KREW_DOC_TYP_PLCY_RELN_T CASCADE CONSTRAINTS PURGE
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KREW_DOC_TYP_PLCY_RELN_T
		    ADD CONSTRAINT KREW_DOC_TYP_PLCY_RELN_TP1
		PRIMARY KEY (DOC_TYP_ID,DOC_PLCY_NM)
		]]></sql>


		
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_APP_DOC_STAT_T RENAME TO O_KREW_DOC_TYP_APP_DOC_STAT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KREW_DOC_TYP_APP_DOC_STAT_T
		(
		      DOC_TYP_ID VARCHAR2(40)
		        , DOC_STAT_NM VARCHAR2(64)
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_DOC_TYP_APP_DOC_STAT_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		INSERT INTO KREW_DOC_TYP_APP_DOC_STAT_T(
		DOC_TYP_ID
		        , DOC_STAT_NM
		        , VER_NBR
		        , OBJ_ID
		)
		SELECT DOC_TYP_ID
		        , DOC_STAT_NM
		        , VER_NBR
		        , OBJ_ID
		FROM O_KREW_DOC_TYP_APP_DOC_STAT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		
		DROP TABLE O_KREW_DOC_TYP_APP_DOC_STAT_T CASCADE CONSTRAINTS PURGE
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KREW_DOC_TYP_APP_DOC_STAT_T
		    ADD CONSTRAINT KREW_DOC_TYP_APP_DOC_STAT_TP1
		PRIMARY KEY (DOC_TYP_ID,DOC_STAT_NM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX KREW_DOC_TYP_APP_DOC_STAT_T1 
		  ON KREW_DOC_TYP_APP_DOC_STAT_T 
		  (DOC_TYP_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		-----------------------------------------------------------------------------
		-- KREW_DOC_TYP_ATTR_T
		-----------------------------------------------------------------------------
		
		ALTER TABLE KREW_DOC_TYP_ATTR_T RENAME TO OLD_KREW_DOC_TYP_ATTR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_TYP_ATTR_T
		(
		      DOC_TYP_ATTRIB_ID NUMBER(19)
		        , DOC_TYP_ID VARCHAR2(40) NOT NULL
		        , RULE_ATTR_ID NUMBER(19) NOT NULL
		        , ORD_INDX NUMBER(4) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		INSERT INTO KREW_DOC_TYP_ATTR_T(
		DOC_TYP_ATTRIB_ID
		        , DOC_TYP_ID
		        , RULE_ATTR_ID
		        , ORD_INDX
		)
		SELECT DOC_TYP_ATTRIB_ID
		        , DOC_TYP_ID
		        , RULE_ATTR_ID
		        , ORD_INDX
		FROM OLD_KREW_DOC_TYP_ATTR_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		
		DROP TABLE OLD_KREW_DOC_TYP_ATTR_T CASCADE CONSTRAINTS PURGE
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KREW_DOC_TYP_ATTR_T
		    ADD CONSTRAINT KREW_DOC_TYP_ATTR_TP1
		PRIMARY KEY (DOC_TYP_ATTRIB_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX KREW_DOC_TYP_ATTR_TI1 
		  ON KREW_DOC_TYP_ATTR_T 
		  (DOC_TYP_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		-----------------------------------------------------------------------------
		-- KREW_RTE_NODE_T
		-----------------------------------------------------------------------------
		
		ALTER TABLE KREW_RTE_NODE_T RENAME TO OLD_KREW_RTE_NODE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KREW_RTE_NODE_T
		(
		      RTE_NODE_ID NUMBER(19)
		        , DOC_TYP_ID VARCHAR2(40)
		        , NM VARCHAR2(255) NOT NULL
		        , TYP VARCHAR2(255) NOT NULL
		        , RTE_MTHD_NM VARCHAR2(255)
		        , RTE_MTHD_CD VARCHAR2(2)
		        , FNL_APRVR_IND NUMBER(1)
		        , MNDTRY_RTE_IND NUMBER(1)
		        , ACTVN_TYP VARCHAR2(250)
		        , BRCH_PROTO_ID NUMBER(19)
		        , VER_NBR NUMBER(8) default 0
		        , CONTENT_FRAGMENT VARCHAR2(4000)
		        , GRP_ID VARCHAR2(40)
		        , NEXT_DOC_STAT VARCHAR2(64)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		INSERT INTO KREW_RTE_NODE_T(
		RTE_NODE_ID
		        , DOC_TYP_ID
		        , NM
		        , TYP
		        , RTE_MTHD_NM
		        , RTE_MTHD_CD
		        , FNL_APRVR_IND
		        , MNDTRY_RTE_IND
		        , ACTVN_TYP
		        , BRCH_PROTO_ID
		        , VER_NBR
		        , CONTENT_FRAGMENT
		        , GRP_ID
		        , NEXT_DOC_STAT
		)
		SELECT RTE_NODE_ID
		        , DOC_TYP_ID
		        , NM
		        , TYP
		        , RTE_MTHD_NM
		        , RTE_MTHD_CD
		        , FNL_APRVR_IND
		        , MNDTRY_RTE_IND
		        , ACTVN_TYP
		        , BRCH_PROTO_ID
		        , VER_NBR
		        , CONTENT_FRAGMENT
		        , GRP_ID
		        , NEXT_DOC_STAT
		FROM OLD_KREW_RTE_NODE_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		
		DROP TABLE OLD_KREW_RTE_NODE_T CASCADE CONSTRAINTS PURGE
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KREW_RTE_NODE_T
		    ADD CONSTRAINT KREW_RTE_NODE_TP1
		PRIMARY KEY (RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX KREW_RTE_NODE_TI1 
		  ON KREW_RTE_NODE_T 
		  (NM, DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_TI2 
		  ON KREW_RTE_NODE_T 
		  (DOC_TYP_ID, FNL_APRVR_IND)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_TI3 
		  ON KREW_RTE_NODE_T 
		  (BRCH_PROTO_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_TI4 
		  ON KREW_RTE_NODE_T 
		  (DOC_TYP_ID)
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		  
		-----------------------------------------------------------------------------
		-- KREW_DOC_TYP_PROC_T
		-----------------------------------------------------------------------------
		
		ALTER TABLE KREW_DOC_TYP_PROC_T RENAME TO OLD_KREW_DOC_TYP_PROC_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KREW_DOC_TYP_PROC_T
		(
		      DOC_TYP_PROC_ID NUMBER(19)
		        , DOC_TYP_ID VARCHAR2(40) NOT NULL
		        , INIT_RTE_NODE_ID VARCHAR2(40)
		        , NM VARCHAR2(255) NOT NULL
		        , INIT_IND NUMBER(1) default 0 NOT NULL
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		INSERT INTO KREW_DOC_TYP_PROC_T(
		DOC_TYP_PROC_ID
		        , DOC_TYP_ID
		        , INIT_RTE_NODE_ID
		        , NM
		        , INIT_IND
		        , VER_NBR
		)
		SELECT DOC_TYP_PROC_ID
		        , DOC_TYP_ID
		        , INIT_RTE_NODE_ID
		        , NM
		        , INIT_IND
		        , VER_NBR
		FROM OLD_KREW_DOC_TYP_PROC_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		
		DROP TABLE OLD_KREW_DOC_TYP_PROC_T CASCADE CONSTRAINTS PURGE
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KREW_DOC_TYP_PROC_T
		    ADD CONSTRAINT KREW_DOC_TYP_PROC_TP1
		PRIMARY KEY (DOC_TYP_PROC_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX KREW_DOC_TYP_PROC_TI1 
		  ON KREW_DOC_TYP_PROC_T 
		  (DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_PROC_TI2 
		  ON KREW_DOC_TYP_PROC_T 
		  (INIT_RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_PROC_TI3 
		  ON KREW_DOC_TYP_PROC_T 
		  (NM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- 
		-- 2011-06-21.sql
		-- 
		alter table KRIM_PERM_TMPL_T modify NMSPC_CD varchar2(40) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PERM_TMPL_T modify NM varchar2(100) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PERM_TMPL_T add constraint KRIM_PERM_TMPL_TC1 unique (NM, NMSPC_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table KRIM_RSP_TMPL_T modify NMSPC_CD varchar2(40) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_RSP_TMPL_T modify NM varchar2(100) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_RSP_TMPL_T add constraint KRIM_RSP_TMPL_TC1 unique (NM, NMSPC_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-06-23.sql
		-- 
		
		
		CREATE SEQUENCE KRMS_CTGRY_S INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KRMS_CTGRY_T
		(
		    CTGRY_ID VARCHAR2(40) NOT NULL
		      , NM VARCHAR2(255) NOT NULL
		      , NMSPC_CD VARCHAR2(40) NOT NULL
		      , VER_NBR NUMBER(8) DEFAULT 0
		    , PRIMARY KEY (CTGRY_ID)
		    , CONSTRAINT KRMS_CTGRY_TC0 UNIQUE (NM, NMSPC_CD)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KRMS_TERM_SPEC_CTGRY_T
		(
		  TERM_SPEC_ID VARCHAR2(40) NOT NULL
		      , CTGRY_ID VARCHAR2(40) NOT NULL
		  , PRIMARY KEY (TERM_SPEC_ID, CTGRY_ID)
		  , CONSTRAINT KRMS_TERM_SPEC_CTGRY_FK1 FOREIGN KEY (TERM_SPEC_ID) REFERENCES KRMS_TERM_SPEC_T (TERM_SPEC_ID)
		  , CONSTRAINT KRMS_TERM_SPEC_CTGRY_FK2 FOREIGN KEY (CTGRY_ID) REFERENCES KRMS_CTGRY_T (CTGRY_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE TABLE KRMS_FUNC_CTGRY_T
		(
		  FUNC_ID VARCHAR2(40) NOT NULL
		  , CTGRY_ID VARCHAR2(40) NOT NULL
		  , PRIMARY KEY (FUNC_ID, CTGRY_ID)
		  , CONSTRAINT KRMS_FUNC_CTGRY_FK1 FOREIGN KEY (FUNC_ID) REFERENCES KRMS_FUNC_T (FUNC_ID)
		  , CONSTRAINT KRMS_FUNC_CTGRY_FK2 FOREIGN KEY (CTGRY_ID) REFERENCES KRMS_CTGRY_T (CTGRY_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-06-29.sql
		-- 
		
		
		update KRIM_PERM_T t set NM='Use Document Operation Screen' where PERM_ID = '140'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use Java Security Management Screen' where PERM_ID = '141'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use Message Queue Screen' where PERM_ID = '142'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use Service Registry Screen' where PERM_ID = '143'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use Thread Pool Screen' where PERM_ID = '144'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use Quartz Queue Screen' where PERM_ID = '145'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Ad Hoc Review RICE Document' where PERM_ID = '146'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Administer Routing RICE Document' where PERM_ID = '147'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Blanket Approve RICE Document'	where PERM_ID = '148'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Initiate RICE Document' where PERM_ID = '149'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Assign Role' where PERM_ID = '150'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Grant Permission' where PERM_ID = '151'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Grant Responsibility' where PERM_ID = '152'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Populate Group' where PERM_ID = '155'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Copy RICE Document' where PERM_ID = '156'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into RICE Records' where PERM_ID = '161'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up RICE Records' where PERM_ID = '162'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Maintain System Parameter' where PERM_ID = '163'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Modify Batch Job' where PERM_ID = '164'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Open RICE Document' where PERM_ID = '165'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use all RICE Screen' where PERM_ID = '166'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Cancel Document' where PERM_ID = '167'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Route Document' where PERM_ID = '168'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Take Requested Apprive Action' where PERM_ID = '170'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Take Requested FYI Action' where PERM_ID = '172'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Take Requested Acknowledge Action' where PERM_ID = '173'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Log In Kuali Portal' where PERM_ID = '174'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Edit Kuali ENROUTE Document Node Name PreRoute' where PERM_ID = '180'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Edit Kuali ENROUTE Document Route Status Code R' where PERM_ID = '181'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Full Unmask Tax Identification Number Payee ACH Document'	where PERM_ID = '183'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Add Note  Attachment Kuali Document' where PERM_ID = '259'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='View Note  Attachment Kuali Document' where PERM_ID = '261'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Delete Note  Attachment Kuali Document' where PERM_ID = '264'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use Screen XML Ingester Screen' where PERM_ID = '265'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Administer Pessimistic Locking' where PERM_ID = '289'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Save RICE Document' where PERM_ID = '290'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='View Other Action List' where PERM_ID = '298'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Unrestricted Document Search' where PERM_ID = '299'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Full Unmask Tax Identification Number Person Document'	where PERM_ID = '306'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Modify Entity' where PERM_ID = '307'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Send FYI Request Kuali Document' where PERM_ID = '332'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Send Acknowledge Request Kuali Document' where PERM_ID = '333'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Send Approve Request Kuali Document' where PERM_ID = '334'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Override Entity Privacy Preferences' where PERM_ID = '378'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up Rule Template'	where PERM_ID = '701'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up Stylesheet' where PERM_ID = '702'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up eDocLite' where PERM_ID = '703'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up Rule Attribute' where PERM_ID = '707'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up Parameter Component' where PERM_ID = '719'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up Namespace'	where PERM_ID = '720'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Look Up Parameter Type' where PERM_ID = '721'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into Rule Template' where PERM_ID = '801'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into Stylesheet' where PERM_ID = '802'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into eDocLite' where PERM_ID = '803'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into Rule Attribute' where PERM_ID = '807'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into Pessimistic' where PERM_ID = '814'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into Parameter Component' where PERM_ID = '819'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into Namespace' where PERM_ID = '820'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Inquire Into Parameter Type' where PERM_ID = '821'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Populate Group KUALI Namespace' where PERM_ID = '833'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Assign Role KUALI Namespace' where PERM_ID = '834'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Grant Permission KUALI Namespace' where PERM_ID = '835'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Grant Responsibility KUALI Namespace' where PERM_ID = '836'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Use Configuration Viewer Screen' where PERM_ID = '840'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRIM_PERM_T t set NM='Add Message to Route Log'	where PERM_ID = '841'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PERM_T modify NMSPC_CD varchar2(40) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PERM_T modify NM varchar2(100) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PERM_T add constraint KRIM_PERM_T_TC1 unique (NM, NMSPC_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_RSP_T modify NMSPC_CD varchar2(40) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_RSP_T modify NM varchar2(100) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_RSP_T add constraint KRIM_RSP_T_TC1 unique (NM, NMSPC_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_DOC_NTE_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- 
		-- 2011-07-07-m6.sql
		-- 
		--
		-- NOTE: when assembling this script for release, please merge any table rebuilds with those from 2011-04-28.sql
		--
		-----------------------------------------------------------------------------
		-- KREW_DOC_NTE_T
		-----------------------------------------------------------------------------
		ALTER TABLE KREW_DOC_NTE_T RENAME TO TEMP_KREW_DOC_NTE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_NTE_T ( 
		    DOC_NTE_ID    	VARCHAR2(40),
			DOC_HDR_ID    	VARCHAR2(40) NOT NULL,
		    AUTH_PRNCPL_ID	VARCHAR2(40) NOT NULL,
		    CRT_DT        	DATE NOT NULL,
		    TXT           	VARCHAR2(4000) NULL,
		    VER_NBR       	NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_NTE_T ADD CONSTRAINT KREW_DOC_NTE_TP1 PRIMARY KEY (DOC_NTE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_NTE_TI1 ON KREW_DOC_NTE_T (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_NTE_T
		(DOC_NTE_ID, DOC_HDR_ID, AUTH_PRNCPL_ID, CRT_DT, TXT, VER_NBR)
		SELECT CAST(DOC_NTE_ID as VARCHAR2(40)), DOC_HDR_ID, AUTH_PRNCPL_ID, CRT_DT, TXT, VER_NBR
		FROM TEMP_KREW_DOC_NTE_T
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_NTE_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_NTE_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ATT_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_ATT_T
		-----------------------------------------------------------------------------
		ALTER TABLE KREW_ATT_T RENAME TO TEMP_KREW_ATT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ATT_T (
			ATTACHMENT_ID	VARCHAR2(40),
			NTE_ID			VARCHAR2(40) NULL,
			FILE_NM			VARCHAR2(255) NOT NULL,
			FILE_LOC		VARCHAR2(255) NOT NULL,
			MIME_TYP		VARCHAR2(255) NOT NULL,
			VER_NBR			NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ATT_T ADD CONSTRAINT KREW_ATT_TP1 PRIMARY KEY (ATTACHMENT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ATT_TI1 ON KREW_ATT_T(NTE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_ATT_T
		(ATTACHMENT_ID, NTE_ID, FILE_NM, FILE_LOC, MIME_TYP, VER_NBR)
		SELECT CAST(ATTACHMENT_ID as VARCHAR2(40)), CAST(NTE_ID as VARCHAR2(40)), FILE_NM, FILE_LOC, MIME_TYP, VER_NBR
		FROM TEMP_KREW_ATT_T
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ATT_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ACTN_ITM_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_ITM_T RENAME TO TEMP_KREW_ACTN_ITM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_ITM_T
		(
		      ACTN_ITM_ID VARCHAR2(40)
		        , PRNCPL_ID VARCHAR2(40) NOT NULL
		        , ASND_DT DATE NOT NULL
		        , RQST_CD CHAR(1) NOT NULL
		        , ACTN_RQST_ID VARCHAR2(40) NOT NULL
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , ROLE_NM VARCHAR2(2000)
		        , DLGN_PRNCPL_ID VARCHAR2(40)
		        , DOC_HDR_TTL VARCHAR2(255)
		        , DOC_TYP_LBL VARCHAR2(128) NOT NULL
		        , DOC_HDLR_URL VARCHAR2(255) NOT NULL
		        , DOC_TYP_NM VARCHAR2(64) NOT NULL
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , DLGN_TYP VARCHAR2(1)
		        , VER_NBR NUMBER(8) default 0
		        , DTYPE VARCHAR2(50)
		        , GRP_ID VARCHAR2(40)
		        , DLGN_GRP_ID VARCHAR2(40)
		        , RQST_LBL VARCHAR2(255)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_ITM_T
		    ADD CONSTRAINT KREW_ACTN_ITM_TP1
		PRIMARY KEY (ACTN_ITM_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_T1
		  ON KREW_ACTN_ITM_T 
		  (PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI2
		  ON KREW_ACTN_ITM_T
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI3
		  ON KREW_ACTN_ITM_T
		  (ACTN_RQST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI5
		  ON KREW_ACTN_ITM_T
		  (PRNCPL_ID, DLGN_TYP, DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_ACTN_ITM_T
		(ACTN_ITM_ID, PRNCPL_ID, ASND_DT, RQST_CD, ACTN_RQST_ID, DOC_HDR_ID, ROLE_NM, DLGN_PRNCPL_ID, 
		 DOC_HDR_TTL, DOC_TYP_LBL, DOC_HDLR_URL, DOC_TYP_NM, RSP_ID, DLGN_TYP, VER_NBR, DTYPE, 
		 GRP_ID, DLGN_GRP_ID, RQST_LBL)
		SELECT CAST(ACTN_ITM_ID as VARCHAR2(40)), PRNCPL_ID, ASND_DT, RQST_CD, CAST(ACTN_RQST_ID as VARCHAR2(40)), DOC_HDR_ID, 
		 ROLE_NM, DLGN_PRNCPL_ID, 
		 DOC_HDR_TTL, DOC_TYP_LBL, DOC_HDLR_URL, DOC_TYP_NM, CAST(RSP_ID as VARCHAR2(40)), DLGN_TYP, VER_NBR, DTYPE, 
		 GRP_ID, DLGN_GRP_ID, RQST_LBL
		FROM TEMP_KREW_ACTN_ITM_T
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ACTN_ITM_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ACTN_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ACTN_TKN_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_TKN_T RENAME TO TEMP_KREW_ACTN_TKN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_TKN_T
		(
		      ACTN_TKN_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , PRNCPL_ID VARCHAR2(40) NOT NULL
		        , DLGTR_PRNCPL_ID VARCHAR2(40)
		        , ACTN_CD CHAR(1) NOT NULL
		        , ACTN_DT DATE NOT NULL
		        , DOC_VER_NBR NUMBER(8) NOT NULL
		        , ANNOTN VARCHAR2(2000)
		        , CUR_IND NUMBER(1) default 1
		        , VER_NBR NUMBER(8) default 0
		        , DLGTR_GRP_ID VARCHAR2(40)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_TKN_T
		    ADD CONSTRAINT KREW_ACTN_TKN_TP1
		PRIMARY KEY (ACTN_TKN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI1 
		  ON KREW_ACTN_TKN_T 
		  (DOC_HDR_ID, PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI2 
		  ON KREW_ACTN_TKN_T 
		  (DOC_HDR_ID, PRNCPL_ID, ACTN_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI3 
		  ON KREW_ACTN_TKN_T 
		  (PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI4 
		  ON KREW_ACTN_TKN_T 
		  (DLGTR_PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI5 
		  ON KREW_ACTN_TKN_T 
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_ACTN_TKN_T
		(ACTN_TKN_ID, DOC_HDR_ID, PRNCPL_ID, DLGTR_PRNCPL_ID, ACTN_CD, ACTN_DT, DOC_VER_NBR, ANNOTN, 
		CUR_IND, VER_NBR, DLGTR_GRP_ID)
		SELECT CAST(ACTN_TKN_ID as VARCHAR2(40)), DOC_HDR_ID, PRNCPL_ID, DLGTR_PRNCPL_ID, ACTN_CD, ACTN_DT, DOC_VER_NBR, ANNOTN, 
		CUR_IND, VER_NBR, DLGTR_GRP_ID
		FROM TEMP_KREW_ACTN_TKN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ACTN_TKN_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ACTN_TKN_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ACTN_RQST_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_RQST_T RENAME TO TEMP_KREW_ACTN_RQST_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_RQST_T
		(
		      ACTN_RQST_ID VARCHAR2(40)
		        , PARNT_ID VARCHAR2(40)
		        , ACTN_RQST_CD CHAR(1) NOT NULL
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , RULE_ID VARCHAR2(40)
		        , STAT_CD CHAR(1) NOT NULL
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , PRNCPL_ID VARCHAR2(40)
		        , ROLE_NM VARCHAR2(2000)
		        , QUAL_ROLE_NM VARCHAR2(2000)
		        , QUAL_ROLE_NM_LBL_TXT VARCHAR2(2000)
		        , RECIP_TYP_CD CHAR(1)
		        , PRIO_NBR NUMBER(8) NOT NULL
		        , RTE_TYP_NM VARCHAR2(255)
		        , RTE_LVL_NBR NUMBER(8) NOT NULL
		        , RTE_NODE_INSTN_ID VARCHAR2(40)
		        , ACTN_TKN_ID VARCHAR2(40)
		        , DOC_VER_NBR NUMBER(8) NOT NULL
		        , CRTE_DT DATE NOT NULL
		        , RSP_DESC_TXT VARCHAR2(200)
		        , FRC_ACTN NUMBER(1) default 0
		        , ACTN_RQST_ANNOTN_TXT VARCHAR2(2000)
		        , DLGN_TYP CHAR(1)
		        , APPR_PLCY CHAR(1)
		        , CUR_IND NUMBER(1) default 1
		        , VER_NBR NUMBER(8) default 0
		        , GRP_ID VARCHAR2(40)
		        , RQST_LBL VARCHAR2(255)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_RQST_T
		    ADD CONSTRAINT KREW_ACTN_RQST_TP1
		PRIMARY KEY (ACTN_RQST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T11 
		  ON KREW_ACTN_RQST_T 
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T12 
		  ON KREW_ACTN_RQST_T 
		  (PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T13 
		  ON KREW_ACTN_RQST_T 
		  (ACTN_TKN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T14 
		  ON KREW_ACTN_RQST_T 
		  (PARNT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T15 
		  ON KREW_ACTN_RQST_T 
		  (RSP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T16 
		  ON KREW_ACTN_RQST_T 
		  (STAT_CD, RSP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T17 
		  ON KREW_ACTN_RQST_T 
		  (RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T19 
		  ON KREW_ACTN_RQST_T 
		  (STAT_CD, DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_ACTN_RQST_T
		(ACTN_RQST_ID, PARNT_ID, ACTN_RQST_CD, DOC_HDR_ID, RULE_ID, STAT_CD, RSP_ID, PRNCPL_ID, 
		ROLE_NM, QUAL_ROLE_NM, QUAL_ROLE_NM_LBL_TXT, RECIP_TYP_CD, PRIO_NBR, RTE_TYP_NM, 
		RTE_LVL_NBR, RTE_NODE_INSTN_ID, ACTN_TKN_ID, DOC_VER_NBR, CRTE_DT, RSP_DESC_TXT, 
		FRC_ACTN, ACTN_RQST_ANNOTN_TXT, DLGN_TYP, APPR_PLCY, CUR_IND, VER_NBR, GRP_ID, RQST_LBL)
		SELECT CAST(ACTN_RQST_ID as VARCHAR2(40)), CAST(PARNT_ID as VARCHAR2(40)), 
		ACTN_RQST_CD, DOC_HDR_ID, CAST(RULE_ID as VARCHAR2(40)), STAT_CD, CAST(RSP_ID as VARCHAR2(40)), PRNCPL_ID, 
		ROLE_NM, QUAL_ROLE_NM, QUAL_ROLE_NM_LBL_TXT, RECIP_TYP_CD, PRIO_NBR, RTE_TYP_NM, 
		RTE_LVL_NBR, CAST(RTE_NODE_INSTN_ID as VARCHAR2(40)), CAST(ACTN_TKN_ID as VARCHAR2(40)), DOC_VER_NBR, 
		CRTE_DT, RSP_DESC_TXT, 
		FRC_ACTN, ACTN_RQST_ANNOTN_TXT, DLGN_TYP, APPR_PLCY, CUR_IND, VER_NBR, GRP_ID, RQST_LBL
		FROM TEMP_KREW_ACTN_RQST_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ACTN_RQST_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ACTN_RQST_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_TMPL_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_T RENAME TO TEMP_KREW_RULE_TMPL_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_TMPL_T
		(
		      RULE_TMPL_ID VARCHAR2(40)
		        , NM VARCHAR2(250) NOT NULL
		        , RULE_TMPL_DESC VARCHAR2(2000)
		        , DLGN_RULE_TMPL_ID VARCHAR2(40)
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    
		    , CONSTRAINT KREW_RULE_TMPL_TC0 UNIQUE (OBJ_ID)
		    , CONSTRAINT KREW_RULE_TMPL_TI1 UNIQUE (NM)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_T
		    ADD CONSTRAINT KREW_RULE_TMPL_TP1
		PRIMARY KEY (RULE_TMPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_TMPL_T
		(RULE_TMPL_ID, NM, RULE_TMPL_DESC, DLGN_RULE_TMPL_ID, VER_NBR, OBJ_ID)
		SELECT CAST(RULE_TMPL_ID as VARCHAR2(40)), NM, RULE_TMPL_DESC, CAST(DLGN_RULE_TMPL_ID as VARCHAR2(40)), 
		VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_TMPL_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_TMPL_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_TMPL_ATTR_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_ATTR_T RENAME TO TEMP_KREW_RULE_TMPL_ATTR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_TMPL_ATTR_T
		(
		      RULE_TMPL_ATTR_ID VARCHAR2(40)
		        , RULE_TMPL_ID VARCHAR2(40) NOT NULL
		        , RULE_ATTR_ID VARCHAR2(40) NOT NULL
		        , REQ_IND NUMBER(1) NOT NULL
		        , ACTV_IND NUMBER(1) NOT NULL
		        , DSPL_ORD NUMBER(5) NOT NULL
		        , DFLT_VAL VARCHAR2(2000)
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_RULE_TMPL_ATTR_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_ATTR_T
		    ADD CONSTRAINT KREW_RULE_TMPL_ATTR_TP1
		PRIMARY KEY (RULE_TMPL_ATTR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_TMPL_ATTR_TI1 
		  ON KREW_RULE_TMPL_ATTR_T 
		  (RULE_TMPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_TMPL_ATTR_TI2 
		  ON KREW_RULE_TMPL_ATTR_T 
		  (RULE_ATTR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_TMPL_ATTR_T
		(RULE_TMPL_ATTR_ID, RULE_TMPL_ID, RULE_ATTR_ID, REQ_IND, ACTV_IND, DSPL_ORD, DFLT_VAL, VER_NBR, OBJ_ID)
		SELECT 
		CAST(RULE_TMPL_ATTR_ID as VARCHAR2(40)), CAST(RULE_TMPL_ID as VARCHAR2(40)), 
		CAST(RULE_ATTR_ID as VARCHAR2(40)), REQ_IND, ACTV_IND, DSPL_ORD, DFLT_VAL, VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_TMPL_ATTR_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_TMPL_ATTR_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_TMPL_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_T RENAME TO TEMP_KREW_RULE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_T
		(
		      RULE_ID VARCHAR2(40)
		        , NM VARCHAR2(256)
		        , RULE_TMPL_ID VARCHAR2(40)
		        , RULE_EXPR_ID VARCHAR2(40)
		        , ACTV_IND NUMBER(1) NOT NULL
		        , RULE_BASE_VAL_DESC VARCHAR2(2000)
		        , FRC_ACTN NUMBER(1) NOT NULL
		        , DOC_TYP_NM VARCHAR2(64) NOT NULL
		        , DOC_HDR_ID VARCHAR2(40)
		        , TMPL_RULE_IND NUMBER(1)
		        , FRM_DT DATE
		        , TO_DT DATE
		        , DACTVN_DT DATE
		        , CUR_IND NUMBER(1) default 0
		        , RULE_VER_NBR NUMBER(8) default 0
		        , DLGN_IND NUMBER(1)
		        , PREV_RULE_VER_NBR VARCHAR2(40)
		        , ACTVN_DT DATE
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_RULE_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_T
		    ADD CONSTRAINT KREW_RULE_TP1
		PRIMARY KEY (RULE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_T
		(RULE_ID, NM, RULE_TMPL_ID, RULE_EXPR_ID, ACTV_IND, RULE_BASE_VAL_DESC, FRC_ACTN, 
		DOC_TYP_NM, DOC_HDR_ID, TMPL_RULE_IND, FRM_DT, TO_DT, DACTVN_DT, CUR_IND, RULE_VER_NBR, 
		DLGN_IND, PREV_RULE_VER_NBR, ACTVN_DT, VER_NBR, OBJ_ID)
		SELECT 
		CAST(RULE_ID as VARCHAR2(40)), NM, CAST(RULE_TMPL_ID as VARCHAR2(40)), CAST(RULE_EXPR_ID as VARCHAR2(40)), 
		ACTV_IND, RULE_BASE_VAL_DESC, FRC_ACTN, 
		DOC_TYP_NM, DOC_HDR_ID, TMPL_RULE_IND, FRM_DT, TO_DT, DACTVN_DT, CUR_IND, RULE_VER_NBR, 
		DLGN_IND, CAST(PREV_RULE_VER_NBR as VARCHAR2(40)), ACTVN_DT, VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_DLGN_RSP_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DLGN_RSP_T RENAME TO TEMP_KREW_DLGN_RSP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DLGN_RSP_T
		(
		      DLGN_RULE_ID VARCHAR2(40)
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , DLGN_RULE_BASE_VAL_ID VARCHAR2(40) NOT NULL
		        , DLGN_TYP VARCHAR2(20) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_DLGN_RSP_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DLGN_RSP_T
		    ADD CONSTRAINT KREW_DLGN_RSP_TP1
		PRIMARY KEY (DLGN_RULE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DLGN_RSP_T
		(DLGN_RULE_ID, RSP_ID, DLGN_RULE_BASE_VAL_ID, DLGN_TYP, VER_NBR, OBJ_ID)
		SELECT 
		CAST(DLGN_RULE_ID as VARCHAR2(40)), CAST(RSP_ID as VARCHAR2(40)), CAST(DLGN_RULE_BASE_VAL_ID as VARCHAR2(40)), 
		DLGN_TYP, VER_NBR, OBJ_ID
		FROM TEMP_KREW_DLGN_RSP_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DLGN_RSP_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DLGN_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_RSP_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_RSP_T RENAME TO TEMP_KREW_RULE_RSP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_RSP_T
		(
		      RULE_RSP_ID VARCHAR2(40)
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , RULE_ID VARCHAR2(40) NOT NULL
		        , PRIO NUMBER(5)
		        , ACTN_RQST_CD VARCHAR2(2000)
		        , NM VARCHAR2(200)
		        , TYP VARCHAR2(1)
		        , APPR_PLCY CHAR(1)
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_RULE_RSP_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_RSP_T
		    ADD CONSTRAINT KREW_RULE_RSP_TP1
		PRIMARY KEY (RULE_RSP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_RSP_TI1 
		  ON KREW_RULE_RSP_T 
		  (RULE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_RSP_T
		(RULE_RSP_ID, RSP_ID, RULE_ID, PRIO, ACTN_RQST_CD, NM, TYP, APPR_PLCY, VER_NBR, OBJ_ID)
		SELECT CAST(RULE_RSP_ID as VARCHAR2(40)), CAST(RSP_ID as VARCHAR2(40)), CAST(RULE_ID as VARCHAR2(40)), 
		PRIO, ACTN_RQST_CD, NM, TYP, APPR_PLCY, VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_RSP_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_RSP_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_EXT_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXT_T RENAME TO TEMP_KREW_RULE_EXT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_EXT_T
		(
		      RULE_EXT_ID VARCHAR2(40)
		        , RULE_TMPL_ATTR_ID VARCHAR2(40) NOT NULL
		        , RULE_ID VARCHAR2(40) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXT_T
		    ADD CONSTRAINT KREW_RULE_EXT_TP1
		PRIMARY KEY (RULE_EXT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_EXT_T1 
		  ON KREW_RULE_EXT_T 
		  (RULE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_EXT_T
		(RULE_EXT_ID, RULE_TMPL_ATTR_ID, RULE_ID, VER_NBR)
		SELECT CAST(RULE_EXT_ID as VARCHAR2(40)), CAST(RULE_TMPL_ATTR_ID as VARCHAR2(40)), 
		CAST(RULE_ID as VARCHAR2(40)), VER_NBR 
		FROM TEMP_KREW_RULE_EXT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_EXT_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_NODE_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_T RENAME TO TEMP_KREW_RTE_NODE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_NODE_T
		(
		      RTE_NODE_ID VARCHAR2(40)
		        , DOC_TYP_ID VARCHAR2(40)
		        , NM VARCHAR2(255) NOT NULL
		        , TYP VARCHAR2(255) NOT NULL
		        , RTE_MTHD_NM VARCHAR2(255)
		        , RTE_MTHD_CD VARCHAR2(2)
		        , FNL_APRVR_IND NUMBER(1)
		        , MNDTRY_RTE_IND NUMBER(1)
		        , ACTVN_TYP VARCHAR2(250)
		        , BRCH_PROTO_ID VARCHAR2(40)
		        , VER_NBR NUMBER(8) default 0
		        , CONTENT_FRAGMENT VARCHAR2(4000)
		        , GRP_ID VARCHAR2(40)
		        , NEXT_DOC_STAT VARCHAR2(64)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_T
		    ADD CONSTRAINT KREW_RTE_NODE_TP1
		PRIMARY KEY (RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_TI1 
		  ON KREW_RTE_NODE_T 
		  (NM, DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_TI2 
		  ON KREW_RTE_NODE_T 
		  (DOC_TYP_ID, FNL_APRVR_IND)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_TI3 
		  ON KREW_RTE_NODE_T 
		  (BRCH_PROTO_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_TI4 
		  ON KREW_RTE_NODE_T 
		  (DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_NODE_T
		(RTE_NODE_ID, DOC_TYP_ID, NM, TYP, RTE_MTHD_NM, RTE_MTHD_CD, FNL_APRVR_IND,
		MNDTRY_RTE_IND, ACTVN_TYP, BRCH_PROTO_ID, VER_NBR, CONTENT_FRAGMENT, GRP_ID, NEXT_DOC_STAT)
		SELECT CAST(RTE_NODE_ID as VARCHAR2(40)), DOC_TYP_ID, NM, TYP, RTE_MTHD_NM, RTE_MTHD_CD, FNL_APRVR_IND,
		MNDTRY_RTE_IND, ACTVN_TYP, CAST(BRCH_PROTO_ID as VARCHAR2(40)), VER_NBR, CONTENT_FRAGMENT, GRP_ID, NEXT_DOC_STAT
		FROM TEMP_KREW_RTE_NODE_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_NODE_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_NODE_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_NODE_INSTN_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_INSTN_T RENAME TO TEMP_KREW_RTE_NODE_INSTN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_NODE_INSTN_T
		(
		      RTE_NODE_INSTN_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , RTE_NODE_ID VARCHAR2(40) NOT NULL
		        , BRCH_ID VARCHAR2(40)
		        , PROC_RTE_NODE_INSTN_ID VARCHAR2(40)
		        , ACTV_IND NUMBER(1) default 0 NOT NULL
		        , CMPLT_IND NUMBER(1) default 0 NOT NULL
		        , INIT_IND NUMBER(1) default 0 NOT NULL
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_INSTN_T
		    ADD CONSTRAINT KREW_RTE_NODE_INSTN_TP1
		PRIMARY KEY (RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI1 
		  ON KREW_RTE_NODE_INSTN_T 
		  (DOC_HDR_ID, ACTV_IND, CMPLT_IND)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI2 
		  ON KREW_RTE_NODE_INSTN_T 
		  (RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI3 
		  ON KREW_RTE_NODE_INSTN_T 
		  (BRCH_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_TI4 
		  ON KREW_RTE_NODE_INSTN_T 
		  (PROC_RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_NODE_INSTN_T
		(RTE_NODE_INSTN_ID, DOC_HDR_ID, RTE_NODE_ID, BRCH_ID, PROC_RTE_NODE_INSTN_ID, 
		ACTV_IND, CMPLT_IND, INIT_IND, VER_NBR)
		SELECT CAST(RTE_NODE_INSTN_ID as VARCHAR2(40)), DOC_HDR_ID, 
		CAST(RTE_NODE_ID as VARCHAR2(40)), CAST(BRCH_ID as VARCHAR2(40)), 
		CAST(PROC_RTE_NODE_INSTN_ID as VARCHAR2(40)), 
		ACTV_IND, CMPLT_IND, INIT_IND, VER_NBR
		FROM TEMP_KREW_RTE_NODE_INSTN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_NODE_INSTN_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_NODE_INSTN_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_NODE_INSTN_LNK_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_INSTN_LNK_T RENAME TO TEMP_KREW_RTE_NODE_INSTN_LNK_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_NODE_INSTN_LNK_T
		(
		      FROM_RTE_NODE_INSTN_ID VARCHAR2(40)
		        , TO_RTE_NODE_INSTN_ID VARCHAR2(40)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_INSTN_LNK_T
		    ADD CONSTRAINT KREW_RTE_NODE_INSTN_LNK_TP1
		PRIMARY KEY (FROM_RTE_NODE_INSTN_ID,TO_RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_LNK_TI1 
		  ON KREW_RTE_NODE_INSTN_LNK_T 
		  (FROM_RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_LNK_TI2 
		  ON KREW_RTE_NODE_INSTN_LNK_T 
		  (TO_RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_NODE_INSTN_LNK_T
		(FROM_RTE_NODE_INSTN_ID,TO_RTE_NODE_INSTN_ID)
		SELECT CAST(FROM_RTE_NODE_INSTN_ID as VARCHAR2(40)),CAST(TO_RTE_NODE_INSTN_ID as VARCHAR2(40))
		FROM TEMP_KREW_RTE_NODE_INSTN_LNK_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_NODE_INSTN_LNK_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_NODE_INSTN_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_BRCH_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_BRCH_T RENAME TO TEMP_KREW_RTE_BRCH_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_BRCH_T
		(
		      RTE_BRCH_ID VARCHAR2(40)
		        , NM VARCHAR2(255) NOT NULL
		        , PARNT_ID VARCHAR2(40)
		        , INIT_RTE_NODE_INSTN_ID VARCHAR2(40)
		        , SPLT_RTE_NODE_INSTN_ID VARCHAR2(40)
		        , JOIN_RTE_NODE_INSTN_ID VARCHAR2(40)
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_BRCH_T
		    ADD CONSTRAINT KREW_RTE_BRCH_TP1
		PRIMARY KEY (RTE_BRCH_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_TI1 
		  ON KREW_RTE_BRCH_T 
		  (NM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_TI2 
		  ON KREW_RTE_BRCH_T 
		  (PARNT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_TI3 
		  ON KREW_RTE_BRCH_T 
		  (INIT_RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_TI4 
		  ON KREW_RTE_BRCH_T 
		  (SPLT_RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_TI5 
		  ON KREW_RTE_BRCH_T 
		  (JOIN_RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_BRCH_T
		(RTE_BRCH_ID, NM, PARNT_ID, INIT_RTE_NODE_INSTN_ID, SPLT_RTE_NODE_INSTN_ID, JOIN_RTE_NODE_INSTN_ID, VER_NBR)
		SELECT 
		CAST(RTE_BRCH_ID as VARCHAR2(40)), NM, CAST(PARNT_ID as VARCHAR2(40)), 
		CAST(INIT_RTE_NODE_INSTN_ID as VARCHAR2(40)), CAST(SPLT_RTE_NODE_INSTN_ID as VARCHAR2(40)), 
		CAST(JOIN_RTE_NODE_INSTN_ID as VARCHAR2(40)), VER_NBR
		FROM TEMP_KREW_RTE_BRCH_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_BRCH_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_BRCH_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_BRCH_ST_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_BRCH_ST_T RENAME TO TEMP_KREW_RTE_BRCH_ST_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_BRCH_ST_T
		(
		      RTE_BRCH_ST_ID VARCHAR2(40)
		        , RTE_BRCH_ID VARCHAR2(40) NOT NULL
		        , KEY_CD VARCHAR2(255) NOT NULL
		        , VAL VARCHAR2(2000)
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_BRCH_ST_T
		    ADD CONSTRAINT KREW_RTE_BRCH_ST_TP1
		PRIMARY KEY (RTE_BRCH_ST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_ST_TI1 
		  ON KREW_RTE_BRCH_ST_T 
		  (RTE_BRCH_ID, KEY_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_ST_TI2 
		  ON KREW_RTE_BRCH_ST_T 
		  (RTE_BRCH_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_ST_TI3 
		  ON KREW_RTE_BRCH_ST_T 
		  (KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_BRCH_ST_T
		(RTE_BRCH_ST_ID, RTE_BRCH_ID, KEY_CD, VAL, VER_NBR)
		SELECT 
		CAST(RTE_BRCH_ST_ID as VARCHAR2(40)), CAST(RTE_BRCH_ID as VARCHAR2(40)), KEY_CD, VAL, VER_NBR
		FROM TEMP_KREW_RTE_BRCH_ST_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_BRCH_ST_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_BRCH_ST_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_NODE_INSTN_ST_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_INSTN_ST_T RENAME TO TEMP_KREW_RTE_NODE_INSTN_ST_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_NODE_INSTN_ST_T
		(
		      RTE_NODE_INSTN_ST_ID VARCHAR2(40)
		        , RTE_NODE_INSTN_ID VARCHAR2(40) NOT NULL
		        , KEY_CD VARCHAR2(255) NOT NULL
		        , VAL VARCHAR2(2000)
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_INSTN_ST_T
		    ADD CONSTRAINT KREW_RTE_NODE_INSTN_ST_TP1
		PRIMARY KEY (RTE_NODE_INSTN_ST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI1 
		  ON KREW_RTE_NODE_INSTN_ST_T 
		  (RTE_NODE_INSTN_ID, KEY_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI2 
		  ON KREW_RTE_NODE_INSTN_ST_T 
		  (RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI3 
		  ON KREW_RTE_NODE_INSTN_ST_T 
		  (KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_NODE_INSTN_ST_T
		(RTE_NODE_INSTN_ST_ID, RTE_NODE_INSTN_ID, KEY_CD, VAL, VER_NBR)
		SELECT 
		CAST(RTE_NODE_INSTN_ST_ID as VARCHAR2(40)), CAST(RTE_NODE_INSTN_ID as VARCHAR2(40)), KEY_CD, VAL, VER_NBR
		FROM TEMP_KREW_RTE_NODE_INSTN_ST_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_NODE_INSTN_ST_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_NODE_INSTN_ST_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_DOC_TYP_ATTR_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_ATTR_T RENAME TO TEMP_KREW_DOC_TYP_ATTR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_TYP_ATTR_T
		(
		      DOC_TYP_ATTRIB_ID VARCHAR2(40)
		        , DOC_TYP_ID VARCHAR2(40) NOT NULL
		        , RULE_ATTR_ID VARCHAR2(40) NOT NULL
		        , ORD_INDX NUMBER(4) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_ATTR_T
		    ADD CONSTRAINT KREW_DOC_TYP_ATTR_TP1
		PRIMARY KEY (DOC_TYP_ATTRIB_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_ATTR_TI1 
		  ON KREW_DOC_TYP_ATTR_T 
		  (DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_TYP_ATTR_T
		(DOC_TYP_ATTRIB_ID, DOC_TYP_ID, RULE_ATTR_ID, ORD_INDX)
		SELECT 
		CAST(DOC_TYP_ATTRIB_ID as VARCHAR2(40)), CAST(DOC_TYP_ID as VARCHAR2(40)), 
		CAST(RULE_ATTR_ID as VARCHAR2(40)), ORD_INDX
		FROM TEMP_KREW_DOC_TYP_ATTR_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_TYP_ATTR_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_ATTR_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_ATTR_T RENAME TO TEMP_KREW_RULE_ATTR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_ATTR_T
		(
		      RULE_ATTR_ID VARCHAR2(40)
		        , NM VARCHAR2(255) NOT NULL
		        , LBL VARCHAR2(2000) NOT NULL
		        , RULE_ATTR_TYP_CD VARCHAR2(2000) NOT NULL
		        , DESC_TXT VARCHAR2(2000)
		        , CLS_NM VARCHAR2(2000)
		        , XML CLOB
		        , VER_NBR NUMBER(8) default 0
		        , APPL_ID VARCHAR2(255)
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_RULE_ATTR_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_ATTR_T
		    ADD CONSTRAINT KREW_RULE_ATTR_TP1
		PRIMARY KEY (RULE_ATTR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_ATTR_T
		(RULE_ATTR_ID, NM, LBL, RULE_ATTR_TYP_CD, DESC_TXT, CLS_NM, XML, VER_NBR, APPL_ID, OBJ_ID)
		SELECT 
		CAST(RULE_ATTR_ID as VARCHAR2(40)), NM, LBL, RULE_ATTR_TYP_CD, DESC_TXT, CLS_NM, XML, VER_NBR, APPL_ID, OBJ_ID
		FROM TEMP_KREW_RULE_ATTR_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_ATTR_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_TMPL_OPTN_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_OPTN_T RENAME TO TEMP_KREW_RULE_TMPL_OPTN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_TMPL_OPTN_T
		(
		      RULE_TMPL_OPTN_ID VARCHAR2(40)
		        , RULE_TMPL_ID VARCHAR2(40)
		        , KEY_CD VARCHAR2(250)
		        , VAL VARCHAR2(2000)
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_OPTN_T
		    ADD CONSTRAINT KREW_RULE_TMPL_OPTN_TP1
		PRIMARY KEY (RULE_TMPL_OPTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_TMPL_OPTN_T
		(RULE_TMPL_OPTN_ID, RULE_TMPL_ID, KEY_CD, VAL, VER_NBR)
		SELECT 
		CAST(RULE_TMPL_OPTN_ID as VARCHAR2(40)), CAST(RULE_TMPL_ID as VARCHAR2(40)), KEY_CD, VAL, VER_NBR
		FROM TEMP_KREW_RULE_TMPL_OPTN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_TMPL_OPTN_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_TMPL_OPTN_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_OUT_BOX_ITM_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_OUT_BOX_ITM_T RENAME TO TEMP_KREW_OUT_BOX_ITM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_OUT_BOX_ITM_T
		(
		      ACTN_ITM_ID VARCHAR2(40)
		        , PRNCPL_ID VARCHAR2(40) NOT NULL
		        , ASND_DT DATE NOT NULL
		        , RQST_CD CHAR(1) NOT NULL
		        , ACTN_RQST_ID VARCHAR2(40) NOT NULL
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , ROLE_NM VARCHAR2(2000)
		        , DLGN_PRNCPL_ID VARCHAR2(40)
		        , DOC_HDR_TTL VARCHAR2(255)
		        , DOC_TYP_LBL VARCHAR2(128) NOT NULL
		        , DOC_HDLR_URL VARCHAR2(255) NOT NULL
		        , DOC_TYP_NM VARCHAR2(64) NOT NULL
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , DLGN_TYP VARCHAR2(1)
		        , VER_NBR NUMBER(8) default 0
		        , GRP_ID VARCHAR2(40)
		        , DLGN_GRP_ID VARCHAR2(40)
		        , RQST_LBL VARCHAR2(255)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_OUT_BOX_ITM_T
		    ADD CONSTRAINT KREW_OUT_BOX_ITM_TP1
		PRIMARY KEY (ACTN_ITM_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_OUT_BOX_ITM_TI1 
		  ON KREW_OUT_BOX_ITM_T 
		  (PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_OUT_BOX_ITM_TI2 
		  ON KREW_OUT_BOX_ITM_T 
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_OUT_BOX_ITM_TI3 
		  ON KREW_OUT_BOX_ITM_T 
		  (ACTN_RQST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_OUT_BOX_ITM_T
		(ACTN_ITM_ID, PRNCPL_ID, ASND_DT, RQST_CD, ACTN_RQST_ID, DOC_HDR_ID, ROLE_NM, 
		DLGN_PRNCPL_ID, DOC_HDR_TTL, DOC_TYP_LBL, DOC_HDLR_URL, DOC_TYP_NM, RSP_ID, 
		DLGN_TYP, VER_NBR, GRP_ID, DLGN_GRP_ID, RQST_LBL)
		SELECT 
		CAST(ACTN_ITM_ID as VARCHAR2(40)), PRNCPL_ID, ASND_DT, RQST_CD, CAST(ACTN_RQST_ID as VARCHAR2(40)), 
		DOC_HDR_ID, ROLE_NM, 
		DLGN_PRNCPL_ID, DOC_HDR_TTL, DOC_TYP_LBL, DOC_HDLR_URL, DOC_TYP_NM, 
		CAST(RSP_ID as VARCHAR2(40)), 
		DLGN_TYP, VER_NBR, GRP_ID, DLGN_GRP_ID, RQST_LBL
		FROM TEMP_KREW_OUT_BOX_ITM_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_OUT_BOX_ITM_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_OUT_BOX_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_NODE_CFG_PARM_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_CFG_PARM_T RENAME TO TEMP_KREW_RTE_NODE_CFG_PARM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_NODE_CFG_PARM_T
		(
		      RTE_NODE_CFG_PARM_ID VARCHAR2(40)
		        , RTE_NODE_ID VARCHAR2(40) NOT NULL
		        , KEY_CD VARCHAR2(255) NOT NULL
		        , VAL VARCHAR2(4000)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_CFG_PARM_T
		    ADD CONSTRAINT KREW_RTE_NODE_CFG_PARM_TP1
		PRIMARY KEY (RTE_NODE_CFG_PARM_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_CFG_PARM_TI1 
		  ON KREW_RTE_NODE_CFG_PARM_T 
		  (RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_NODE_CFG_PARM_T
		(RTE_NODE_CFG_PARM_ID, RTE_NODE_ID, KEY_CD, VAL)
		SELECT 
		CAST(RTE_NODE_CFG_PARM_ID as VARCHAR2(40)), CAST(RTE_NODE_ID as VARCHAR2(40)), KEY_CD, VAL
		FROM TEMP_KREW_RTE_NODE_CFG_PARM_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_NODE_CFG_PARM_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_NODE_CFG_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_DOC_TYP_PROC_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_PROC_T RENAME TO TEMP_KREW_DOC_TYP_PROC_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_TYP_PROC_T
		(
		      DOC_TYP_PROC_ID VARCHAR2(40)
		        , DOC_TYP_ID VARCHAR2(40) NOT NULL
		        , INIT_RTE_NODE_ID VARCHAR2(40)
		        , NM VARCHAR2(255) NOT NULL
		        , INIT_IND NUMBER(1) default 0 NOT NULL
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_PROC_T
		    ADD CONSTRAINT KREW_DOC_TYP_PROC_TP1
		PRIMARY KEY (DOC_TYP_PROC_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_PROC_TI1 
		  ON KREW_DOC_TYP_PROC_T 
		  (DOC_TYP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_PROC_TI2 
		  ON KREW_DOC_TYP_PROC_T 
		  (INIT_RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_TYP_PROC_TI3 
		  ON KREW_DOC_TYP_PROC_T 
		  (NM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_TYP_PROC_T
		(DOC_TYP_PROC_ID, DOC_TYP_ID, INIT_RTE_NODE_ID, NM, INIT_IND, VER_NBR)
		SELECT 
		CAST(DOC_TYP_PROC_ID as VARCHAR2(40)), CAST(DOC_TYP_ID as VARCHAR2(40)), INIT_RTE_NODE_ID, 
		NM, INIT_IND, VER_NBR
		FROM TEMP_KREW_DOC_TYP_PROC_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_TYP_PROC_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_TYP_PROC_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_DOC_LNK_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_LNK_T RENAME TO TEMP_KREW_DOC_LNK_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_LNK_T
		(
		      DOC_LNK_ID VARCHAR2(40)
		        , ORGN_DOC_ID VARCHAR2(40) NOT NULL
		        , DEST_DOC_ID VARCHAR2(40) NOT NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_LNK_T
		    ADD CONSTRAINT KREW_DOC_LNK_TP1
		PRIMARY KEY (DOC_LNK_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_LNK_TI1 
		  ON KREW_DOC_LNK_T 
		  (ORGN_DOC_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_LNK_T
		(DOC_LNK_ID, ORGN_DOC_ID, DEST_DOC_ID)
		SELECT 
		CAST(DOC_LNK_ID as VARCHAR2(40)), ORGN_DOC_ID, DEST_DOC_ID
		FROM TEMP_KREW_DOC_LNK_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_LNK_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_BRCH_PROTO_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_BRCH_PROTO_T RENAME TO TEMP_KREW_RTE_BRCH_PROTO_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_BRCH_PROTO_T
		(
		      RTE_BRCH_PROTO_ID VARCHAR2(40)
		        , BRCH_NM VARCHAR2(255) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_BRCH_PROTO_T
		    ADD CONSTRAINT KREW_RTE_BRCH_PROTO_TP1
		PRIMARY KEY (RTE_BRCH_PROTO_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_BRCH_PROTO_TI1 
		  ON KREW_RTE_BRCH_PROTO_T 
		  (BRCH_NM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_BRCH_PROTO_T
		(RTE_BRCH_PROTO_ID, BRCH_NM, VER_NBR)
		SELECT 
		CAST(RTE_BRCH_PROTO_ID as VARCHAR2(40)), BRCH_NM, VER_NBR
		FROM TEMP_KREW_RTE_BRCH_PROTO_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_BRCH_PROTO_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_BRCH_PROTO_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_EXT_VAL_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXT_VAL_T RENAME TO TEMP_KREW_RULE_EXT_VAL_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_EXT_VAL_T
		(
		      RULE_EXT_VAL_ID VARCHAR2(40)
		        , RULE_EXT_ID VARCHAR2(40) NOT NULL
		        , VAL VARCHAR2(2000) NOT NULL
		        , KEY_CD VARCHAR2(2000) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXT_VAL_T
		    ADD CONSTRAINT KREW_RULE_EXT_VAL_TP1
		PRIMARY KEY (RULE_EXT_VAL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_EXT_VAL_T1 
		  ON KREW_RULE_EXT_VAL_T 
		  (RULE_EXT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_EXT_VAL_T2 
		  ON KREW_RULE_EXT_VAL_T 
		  (RULE_EXT_VAL_ID, KEY_CD)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_EXT_VAL_T
		(RULE_EXT_VAL_ID, RULE_EXT_ID, VAL, KEY_CD, VER_NBR)
		SELECT 
		CAST(RULE_EXT_VAL_ID as VARCHAR2(40)), CAST(RULE_EXT_ID as VARCHAR2(40)), VAL, KEY_CD, VER_NBR
		FROM TEMP_KREW_RULE_EXT_VAL_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_EXT_VAL_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_EXT_VAL_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_EXPR_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXPR_T RENAME TO TEMP_KREW_RULE_EXPR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_EXPR_T
		(
		      RULE_EXPR_ID VARCHAR2(40)
		        , TYP VARCHAR2(256) NOT NULL
		        , RULE_EXPR VARCHAR2(4000)
		        , OBJ_ID VARCHAR2(36) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		    , CONSTRAINT KREW_RULE_EXPR_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXPR_T
		    ADD CONSTRAINT KREW_RULE_EXPR_TP1
		PRIMARY KEY (RULE_EXPR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RULE_EXPR_T
		(RULE_EXPR_ID, TYP, RULE_EXPR, OBJ_ID, VER_NBR)
		SELECT 
		CAST(RULE_EXPR_ID as VARCHAR2(40)), TYP, RULE_EXPR, OBJ_ID, VER_NBR
		FROM TEMP_KREW_RULE_EXPR_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_EXPR_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_EXPR_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_APP_DOC_STAT_TRAN_T
		-----------------------------------------------------------------------------
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_constraints where CONSTRAINT_NAME = 'KREW_APP_DOC_STAT_TRAN_TC0' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE KREW_APP_DOC_STAT_TRAN_T DROP CONSTRAINT KREW_APP_DOC_STAT_TRAN_TC0';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_APP_DOC_STAT_TRAN_TC0 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_constraints where CONSTRAINT_NAME = 'KREW_APP_DOC_STAT_TRAN_TP1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE KREW_APP_DOC_STAT_TRAN_T DROP CONSTRAINT KREW_APP_DOC_STAT_TRAN_TP1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_APP_DOC_STAT_TRAN_TP1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_APP_DOC_STAT_TI1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_APP_DOC_STAT_TI1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_APP_DOC_STAT_TI1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_APP_DOC_STAT_TI2' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_APP_DOC_STAT_TI2';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_APP_DOC_STAT_TI2 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_APP_DOC_STAT_TI3' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_APP_DOC_STAT_TI3';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_APP_DOC_STAT_TI3 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_APP_DOC_STAT_TRAN_T RENAME TO TEMP_KREW_APP_DOC_STAT_TRAN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_APP_DOC_STAT_TRAN_T
		(
		      APP_DOC_STAT_TRAN_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40)
		        , APP_DOC_STAT_FROM VARCHAR2(64)
		        , APP_DOC_STAT_TO VARCHAR2(64)
		        , STAT_TRANS_DATE DATE
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_APP_DOC_STAT_TRAN_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_APP_DOC_STAT_TRAN_T
		    ADD CONSTRAINT KREW_APP_DOC_STAT_TRAN_TP1
		PRIMARY KEY (APP_DOC_STAT_TRAN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_APP_DOC_STAT_TI1 
		  ON KREW_APP_DOC_STAT_TRAN_T 
		  (DOC_HDR_ID, STAT_TRANS_DATE)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_APP_DOC_STAT_TI2 
		  ON KREW_APP_DOC_STAT_TRAN_T 
		  (DOC_HDR_ID, APP_DOC_STAT_FROM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_APP_DOC_STAT_TI3 
		  ON KREW_APP_DOC_STAT_TRAN_T 
		  (DOC_HDR_ID, APP_DOC_STAT_TO)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_APP_DOC_STAT_TRAN_T
		(APP_DOC_STAT_TRAN_ID, DOC_HDR_ID, APP_DOC_STAT_FROM, APP_DOC_STAT_TO, STAT_TRANS_DATE, VER_NBR, OBJ_ID)
		SELECT 
		CAST(APP_DOC_STAT_TRAN_ID as VARCHAR2(40)), DOC_HDR_ID, APP_DOC_STAT_FROM, APP_DOC_STAT_TO, STAT_TRANS_DATE, VER_NBR, OBJ_ID
		FROM TEMP_KREW_APP_DOC_STAT_TRAN_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_APP_DOC_STAT_TRAN_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_APP_DOC_STAT_TRAN_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_DOC_HDR_EXT_DT_T
		-----------------------------------------------------------------------------
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_constraints where CONSTRAINT_NAME = 'KREW_DOC_HDR_EXT_DT_TP1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE KREW_DOC_HDR_EXT_DT_T DROP CONSTRAINT KREW_DOC_HDR_EXT_DT_TP1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_DT_TP1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_DT_TI1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_DT_TI1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_DT_TI1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_DT_TI2' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_DT_TI2';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_DT_TI2 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_DT_TI3' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_DT_TI3';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_DT_TI3 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_DT_T RENAME TO TEMP_KREW_DOC_HDR_EXT_DT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_DT_T
		(
		      DOC_HDR_EXT_DT_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , KEY_CD VARCHAR2(256) NOT NULL
		        , VAL DATE
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_DT_T
		    ADD CONSTRAINT KREW_DOC_HDR_EXT_DT_TP1
		PRIMARY KEY (DOC_HDR_EXT_DT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_DT_TI1 
		  ON KREW_DOC_HDR_EXT_DT_T 
		  (KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_DT_TI2 
		  ON KREW_DOC_HDR_EXT_DT_T 
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_DT_TI3 
		  ON KREW_DOC_HDR_EXT_DT_T 
		  (VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_DT_T
		(DOC_HDR_EXT_DT_ID, DOC_HDR_ID, KEY_CD, VAL)
		SELECT 
		CAST(DOC_HDR_EXT_DT_ID as VARCHAR2(40)), DOC_HDR_ID, KEY_CD, VAL
		FROM TEMP_KREW_DOC_HDR_EXT_DT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_HDR_EXT_DT_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_HDR_EXT_DT_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_DOC_HDR_EXT_LONG_T
		-----------------------------------------------------------------------------
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_constraints where CONSTRAINT_NAME = 'KREW_DOC_HDR_EXT_LONG_TP1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE KREW_DOC_HDR_EXT_LONG_T DROP CONSTRAINT KREW_DOC_HDR_EXT_LONG_TP1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_LONG_TP1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_LONG_TI1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_LONG_TI1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_LONG_TI1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_LONG_TI2' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_LONG_TI2';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_LONG_TI2 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_LONG_TI3' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_LONG_TI3';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_LONG_TI3 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_LONG_T RENAME TO TEMP_KREW_DOC_HDR_EXT_LONG_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_LONG_T
		(
		      DOC_HDR_EXT_LONG_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , KEY_CD VARCHAR2(256) NOT NULL
		        , VAL NUMBER(22)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_LONG_T
		    ADD CONSTRAINT KREW_DOC_HDR_EXT_LONG_TP1
		PRIMARY KEY (DOC_HDR_EXT_LONG_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI1 
		  ON KREW_DOC_HDR_EXT_LONG_T 
		  (KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI2 
		  ON KREW_DOC_HDR_EXT_LONG_T 
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI3 
		  ON KREW_DOC_HDR_EXT_LONG_T 
		  (VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_LONG_T
		(DOC_HDR_EXT_LONG_ID, DOC_HDR_ID, KEY_CD, VAL)
		SELECT 
		CAST(DOC_HDR_EXT_LONG_ID as VARCHAR2(40)), DOC_HDR_ID, KEY_CD, VAL
		FROM TEMP_KREW_DOC_HDR_EXT_LONG_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_HDR_EXT_LONG_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_HDR_EXT_LONG_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_DOC_HDR_EXT_FLT_T
		-----------------------------------------------------------------------------
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_constraints where CONSTRAINT_NAME = 'KREW_DOC_HDR_EXT_FLT_TP1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE KREW_DOC_HDR_EXT_FLT_T DROP CONSTRAINT KREW_DOC_HDR_EXT_FLT_TP1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_FLT_TP1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_FLT_TI1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_FLT_TI1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_FLT_TI1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_FLT_TI2' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_FLT_TI2';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_FLT_TI2 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_FLT_TI3' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_FLT_TI3';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_FLT_TI3 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_FLT_T RENAME TO TEMP_KREW_DOC_HDR_EXT_FLT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_FLT_T
		(
		      DOC_HDR_EXT_FLT_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , KEY_CD VARCHAR2(256) NOT NULL
		        , VAL NUMBER(30,15)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_FLT_T
		    ADD CONSTRAINT KREW_DOC_HDR_EXT_FLT_TP1
		PRIMARY KEY (DOC_HDR_EXT_FLT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI1 
		  ON KREW_DOC_HDR_EXT_FLT_T 
		  (KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI2 
		  ON KREW_DOC_HDR_EXT_FLT_T 
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI3 
		  ON KREW_DOC_HDR_EXT_FLT_T 
		  (VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_FLT_T
		(DOC_HDR_EXT_FLT_ID, DOC_HDR_ID, KEY_CD, VAL)
		SELECT 
		CAST(DOC_HDR_EXT_FLT_ID as VARCHAR2(40)), DOC_HDR_ID, KEY_CD, VAL
		FROM TEMP_KREW_DOC_HDR_EXT_FLT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_HDR_EXT_FLT_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_HDR_EXT_FLT_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_DOC_HDR_EXT_T
		-----------------------------------------------------------------------------
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_constraints where CONSTRAINT_NAME = 'KREW_DOC_HDR_EXT_TP1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE KREW_DOC_HDR_EXT_T DROP CONSTRAINT KREW_DOC_HDR_EXT_TP1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_TP1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_TI1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_TI1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_TI1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_TI2' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_TI2';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_TI2 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_indexes where INDEX_NAME = 'KREW_DOC_HDR_EXT_TI3' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'DROP INDEX KREW_DOC_HDR_EXT_TI3';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_DOC_HDR_EXT_TI3 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_T RENAME TO TEMP_KREW_DOC_HDR_EXT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_HDR_EXT_T
		(
		      DOC_HDR_EXT_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , KEY_CD VARCHAR2(256) NOT NULL
		        , VAL VARCHAR2(2000)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_HDR_EXT_T
		    ADD CONSTRAINT KREW_DOC_HDR_EXT_TP1
		PRIMARY KEY (DOC_HDR_EXT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_TI1 
		  ON KREW_DOC_HDR_EXT_T 
		  (KEY_CD, VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_TI2 
		  ON KREW_DOC_HDR_EXT_T 
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_HDR_EXT_TI3 
		  ON KREW_DOC_HDR_EXT_T 
		  (VAL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_DOC_HDR_EXT_T
		(DOC_HDR_EXT_ID, DOC_HDR_ID, KEY_CD, VAL)
		SELECT 
		CAST(DOC_HDR_EXT_ID as VARCHAR2(40)), DOC_HDR_ID, KEY_CD, VAL
		FROM TEMP_KREW_DOC_HDR_EXT_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_HDR_EXT_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_HDR_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<!-- JHK: removing since not in master datasource
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_CFG_PARM_T
		    ADD CONSTRAINT EN_RTE_NODE_CFG_PARM_TR1 FOREIGN KEY (RTE_NODE_ID)
		    REFERENCES KREW_RTE_NODE_T (RTE_NODE_ID)
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-07-11-m6.sql
		-- 
		
		
		--
		-- NOTE: when assembling this script for release, please merge any table rebuilds with those from 2011-04-28.sql
		--
		
		-----------------------------------------------------------------------------
		-- KREW_RTE_NODE_LNK_T
		-----------------------------------------------------------------------------
		ALTER TABLE KREW_RTE_NODE_LNK_T RENAME TO TEMP_KREW_RTE_NODE_LNK_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RTE_NODE_LNK_T
		(
			FROM_RTE_NODE_ID VARCHAR2(40)
		    , TO_RTE_NODE_ID VARCHAR2(40)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RTE_NODE_LNK_T
		    ADD CONSTRAINT KREW_RTE_NODE_LNK_TP1
		PRIMARY KEY (FROM_RTE_NODE_ID, TO_RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_LNK_TI1 
		  ON KREW_RTE_NODE_LNK_T 
		  (FROM_RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RTE_NODE_LNK_TI2 
		  ON KREW_RTE_NODE_LNK_T 
		  (TO_RTE_NODE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_RTE_NODE_LNK_T
		(FROM_RTE_NODE_ID, TO_RTE_NODE_ID)
		SELECT CAST(FROM_RTE_NODE_ID as VARCHAR2(40)), CAST(TO_RTE_NODE_ID as VARCHAR2(40))
		FROM TEMP_KREW_RTE_NODE_LNK_T
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RTE_NODE_LNK_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RTE_NODE_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-07-13.sql
		-- 
		
		
		--KRCR_PARM_T
		ALTER TABLE KRCR_PARM_T RENAME column PARM_DTL_TYP_CD to CMPNT_CD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRCR_PARM_T RENAME column TXT to VAL
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRCR_PARM_T RENAME column CONS_CD to EVAL_OPRTR_CD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--KRCR_PARM_DTL_TYP_T to KRCR_CMPNT_T
		ALTER TABLE KRCR_PARM_DTL_TYP_T RENAME TO KRCR_CMPNT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRCR_CMPNT_T RENAME COLUMN PARM_DTL_TYP_CD TO CMPNT_CD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--KRLC_CMP_TYP_T
		ALTER TABLE KRLC_CMP_TYP_T DROP COLUMN DOBJ_MAINT_CD_ACTV_IND
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-07-22.sql
		-- 
		
		
		-- Oracle sql for KULRICE-5419:
		alter table krms_cntxt_t add desc_txt varchar2(255) default null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_spec_t add desc_txt varchar2(255) default null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_t add desc_txt varchar2(255) default null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_attr_defn_t add desc_txt varchar2(255) default null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-07-24-m7.sql
		-- 
		
		
		drop sequence KREW_HLP_S 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop table KREW_HLP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-07-25-m7.sql
		-- 
		
		
		drop table KREW_RIA_DOC_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop sequence KREW_RIA_DOCTYPE_MAP_ID_S
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop table KREW_RIA_DOCTYPE_MAP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop table KREW_RMV_RPLC_DOC_T 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop table KREW_RMV_RPLC_GRP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop table KREW_RMV_RPLC_RULE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_INIT_RTE_NODE_INSTN_T
		-----------------------------------------------------------------------------
			DECLARE
				TableName VARCHAR2(30) := 'KREW_INIT_RTE_NODE_INSTN_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_INIT_RTE_NODE_INSTN_T RENAME TO TEMP_KREW_INIT_RTE_NODE
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_INIT_RTE_NODE_INSTN_T
		(
		         DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , RTE_NODE_INSTN_ID VARCHAR2(40) NOT NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_INIT_RTE_NODE_INSTN_T
		    ADD CONSTRAINT KREW_INIT_RTE_NODE_INSTN_TP1
		PRIMARY KEY (DOC_HDR_ID, RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI1
		  ON KREW_INIT_RTE_NODE_INSTN_T
		  (DOC_HDR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI2
		  ON KREW_INIT_RTE_NODE_INSTN_T
		  (RTE_NODE_INSTN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KREW_INIT_RTE_NODE_INSTN_T
		(DOC_HDR_ID, RTE_NODE_INSTN_ID)
		SELECT DOC_HDR_ID, CAST(RTE_NODE_INSTN_ID as VARCHAR2(40))
		FROM TEMP_KREW_INIT_RTE_NODE
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_INIT_RTE_NODE';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_INIT_RTE_NODE CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-07-29-m7.sql
		-- 
		
		
		update KRIM_PERM_T t set NM='Take Requested Approve Action' where PERM_ID = '170'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-07-29.sql
		-- 
		
		
		--
		-- make combo of nm & nmspc_cd unique in all applicable KRMS tables
		-- and drop nmspc_cd where it doesn't make sense
		--
		
		--
		-- break direct fk to krms_cntxt_t from krms_term_rslvr_t & krms_term_spec_t
		--
		
		-- remove cntxt_id from krms_term_rslvr_t, fix unique constraint
		alter table krms_term_rslvr_t drop constraint krms_term_rslvr_tc1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_rslvr_t add constraint krms_term_rslvr_tc1 unique (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_rslvr_t drop constraint KRMS_TERM_RSLVR_FK2
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_rslvr_t drop column cntxt_id
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- remove fk from krms_term_spec_t to krms_cntxt_t
		alter table krms_term_spec_t add nmspc_cd varchar2(40) not null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_spec_t drop constraint KRMS_ASSET_FK1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop index KRMS_ASSET_TI1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_spec_t drop constraint krms_asset_tc1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_spec_t add constraint krms_term_spec_tc1 unique (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_spec_t drop column cntxt_id
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		--
		-- refactor krms_cntxt_term_spec_prereq_t to be a valid term specs table instead
		--
		-- rename krms_cntxt_term_spec_prereq_t to krms_cntxt_vld_term_spec_t
		-- and add prereq column
		alter table krms_cntxt_term_spec_prereq_t drop constraint KRMS_CNTXT_ASSET_PREREQ_FK1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop index krms_cntxt_asset_prereq_ti1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_cntxt_term_spec_prereq_t drop constraint KRMS_CNTXT_ASSET_PREREQ_FK2
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop index krms_cntxt_asset_prereq_ti2
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_cntxt_term_spec_prereq_t rename to krms_cntxt_vld_term_spec_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_cntxt_vld_term_spec_t add prereq varchar2(1) default 'n'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_cntxt_vld_term_spec_t add constraint krms_cntxt_vld_term_spec_ti1 foreign key (cntxt_id) references krms_cntxt_t(cntxt_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_cntxt_vld_term_spec_t add constraint krms_cntxt_vld_term_spec_ti2 foreign key (term_spec_id) references krms_term_spec_t(term_spec_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		--
		-- set up some missing unique constraints
		--
		-- wow, Oracle and MySQL support the same syntax here
		alter table krms_cntxt_t add constraint krms_cntxt_tc1 unique (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_func_t add constraint krms_func_tc1 unique (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- drop namespace code from krms_agenda_t
		alter table krms_agenda_t drop column nmspc_cd
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_agenda_t add constraint krms_agenda_tc1 unique (nm, cntxt_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_typ_t add constraint krms_typ_tc1 unique (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_attr_defn_t add constraint krms_attr_defn_tc1 unique (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_rule_t add constraint krms_rule_tc1 unique (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		--
		-- clean up some crufty index and constraint names
		--
		
		alter table krms_term_rslvr_attr_t drop constraint KRMS_ASSET_RSLVR_ATTR_FK1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_rslvr_attr_t drop constraint KRMS_ASSET_RSLVR_ATTR_FK2
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop index krms_asset_rslvr_attr_ti1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		create index krms_term_rslvr_attr_ti1 on krms_term_rslvr_attr_t (term_rslvr_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop index krms_asset_rslvr_attr_ti2
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		create index krms_term_rslvr_attr_ti2 on krms_term_rslvr_attr_t (attr_defn_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_rslvr_attr_t add constraint krms_term_rslvr_attr_fk1 foreign key (term_rslvr_id) references krms_term_rslvr_t (term_rslvr_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table krms_term_rslvr_attr_t add constraint krms_term_rslvr_attr_fk2 foreign key (attr_defn_id) references krms_attr_defn_t (attr_defn_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-08-11.sql
		-- 
		
		
		
		
		-- -----------------------------------------------------
		-- Table krew_typ_t
		-- -----------------------------------------------------
		
		CREATE  TABLE krew_typ_t (
		  typ_id VARCHAR2(40) NOT NULL ,
		  nm VARCHAR2(100) NOT NULL ,
		  nmspc_cd VARCHAR2(40) NOT NULL ,
		  srvc_nm VARCHAR2(200) NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y' NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0 NOT NULL ,
		  PRIMARY KEY (typ_id) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE UNIQUE INDEX krew_typ_tc1 ON krew_typ_t (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krew_ppl_flw_t
		-- -----------------------------------------------------
		
		CREATE  TABLE krew_ppl_flw_t (
		  ppl_flw_id VARCHAR2(40) NOT NULL ,
		  nm VARCHAR2(100) NOT NULL ,
		  nmspc_cd VARCHAR2(40) NOT NULL ,
		  typ_id VARCHAR2(40) NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y' NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0 NOT NULL ,
		  desc_txt VARCHAR2(4000) NULL ,
		  PRIMARY KEY (ppl_flw_id) ,
		  CONSTRAINT krew_ppl_flw_fk1
		    FOREIGN KEY (typ_id )
		    REFERENCES krew_typ_t (typ_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE UNIQUE INDEX krew_ppl_flw_tc1 ON krew_ppl_flw_t (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krew_attr_defn_t
		-- -----------------------------------------------------
		
		CREATE  TABLE krew_attr_defn_t (
		  attr_defn_id VARCHAR2(40) NOT NULL ,
		  nm VARCHAR2(100) NOT NULL ,
		  nmspc_cd VARCHAR2(40) NOT NULL ,
		  lbl VARCHAR2(40) NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y' NOT NULL ,
		  cmpnt_nm VARCHAR2(100) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0 NOT NULL ,
		  desc_txt VARCHAR2(40) NULL ,
		  PRIMARY KEY (attr_defn_id) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE UNIQUE INDEX krew_attr_defn_tc1 ON krew_attr_defn_t (nm, nmspc_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krew_typ_attr_t
		-- -----------------------------------------------------
		
		CREATE  TABLE krew_typ_attr_t (
		  typ_attr_id VARCHAR2(40) NOT NULL ,
		  seq_no NUMBER(5) NOT NULL ,
		  typ_id VARCHAR2(40) NOT NULL ,
		  attr_defn_id VARCHAR2(255) NOT NULL ,
		  actv VARCHAR2(1) DEFAULT 'Y' NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0 NOT NULL ,
		  PRIMARY KEY (typ_attr_id) ,
		  CONSTRAINT krew_typ_attr_fk1
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krew_attr_defn_t (attr_defn_id ),
		  CONSTRAINT krew_typ_attr_fk2
		    FOREIGN KEY (typ_id )
		    REFERENCES krew_typ_t (typ_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_typ_attr_ti1 ON krew_typ_attr_t (attr_defn_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_typ_attr_ti2 ON krew_typ_attr_t (typ_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE UNIQUE INDEX krew_typ_attr_tc1 ON krew_typ_attr_t (typ_id, attr_defn_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krew_ppl_flw_mbr_t
		-- -----------------------------------------------------
		
		CREATE  TABLE krew_ppl_flw_mbr_t (
		  ppl_flw_mbr_id VARCHAR2(40) NOT NULL ,
		  ppl_flw_id VARCHAR2(40) NOT NULL ,
		  mbr_typ_cd VARCHAR2(1) NOT NULL ,
		  mbr_id VARCHAR2(40) NOT NULL ,
		  prio NUMBER(8) NULL ,
		  dlgt_frm_id VARCHAR2(40) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0 NOT NULL ,
		  PRIMARY KEY (ppl_flw_mbr_id) ,
		  CONSTRAINT krew_ppl_flw_mbr_fk1
		    FOREIGN KEY (ppl_flw_id )
		    REFERENCES krew_ppl_flw_t (ppl_flw_id ),
		  CONSTRAINT krew_ppl_flw_mbr_fk2
		    FOREIGN KEY (dlgt_frm_id )
		    REFERENCES krew_ppl_flw_mbr_t (ppl_flw_mbr_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_ppl_flw_mbr_ti1 ON krew_ppl_flw_mbr_t (ppl_flw_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_ppl_flw_mbr_ti2 ON krew_ppl_flw_mbr_t (ppl_flw_id, prio)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE UNIQUE INDEX krew_ppl_flw_mbr_tc1 ON krew_ppl_flw_mbr_t (ppl_flw_id, mbr_typ_cd, mbr_id, dlgt_frm_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_ppl_flw_mbr_ti3 ON krew_ppl_flw_mbr_t (dlgt_frm_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krew_ppl_flw_attr_t
		-- -----------------------------------------------------
		
		CREATE  TABLE krew_ppl_flw_attr_t (
		  ppl_flw_attr_id VARCHAR2(40) NOT NULL ,
		  ppl_flw_id VARCHAR2(40) NOT NULL ,
		  attr_defn_id VARCHAR2(40) NOT NULL ,
		  attr_val VARCHAR2(400) NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0 NOT NULL ,
		  PRIMARY KEY (ppl_flw_attr_id) ,
		  CONSTRAINT krew_ppl_flw_attr_fk1
		    FOREIGN KEY (ppl_flw_id )
		    REFERENCES krew_ppl_flw_t (ppl_flw_id ),
		  CONSTRAINT krew_ppl_flw_attr_fk2
		    FOREIGN KEY (attr_defn_id )
		    REFERENCES krew_attr_defn_t (attr_defn_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_ppl_flw_attr_ti1 ON krew_ppl_flw_attr_t (ppl_flw_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_ppl_flw_attr_ti2 ON krew_ppl_flw_attr_t (attr_defn_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- -----------------------------------------------------
		-- Table krew_typ_s
		-- -----------------------------------------------------
		CREATE SEQUENCE krew_typ_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krew_typ_attr_s
		-- -----------------------------------------------------
		CREATE SEQUENCE krew_typ_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krew_attr_defn_s
		-- -----------------------------------------------------
		CREATE SEQUENCE krew_attr_defn_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krew_ppl_flw_s
		-- -----------------------------------------------------
		CREATE SEQUENCE krew_ppl_flw_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krew_ppl_flw_attr_s
		-- -----------------------------------------------------
		CREATE SEQUENCE krew_ppl_flw_attr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krew_ppl_flw_mbr_s
		-- -----------------------------------------------------
		CREATE SEQUENCE krew_ppl_flw_mbr_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-08-17.sql
		-- 
		
		
		delete from krcr_parm_t
		where nmspc_cd = 'KR-NS'
		and cmpnt_cd = 'All'
		and parm_nm in ('STRING_TO_DATE_FORMATS', 'STRING_TO_TIMESTAMP_FORMATS', 'TIMESTAMP_TO_STRING_FORMAT_FOR_USER_INTERFACE', 'DATE_TO_STRING_FORMAT_FOR_FILE_NAME', 'TIMESTAMP_TO_STRING_FORMAT_FOR_FILE_NAME')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-08-29.sql
		-- 
		
		
		delete from krcr_parm_t where PARM_NM = 'CACHING_IND'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-09-07.sql
		-- 
		
		
		-- KULRICE-5360 rename KIM entity fields
		alter table KRIM_ENTITY_NM_T rename column TITLE_NM to PREFIX_NM
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table KRIM_ENTITY_BIO_T rename column BIRTH_STATE_CD to BIRTH_STATE_PVC_CD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table KRIM_ENTITY_ADDR_T rename column POSTAL_STATE_CD to STATE_PVC_CD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_ADDR_T rename column CITY_NM to CITY
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table KRIM_PND_NM_MT rename column TITLE_NM to PREFIX_NM
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_ADDR_MT rename column POSTAL_STATE_CD to STATE_PVC_CD
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_ADDR_MT rename column CITY_NM to CITY
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-09-15.sql
		-- 
		
		
		delete from KREW_USR_OPTN_T where PRSN_OPTN_ID like 'DocSearch%'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-09-16.sql
		-- 
		
		
		-- KULRICE-5360 add KIM entity fields
		alter table KRIM_ENTITY_NM_T add TITLE_NM VARCHAR(20)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_NM_T add NOTE_MSG VARCHAR(1024)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_NM_T add NM_CHNG_DT DATE
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table KRIM_ENTITY_ADDR_T add ATTN_LINE VARCHAR(45)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_ADDR_T add ADDR_FMT VARCHAR(256)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_ADDR_T add MOD_DT DATE DEFAULT SYSDATE
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_ADDR_T add VALID_DT DATE
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_ADDR_T add VALID_IND VARCHAR(1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_ADDR_T add NOTE_MSG VARCHAR(1024)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		alter table KRIM_ENTITY_BIO_T add NOTE_MSG VARCHAR(1024)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_ENTITY_BIO_T add GNDR_CHG_CD VARCHAR(20)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table KRIM_PND_NM_MT add TITLE_NM VARCHAR(20)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_NM_MT add NOTE_MSG VARCHAR(1024)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_NM_MT add NM_CHNG_DT DATE
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table KRIM_PND_ADDR_MT add ATTN_LINE VARCHAR(45)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_ADDR_MT add ADDR_FMT VARCHAR(256)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_ADDR_MT add MOD_DT DATE DEFAULT SYSDATE
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_ADDR_MT add VALID_DT DATE
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_ADDR_MT add VALID_IND VARCHAR(1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KRIM_PND_ADDR_MT add NOTE_MSG VARCHAR(1024)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-09-18.sql
		-- 
		
		
		alter table KREW_PPL_FLW_T modify(TYP_ID NULL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DECLARE
		c NUMBER;
		BEGIN
		select count(*) into c from all_constraints where CONSTRAINT_NAME = 'KREW_PPL_FLW_MBR_TC1' ;
		IF c>0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE KREW_PPL_FLW_MBR_T DROP CONSTRAINT KREW_PPL_FLW_MBR_TC1';
		ELSE
		DBMS_OUTPUT.PUT_LINE('KREW_PPL_FLW_MBR_TC1 does not exist, so not running statement to change/drop it.');
		END IF;
		END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KREW_PPL_FLW_MBR_T DROP COLUMN dlgt_frm_id
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- -----------------------------------------------------
		-- Table krew_ppl_flw_dlgt_t
		-- -----------------------------------------------------
		
		CREATE  TABLE krew_ppl_flw_dlgt_t (
		  ppl_flw_dlgt_id VARCHAR2(40) NOT NULL ,
		  ppl_flw_mbr_id VARCHAR2(40) NOT NULL ,
		  mbr_id VARCHAR2(40) NOT NULL ,
		  mbr_typ_cd VARCHAR2(1) NOT NULL ,
		  dlgn_typ_cd VARCHAR2(1) NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0 NOT NULL ,
		  PRIMARY KEY (ppl_flw_dlgt_id) ,
		  CONSTRAINT krew_ppl_flw_dlgt_fk1
		    FOREIGN KEY (ppl_flw_mbr_id )
		    REFERENCES krew_ppl_flw_mbr_t (ppl_flw_mbr_id ))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krew_ppl_flw_dlgt_ti1 ON krew_ppl_flw_dlgt_t (ppl_flw_mbr_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krew_ppl_flw_dlgt_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-09-26b.sql
		-- 
		
		
		-- KIM permissions
		insert into krcr_nmspc_t
		(nmspc_cd, nm, actv_ind, appl_id, ver_nbr, obj_id)
		values ('KR-RULE','Kuali Rules','Y','RICE',1,sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		insert into krim_perm_tmpl_t
		(perm_tmpl_id, nm, nmspc_cd, desc_txt, kim_typ_id, actv_ind, ver_nbr, obj_id)
		values ('RICE_KRMS_1',
		        'KRMS Agenda Permission','KR-RULE','View/Maintain Agenda',
		        (select kim_typ_id from krim_typ_t where nm = 'Namespace' and nmspc_cd = 'KR-NS'),
		        'Y',1,sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		insert into krim_perm_t
		(perm_id, perm_tmpl_id, nmspc_cd, nm, desc_txt, actv_ind, ver_nbr, obj_id)
		values ('RICE_KRMS_2',
		        (select perm_tmpl_id from krim_perm_tmpl_t where nm = 'KRMS Agenda Permission' and nmspc_cd = 'KR-RULE'),
		        'KR-RULE','Maintain KRMS Agenda','Allows creation and modification of agendas via the agenda editor','Y',1,sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		insert into krim_perm_attr_data_t
		(attr_data_id, perm_id, kim_typ_id, kim_attr_defn_id, attr_val, ver_nbr, obj_id)
		values ('RICE_KRMS_3',
		        (select perm_id from krim_perm_t where nm = 'Maintain KRMS Agenda' and nmspc_cd = 'KR-RULE'),
		        (select kim_typ_id from krim_typ_t where nm = 'Namespace' and nmspc_cd = 'KR-NS'),
		        (select kim_attr_defn_id from krim_attr_defn_t where nm = 'namespaceCode'),
		        'KRMS_TEST',1,sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- KIM roles
		insert into krim_role_t
		(role_id, role_nm, nmspc_cd, desc_txt, kim_typ_id, actv_ind, last_updt_dt, obj_id)
		values ('RICE_KRMS_4',
		        'Kuali Rules Management System Administrator',
		        'KR-RULE',
		        'This role maintains KRMS agendas and rules.',
		        (select kim_typ_id from krim_typ_t where nm = 'Default' and nmspc_cd = 'KUALI'),
		        'Y', current_date, sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		insert into krim_role_mbr_t
		(role_mbr_id, role_id, mbr_id, mbr_typ_cd, last_updt_dt, ver_nbr, obj_id)
		values ('RICE_KRMS_5',
		        (select role_id from krim_role_t where role_nm = 'Kuali Rules Management System Administrator' and nmspc_cd = 'KR-RULE'),
		        (select prncpl_id from krim_prncpl_t where prncpl_nm = 'admin'),
		        'P', current_date, 1, sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		insert into krim_role_perm_t
		(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
		values ('RICE_KRMS_6',
		        (select role_id from krim_role_t where role_nm = 'Kuali Rules Management System Administrator' and nmspc_cd = 'KR-RULE'),
		        (select perm_id from krim_perm_t where nm = 'Maintain KRMS Agenda' and nmspc_cd = 'KR-RULE'),
		        'Y', 1, sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		-- 
		-- 2011-09-26.sql
		-- 
		
		
		ALTER TABLE KREW_DOC_TYP_T DROP COLUMN CSTM_ACTN_LIST_ATTRIB_CLS_NM
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_T DROP COLUMN CSTM_ACTN_EMAIL_ATTRIB_CLS_NM
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_TYP_T DROP COLUMN CSTM_DOC_NTE_ATTRIB_CLS_NM
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-09-27.sql
		-- 
		
		
		-- Notification PeopleFlowActionType
		
		insert into krms_typ_t
		(typ_id, nm, nmspc_cd, srvc_nm, actv, ver_nbr)
		values ('1000', 'notificationPeopleFlowActionType', 'KRMS', 'notificationPeopleFlowActionTypeService', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- Approval PeopleFlowActionType
		
		insert into krms_typ_t
		(typ_id, nm, nmspc_cd, srvc_nm, actv, ver_nbr)
		values ('1001', 'approvalPeopleFlowActionType', 'KRMS_TEST', 'approvalPeopleFlowActionTypeService', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-09-30.sql
		-- 
		
		
		
		
		-- -----------------------------------------------------
		-- Table krms_cntxt_vld_agenda_t
		-- -----------------------------------------------------
		-- begin execute immediate 'drop table krms_cntxt_vld_agenda_t'; exception when others then null; end;
		
		CREATE  TABLE  krms_cntxt_vld_agenda_t (
		  cntxt_vld_agenda_id VARCHAR2(40)  NOT NULL ,
		  cntxt_id VARCHAR2(40)  NOT NULL ,
		  agenda_typ_id VARCHAR2(40)  NOT NULL ,
		  ver_nbr NUMBER(8) DEFAULT 0  NOT NULL ,
		  PRIMARY KEY (cntxt_vld_agenda_id) ,
		  -- CREATE INDEX krms_cntxt_vld_agenda_ti1 (cntxt_id ASC) ,
		  CONSTRAINT krms_cntxt_vld_agenda_fk1
		    FOREIGN KEY (cntxt_id )
		    REFERENCES krms_cntxt_t (cntxt_id ) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE INDEX krms_cntxt_vld_agenda_ti1 on krms_cntxt_vld_agenda_t (cntxt_id ASC)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		CREATE SEQUENCE krms_cntxt_vld_agenda_s INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-10-03.sql
		-- 
		
		
		alter table KREW_PPL_FLW_MBR_T add ACTN_RQST_PLCY_CD VARCHAR2(1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KREW_PPL_FLW_MBR_T add RSP_ID VARCHAR2(40) NOT NULL
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KREW_PPL_FLW_DLGT_T add ACTN_RQST_PLCY_CD VARCHAR2(1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		alter table KREW_PPL_FLW_DLGT_T add RSP_ID VARCHAR2(40) NOT NULL
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-10-21.sql
		-- 
		
		
		-- KULRICE-5348
		ALTER TABLE KREW_RULE_T RENAME COLUMN PREV_RULE_VER_NBR TO PREV_VER_RULE_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- KULRICE-4589
		UPDATE KRCR_PARM_T
		SET PARM_NM='NOTIFY_GROUPS',
		    PARM_DESC_TXT='Defines a group name (in the format "namespace:name") which contains members who should never receive "notifications" action requests from KEW.',
		    EVAL_OPRTR_CD='D'
		WHERE NMSPC_CD = 'KR-WKFLW'
		  AND CMPNT_CD = 'Notification'
		  AND PARM_NM = 'NOTIFY_EXCLUDED_USERS_IND'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-10-23.sql
		-- 
		
		
		alter table krcr_cmpnt_t add cmpnt_set_id varchar2(40)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		create table krcr_cmpnt_set_t (
		  cmpnt_set_id varchar2(40) not null,
		  last_updt_ts date not null,
		  chksm varchar2(40) not null,
		  ver_nbr number(8) default 0 not null,
		  primary key (cmpnt_set_id) )
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-10-24.sql
		-- 
		
		
		alter table krcr_cmpnt_t drop column cmpnt_set_id
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		create table krcr_drvd_cmpnt_t (
		  nmspc_cd varchar2(20) not null,
		  cmpnt_cd varchar2(100) not null,
		  nm varchar2(255),
		  cmpnt_set_id varchar2(40) not null,
		  primary key (nmspc_cd, cmpnt_cd))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-10-25.sql
		-- 
		
		
		update KREW_RULE_ATTR_T set RULE_ATTR_TYP_CD='DocumentSecurityAttribute' where RULE_ATTR_TYP_CD='DocumentSearchSecurityFilterAttribute'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		update KRCR_PARM_T set CMPNT_CD='DocumentSearch' where CMPNT_CD='DocSearchCriteriaDTO'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into KRCR_CMPNT_T (NMSPC_CD, CMPNT_CD, NM, ACTV_IND, OBJ_ID, VER_NBR)
		values ('KR-WKFLW', 'DocumentSearch', 'Document Search', 'Y', sys_guid(), 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-10-26.sql
		-- 
		
		
		insert into KRCR_CMPNT_T (NMSPC_CD, CMPNT_CD, NM, ACTV_IND, OBJ_ID, VER_NBR)
		VALUES ('KR-WKFLW', 'Rule', 'Rule', 'Y', sys_guid(), 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update KRCR_CMPNT_T set cmpnt_cd='EDocLite' where cmpnt_cd like 'EDocLite%'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-10-27.sql
		-- 
		
		
		-- create a KIM permission for the Cache Administrator screen/controller
		
		insert into krim_perm_t
		(perm_id, perm_tmpl_id, nmspc_cd, nm, desc_txt, actv_ind, ver_nbr, obj_id)
		values ('RICE_20_1',
		        (select perm_tmpl_id from krim_perm_tmpl_t where nm = 'Use Screen' and nmspc_cd = 'KR-NS'),
		        'KR-SYS','Use Cache Adminstration Screen','Allows use of the cache administration screen','Y',1,sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		insert into krim_perm_attr_data_t
		(attr_data_id, perm_id, kim_typ_id, kim_attr_defn_id, attr_val, ver_nbr, obj_id)
		values ('RICE_20_2',
		        (select perm_id from krim_perm_t where nm = 'Use Cache Adminstration Screen' and nmspc_cd = 'KR-SYS'),
		        (select kim_typ_id from krim_typ_t where nm = 'Namespace or Action' and nmspc_cd = 'KR-NS'),
		        (select kim_attr_defn_id from krim_attr_defn_t where nm = 'actionClass'),
		        'org.kuali.rice.core.web.cache.CacheAdminController',1,sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		insert into krim_role_perm_t
		(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
		values ('RICE_20_3',
		        (select role_id from krim_role_t where role_nm = 'Technical Administrator' and nmspc_cd = 'KR-SYS'),
		        (select perm_id from krim_perm_t where nm = 'Use Cache Adminstration Screen' and nmspc_cd = 'KR-SYS'),
		        'Y', 1, sys_guid())
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-11-03.sql
		-- 
		
		
		-- Make typ_id column optional where appropriate
		
		ALTER TABLE krms_rule_t MODIFY typ_id varchar2(40) null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE krms_agenda_t MODIFY typ_id varchar2(40) null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE krms_cntxt_t MODIFY typ_id varchar2(40) null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-11-14.sql
		-- 
		
		
		-- Drop foreign key constraint on krms_prop_t table
		alter table KRMS_PROP_T drop constraint KRMS_PROP_FK1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-11-23.sql
		-- 
		
		
		-- give PeopleFlows friendlier names
		
		update krms_typ_t set nm='Notify PeopleFlow' where typ_id = '1000'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_typ_t set nm='Route to PeopleFlow' where typ_id = '1001'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- remove constraint that is preventing compound props from persisting
		
		alter table krms_cmpnd_prop_props_t modify seq_no NUMBER(5) null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-11-28.sql
		-- 
		
		
		update krim_perm_t
		   set nmspc_cd = 'KRMS_TEST'
		 where nm = 'Maintain KRMS Agenda'
		   and nmspc_cd = 'KR-RULE'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		delete from krim_perm_attr_data_t
		 where perm_id = (select perm_id from krim_perm_t where nm = 'Maintain KRMS Agenda' and nmspc_cd = 'KRMS_TEST')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-11-29.sql
		-- 
		
		
		alter table KREW_RTE_NODE_T modify ACTVN_TYP varchar(1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-12-07.sql
		-- 
		
		
		
		-- correct fields in krms test data
		update krms_prop_t set cmpnd_op_cd = '&' where cmpnd_op_cd = 'a'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_cmpnd_prop_props_t set seq_no = '2' where prop_id = 'P421C'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_cmpnd_prop_props_t set seq_no = '3' where prop_id = 'P421D'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_cmpnd_prop_props_t set seq_no = '3' where prop_id = 'P502C'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- move seq_no column from krms_cmpnd_prop_props_t pivot table to krms_prop_t table.
		alter table krms_prop_t add (cmpnd_seq_no decimal(5,0) default null)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		update krms_prop_t set krms_prop_t.cmpnd_seq_no = (select seq_no from krms_cmpnd_prop_props_t where prop_id = krms_prop_t.prop_id)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		alter table krms_cmpnd_prop_props_t drop (seq_no)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2011-12-21.sql
		-- 
		
		
		UPDATE KRCR_NMSPC_T SET APPL_ID = NULL WHERE NMSPC_CD = 'KUALI'
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRCR_NMSPC_T VALUES ('KR-KRAD', sys_guid(), 1, 'Kuali Rapid Application Development', 'Y', 'RICE')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'viewId', null, 'Y', 'KR-KRAD', 'org.kuali.rice.kim.bo.impl.KimAttributes')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'actionEvent', null, 'Y', 'KR-KRAD', 'org.kuali.rice.kim.bo.impl.KimAttributes')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'collectionPropertyName', null, 'Y', 'KR-KRAD', 'org.kuali.rice.kim.bo.impl.KimAttributes')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'fieldId', null, 'Y', 'KR-KRAD', 'org.kuali.rice.kim.bo.impl.KimAttributes')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'groupId', null, 'Y', 'KR-KRAD', 'org.kuali.rice.kim.bo.impl.KimAttributes')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'widgetId', null, 'Y', 'KR-KRAD', 'org.kuali.rice.kim.bo.impl.KimAttributes')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'actionId', null, 'Y', 'KR-KRAD', 'org.kuali.rice.kim.bo.impl.KimAttributes')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View', 'viewPermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View Edit Mode', 'viewEditModePermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View Field', 'viewFieldPermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View Group', 'viewGroupPermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View Widget', 'viewWidgetPermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View Action', 'viewActionPermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View Line Field', 'viewLineFieldPermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', ''))) + 1) from KRIM_TYP_T where kim_typ_id is not NULL and REGEXP_LIKE(kim_typ_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(kim_typ_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'View Line Action', 'viewLineActionPermissionTypeService', 'Y', 'KR-KRAD')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Edit Mode'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'b', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Edit Mode'), '10', 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Field'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'b', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Field'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='fieldId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'c', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Field'), '6', 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Group'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'b', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Group'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='groupId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'c', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Group'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='fieldId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Widget'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'b', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Widget'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='widgetId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'b', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='actionId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'c', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='actionEvent'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Field'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'b', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Field'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='groupId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'c', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Field'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='collectionPropertyName'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'd', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Field'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='fieldId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'e', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Field'), '6', 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='viewId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'b', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='groupId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'c', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='collectionPropertyName'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'd', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='actionId'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'e', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Action'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-KRAD' and NM='actionEvent'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Open View', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Edit View', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Use View', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Edit Mode'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'View Field', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Field'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Edit Field', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Field'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'View Group', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Group'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Edit Group', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Group'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'View Widget', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Widget'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Edit Widget', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Widget'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Perform Action', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Action'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'View Line', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Group'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Edit Line', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Group'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'View Line Field', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Field'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Edit Line Field', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Field'), 'Y')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-KRAD', 'Perform Line Action', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-KRAD' and NM='View Line Action'), 'Y')
		]]></sql>
		
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-04.sql
		-- 
		
		
		update KRMS_TERM_SPEC_T set TYP = 'java.lang.String' where TYP = 'T2'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
			
		update KRMS_TERM_SPEC_T set TYP = 'java.lang.String' where TYP = 'T1'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		update KRMS_TERM_SPEC_T set TYP = 'java.lang.Integer' where TYP = 'T6'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-05.sql
		-- 
		
		
		ALTER TABLE KRMS_CNTXT_VLD_ACTN_T RENAME CONSTRAINT KRMS_CNTXT_VLD_ACTN_FK1 TO KRMS_CNTXT_VLD_ACTN_TYP_FK1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER INDEX KRMS_CNTXT_VLD_ACTN_TI1 RENAME TO KRMS_CNTXT_VLD_ACTN_TYP_TI1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		RENAME KRMS_CNTXT_VLD_ACTN_S TO KRMS_CNTXT_VLD_ACTN_TYP_S
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRMS_CNTXT_VLD_ACTN_T RENAME TO KRMS_CNTXT_VLD_ACTN_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KRMS_CNTXT_VLD_AGENDA_T RENAME CONSTRAINT KRMS_CNTXT_VLD_AGENDA_FK1 TO KRMS_CNTXT_VLD_AGENDA_TYP_FK1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER INDEX KRMS_CNTXT_VLD_AGENDA_TI1 RENAME TO KRMS_CNTXT_VLD_AGENDA_TYP_TI1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		RENAME KRMS_CNTXT_VLD_AGENDA_S TO KRMS_CNTXT_VLD_AGENDA_TYP_S
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRMS_CNTXT_VLD_AGENDA_T RENAME TO KRMS_CNTXT_VLD_AGENDA_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KRMS_CNTXT_VLD_RULE_T RENAME CONSTRAINT KRMS_CNTXT_VLD_RULE_FK1 TO KRMS_CNTXT_VLD_RULE_TYP_FK1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER INDEX KRMS_CNTXT_VLD_RULE_TI1 RENAME TO KRMS_CNTXT_VLD_RULE_TYP_TI1
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		RENAME KRMS_CNTXT_VLD_RULE_S TO KRMS_CNTXT_VLD_RULE_TYP_S
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRMS_CNTXT_VLD_RULE_T RENAME TO KRMS_CNTXT_VLD_RULE_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		ALTER TABLE KRMS_CNTXT_VLD_RULE_TYP_T RENAME COLUMN RULE_ID TO RULE_TYP_ID
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		UPDATE KRMS_AGENDA_T SET TYP_ID = NULL WHERE TYP_ID = 'T5'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		UPDATE KRMS_RULE_T SET TYP_ID = NULL
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		DELETE FROM KRMS_CNTXT_VLD_RULE_TYP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-06.sql
		-- 
		
		
		-- KULRICE-6299: New DB index to improve action list performance
		create index KREW_ACTN_ITM_TI6 on KREW_ACTN_ITM_T (DLGN_TYP, DLGN_PRNCPL_ID, DLGN_GRP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-11.sql
		-- 
		
		
		-- KULRICE-6452
		
		drop table krms_cntxt_vld_event_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		drop sequence krms_cntxt_vld_event_s
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		rename krms_cntxt_term_spec_prereq_s to krms_cntxt_vld_term_spec_s
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-18.sql
		-- 
		
		
		alter table KREW_DOC_HDR_T drop column RTE_LVL_MDFN_DT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-19b.sql
		-- 
		
		
		
		--
		-- KULRICE-5856: KRNS_DOC_HDR_T.FDOC_DESC column is only 40 char
		--
		
		ALTER TABLE KRNS_DOC_HDR_T MODIFY (FDOC_DESC varchar2(255))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KULRICE-6463: New DB Indexes for KIM Permission checks
		--
		
		CREATE INDEX KRIM_ROLE_PERM_TI2 ON KRIM_ROLE_PERM_T (PERM_ID, ACTV_IND)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRIM_PERM_TI1 ON KRIM_PERM_T (PERM_TMPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRIM_PERM_TI2 ON KRIM_PERM_T (PERM_TMPL_ID, ACTV_IND)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRIM_PERM_TMPL_TI1 ON KRIM_PERM_TMPL_T (NMSPC_CD, NM)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRIM_ROLE_MBR_TI2 ON KRIM_ROLE_MBR_T (role_id, mbr_id, mbr_typ_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KRIM_ROLE_MBR_TI3 ON KRIM_ROLE_MBR_T (mbr_id, mbr_typ_cd)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--
		-- KRMS Sample (and production) Data
		--
		
		---- If you should want to clean out your KRMS tables:
		delete from  krms_cntxt_vld_rule_typ_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_cntxt_vld_func_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_spec_ctgry_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_func_ctgry_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_ctgry_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_func_parm_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_func_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_parm_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_rslvr_parm_spec_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_cntxt_vld_term_spec_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_rslvr_input_spec_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_rslvr_attr_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_rslvr_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_term_spec_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_prop_parm_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_cmpnd_prop_props_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_agenda_attr_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_cntxt_vld_actn_typ_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_cntxt_vld_agenda_typ_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_cntxt_attr_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_rule_attr_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_agenda_itm_t set when_true=null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_agenda_itm_t set when_false=null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_agenda_itm_t set always=null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_agenda_itm_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_actn_attr_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_actn_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_typ_attr_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_attr_defn_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_agenda_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krms_rule_t set prop_id=null
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_prop_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_rule_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_typ_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from  krms_cntxt_t
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		delete from krcr_nmspc_t where obj_id = '5a83c912-94b9-4b4d-ac3f-88c53380a4a3'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--
		-- Copyright 2005-2012 The Kuali Foundation
		--
		--
		
		-- Notification PeopleFlowActionType
		
		insert into krms_typ_t
		(typ_id, nm, nmspc_cd, srvc_nm, actv, ver_nbr)
		values ('1000', 'Notify PeopleFlow', 'KR-RULE', 'notificationPeopleFlowActionTypeService', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- Approval PeopleFlowActionType
		
		insert into krms_typ_t
		(typ_id, nm, nmspc_cd, srvc_nm, actv, ver_nbr)
		values ('1001', 'Route to PeopleFlow', 'KR-RULE', 'approvalPeopleFlowActionTypeService', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- add a PeopleFlow attribute to the PeopleFlow types
		insert into krms_attr_defn_t (ATTR_DEFN_ID, NM, NMSPC_CD, LBL, CMPNT_NM, DESC_TXT)
		values ('1000', 'peopleFlowId', 'KR-RULE', 'PeopleFlow', null,
		'An identifier for a PeopleFlow')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krms_typ_attr_t (TYP_ATTR_ID, SEQ_NO, TYP_ID, ATTR_DEFN_ID) values ('1000', 1, '1000', '1000')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krms_typ_attr_t (TYP_ATTR_ID, SEQ_NO, TYP_ID, ATTR_DEFN_ID) values ('1001', 1, '1001', '1000')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- General validation rule type
		insert into krms_typ_t (typ_id, nm, nmspc_cd, srvc_nm, actv, ver_nbr) values('1002', 'Validation Rule', 'KR-RULE', 'validationRuleTypeService', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- General validation action type
		insert into krms_typ_t (typ_id, nm, nmspc_cd, srvc_nm, actv, ver_nbr) values('1003', 'Validation Action', 'KR-RULE', 'validationActionTypeService', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- Invalid rule
		insert into krms_attr_defn_t (attr_defn_id, nm, nmspc_cd, lbl, actv, cmpnt_nm, ver_nbr, desc_txt) values ('1001', 'Invalid Rule', 'KR-RULE', 'Invalid Rule', 'Y', null, 1, 'If true, execute the action')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- Valid rule
		insert into krms_attr_defn_t (attr_defn_id, nm, nmspc_cd, lbl, actv, cmpnt_nm, ver_nbr, desc_txt) values ('1002', 'Valid Rule', 'KR-RULE', 'Valid Rule', 'Y', null, 1, 'If false, execute the action')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- warning action
		insert into krms_attr_defn_t (attr_defn_id, nm, nmspc_cd, lbl, actv, cmpnt_nm, ver_nbr, desc_txt) values ('1003', 'Warning Action', 'KR-RULE', 'Warning Action', 'Y', null, 1, 'Warning')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- error action
		insert into krms_attr_defn_t (attr_defn_id, nm, nmspc_cd, lbl, actv, cmpnt_nm, ver_nbr, desc_txt) values ('1004', 'Error Action', 'KR-RULE', 'Error Action', 'Y', null, 1, 'Error')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- action message
		insert into krms_attr_defn_t (attr_defn_id, nm, nmspc_cd, lbl, actv, cmpnt_nm, ver_nbr, desc_txt) values ('1005', 'Action Message', 'KR-RULE', 'Action Message', 'Y', null, 1, 'Message validation action returns')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-- The General action type attribute
		insert into krms_typ_attr_t (typ_attr_id, seq_no, typ_id, attr_defn_id, actv, ver_nbr) values ('1004', 1, '1003', '1003', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krms_typ_attr_t (typ_attr_id, seq_no, typ_id, attr_defn_id, actv, ver_nbr) values ('1005', 2, '1003', '1004', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krms_typ_attr_t (typ_attr_id, seq_no, typ_id, attr_defn_id, actv, ver_nbr) values ('1006', 3, '1003', '1005', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		-- change permisison to use new krms test namespace
		update krim_perm_attr_data_t set attr_val = 'KR-RULE-TEST' where attr_val = 'KRMS_TEST'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		update krim_perm_t
		   set nmspc_cd = 'KR-RULE-TEST'
		 where nm = 'Maintain KRMS Agenda'
		   and nmspc_cd = 'KR-RULE'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		update krim_perm_t
		   set nmspc_cd = 'KR-RULE-TEST'
		 where nm = 'Maintain KRMS Agenda'
		   and nmspc_cd = 'KRMS_TEST'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		delete from krim_perm_attr_data_t
		 where perm_id = (select perm_id from krim_perm_t where nm = 'Maintain KRMS Agenda' and nmspc_cd = 'KRMS_TEST')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-19c.sql
		-- 
		
		
		-- KULRICE-6537 - increase size of MBR_NM field
		ALTER TABLE KRIM_PND_GRP_MBR_T MODIFY (MBR_NM varchar2(100))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		
		
		
		-- 
		-- 2012-01-19.sql
		-- 
		
		
		CREATE TABLE KRCR_STYLE_T
		(
		      STYLE_ID VARCHAR2(40)
		        , NM VARCHAR2(200) NOT NULL
		        , XML CLOB NOT NULL
		        , ACTV_IND NUMBER(1) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KRCR_STYLE_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT INTO KRCR_STYLE_T SELECT STYLE_ID, NM, XML, ACTV_IND, VER_NBR, OBJ_ID FROM KREW_STYLE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_STYLE_T RENAME TO OLD_KREW_STYLE_T 
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRCR_STYLE_T
		    ADD CONSTRAINT KRCR_STYLE_TP1
		PRIMARY KEY (STYLE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		--
		-- 2012-01-24.sql
		--
		
		
		-- unset type on My Fabulous Agenda since the required attribute isn't specified
		UPDATE krms_agenda_t SET TYP_ID=null WHERE AGENDA_ID='T1000'
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		-- PeopleFlow Name
		insert into krms_attr_defn_t (attr_defn_id, nm, nmspc_cd, lbl, actv, cmpnt_nm, ver_nbr, desc_txt)
		values ('1006', 'peopleFlowName', 'KR_RULE', 'PeopleFlow Name', 'Y', null, 1, 'PeopleFlow Name')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krms_typ_attr_t (typ_attr_id, seq_no, typ_id, attr_defn_id, actv, ver_nbr)
		values ('1007', 3, '1000', '1006', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krms_typ_attr_t (typ_attr_id, seq_no, typ_id, attr_defn_id, actv, ver_nbr)
		values ('1008', 3, '1001', '1006', 'Y', 1)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		
		--
		-- 2010-01-31.sql
		--
		
		
		-- KULRICE-6481
		ALTER TABLE KRIM_ROLE_PERM_T MODIFY (ROLE_ID NOT NULL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KRIM_ROLE_PERM_T MODIFY (PERM_ID NOT NULL)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_perm_t
		(perm_id, perm_tmpl_id, nmspc_cd, nm, desc_txt, actv_ind, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', ''))) + 1) from krim_perm_t where perm_id is not NULL and REGEXP_LIKE(perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', '')) < 10000),
		        (select perm_tmpl_id from krim_perm_tmpl_t where nm = 'Create / Maintain Record(s)' and nmspc_cd = 'KR-NS'),
		        'KR-NS','Create Term Maintenance Document','Allows user to create a new Term maintainence document','Y',1,
		        '0dbce939-4f22-4e9b-a4bb-1615c0f411a2')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_perm_attr_data_t
		(attr_data_id, perm_id, kim_typ_id, kim_attr_defn_id, attr_val, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', ''))) + 1) from krim_perm_attr_data_t where attr_data_id is not NULL and REGEXP_LIKE(attr_data_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', '')) < 10000),
		        (select perm_id from krim_perm_t where nm = 'Create Term Maintenance Document' and nmspc_cd = 'KR-NS'),
		        (select kim_typ_id from krim_typ_t where nm = 'Document Type & Existing Records Only' and nmspc_cd = 'KR-NS'),
		        (select kim_attr_defn_id from krim_attr_defn_t where nm = 'documentTypeName'),
		        'TermMaintenanceDocument',1,'aa1d1400-6155-4819-8bad-e5dd81f9871b')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_role_perm_t
		(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', ''))) + 1) from krim_role_perm_t where role_perm_id is not NULL and REGEXP_LIKE(role_perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', '')) < 10000),
		        (select role_id from krim_role_t where role_nm = 'Kuali Rules Management System Administrator' and nmspc_cd = 'KR-RULE'),
		        (select perm_id from krim_perm_t where nm = 'Create Term Maintenance Document' and nmspc_cd = 'KR-NS'),
		        'Y', 1, '45f8f55e-23d9-4278-ade8-ddfc870852e6')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_perm_t
		(perm_id, perm_tmpl_id, nmspc_cd, nm, desc_txt, actv_ind, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', ''))) + 1) from krim_perm_t where perm_id is not NULL and REGEXP_LIKE(perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', '')) < 10000),
		        (select perm_tmpl_id from krim_perm_tmpl_t where nm = 'Create / Maintain Record(s)' and nmspc_cd = 'KR-NS'),
		        'KR-NS','Create Context Maintenance Document','Allows user to create a new Context maintainence document','Y',1,
		        'cefeed6d-b5e2-40aa-9034-137db317b532')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_perm_attr_data_t
		(attr_data_id, perm_id, kim_typ_id, kim_attr_defn_id, attr_val, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', ''))) + 1) from krim_perm_attr_data_t where attr_data_id is not NULL and REGEXP_LIKE(attr_data_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', '')) < 10000),
		        (select perm_id from krim_perm_t where nm = 'Create Context Maintenance Document' and nmspc_cd = 'KR-NS'),
		        (select kim_typ_id from krim_typ_t where nm = 'Document Type & Existing Records Only' and nmspc_cd = 'KR-NS'),
		        (select kim_attr_defn_id from krim_attr_defn_t where nm = 'documentTypeName'),
		        'ContextMaintenanceDocument',1,'c43bc7f5-949e-4a85-b173-6a53d81f2762')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_role_perm_t
		(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', ''))) + 1) from krim_role_perm_t where role_perm_id is not NULL and REGEXP_LIKE(role_perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', '')) < 10000),
		        (select role_id from krim_role_t where role_nm = 'Kuali Rules Management System Administrator' and nmspc_cd = 'KR-RULE'),
		        (select perm_id from krim_perm_t where nm = 'Create Context Maintenance Document' and nmspc_cd = 'KR-NS'),
		        'Y', 1, 'cd7cbc67-c0b2-4785-afa8-8c8d073b78df')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_perm_t
		(perm_id, perm_tmpl_id, nmspc_cd, nm, desc_txt, actv_ind, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', ''))) + 1) from krim_perm_t where perm_id is not NULL and REGEXP_LIKE(perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', '')) < 10000),
		        (select perm_tmpl_id from krim_perm_tmpl_t where nm = 'Create / Maintain Record(s)' and nmspc_cd = 'KR-NS'),
		        'KR-NS','Create TermSpecification Maintenance Document','Allows user to create a new TermSpecification maintainence document','Y',1,
		        '02bd9acd-48d9-4fec-acbd-6a441c5ea8c2')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_perm_attr_data_t
		(attr_data_id, perm_id, kim_typ_id, kim_attr_defn_id, attr_val, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', ''))) + 1) from krim_perm_attr_data_t where attr_data_id is not NULL and REGEXP_LIKE(attr_data_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', '')) < 10000),
		        (select perm_id from krim_perm_t where nm = 'Create TermSpecification Maintenance Document' and nmspc_cd = 'KR-NS'),
		        (select kim_typ_id from krim_typ_t where nm = 'Document Type & Existing Records Only' and nmspc_cd = 'KR-NS'),
		        (select kim_attr_defn_id from krim_attr_defn_t where nm = 'documentTypeName'),
		        'TermSpecificationMaintenanceDocument',1,'d3e373ca-296b-4834-bd66-ba159ebe733a')
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		insert into krim_role_perm_t
		(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
		values ((select (max(TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', ''))) + 1) from krim_role_perm_t where role_perm_id is not NULL and REGEXP_LIKE(role_perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', '')) < 10000),
		        (select role_id from krim_role_t where role_nm = 'Kuali Rules Management System Administrator' and nmspc_cd = 'KR-RULE'),
		        (select perm_id from krim_perm_t where nm = 'Create TermSpecification Maintenance Document' and nmspc_cd = 'KR-NS'),
		        'Y', 1, '83a270a0-1cdb-4440-ab8b-41cd8afc41d9')
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		
		--
		-- KULRICE-6799: At one point (2.0-RC4 and before), the DOC_STAT_NM column was incorrectly set to 20 characters
		--               the original script (2011-06-17.sql, and the "final" script) has been corrected, but this script has
		--               been created in case that script had already been run.  Mysql scripts are unaffected by this, so there is no
		--               equivalent mysql script.
		--
		
		alter table KREW_DOC_TYP_APP_DOC_STAT_T modify (DOC_STAT_NM varchar2(64))
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		
		--
		-- 2012-02-23.sql
		--
		
		--
		-- KULRICE-6811: Conversion of WorkflowFunctions to EDLFunctions in eDocLite stylesheets
		--
		
		UPDATE KRCR_STYLE_T set XML=replace(XML,'org.kuali.rice.kew.edl.WorkflowFunctions','org.kuali.rice.edl.framework.util.EDLFunctions')
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		
		-----------------------------------------------------------------------------
		-- FOREIGN KEY CONSTRAINTS IMPACTED BY CHANGES
		-----------------------------------------------------------------------------
		ALTER TABLE KREW_RULE_T
		    ADD CONSTRAINT KREW_RULE_TR1 FOREIGN KEY (RULE_EXPR_ID)
		    REFERENCES KREW_RULE_EXPR_T (RULE_EXPR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
			CREATE INDEX KRNS_NTE_TI1 ON KRNS_NTE_T ( RMT_OBJ_ID )
		]]></sql>
	</changeSet>
	<changeSet author="RICE20" id="RICE_SERVER_UPDATES_mysql" dbms="mysql">
		<sqlFile path="rice_20_final_mysql.sql" />
	</changeSet>


<changeSet author="RICE21" id="2012-02-27_oracle" dbms="oracle">
	<sql><![CDATA[
ALTER TABLE
  KRIM_GRP_MBR_T
MODIFY
   (
    MBR_ID VARCHAR2(40) NOT NULL,
    GRP_ID VARCHAR2(40) NOT NULL,
    MBR_TYP_CD CHAR(1) NOT NULL
   );

ALTER TABLE
   KRIM_ROLE_MBR_T
MODIFY
   (
    MBR_ID VARCHAR2(40) NOT NULL,
    ROLE_ID VARCHAR2(40) NOT NULL,
    MBR_TYP_CD CHAR(1) NOT NULL
   );
	]]></sql>
</changeSet>
<changeSet author="RICE21" id="2012-03-05_oracle" dbms="oracle">
	<sql><![CDATA[
UPDATE KREW_DOC_TYP_T SET LBL = 'Undefined' WHERE LBL is null;
ALTER TABLE KREW_DOC_TYP_T MODIFY (LBL NOT NULL);
	]]></sql>
</changeSet>
<changeSet author="RICE21" id="2012-03-13_oracle" dbms="oracle">
	<sql><![CDATA[
		ALTER TABLE krim_entity_cache_t MODIFY (PRSN_NM VARCHAR2(255))		
	]]></sql>
</changeSet>
<changeSet author="RICE21" id="2012-03-20_oracle" dbms="oracle">
	<sql><![CDATA[
		ALTER TABLE krew_doc_typ_plcy_reln_t MODIFY (PLCY_VAL VARCHAR2(1024))
	]]></sql>
</changeSet>

<changeSet author="RICE21" id="2012-03-28_oracle" dbms="oracle">
	<sql><![CDATA[
-- add 'appDocStatus' attr definition
INSERT INTO KRIM_ATTR_DEFN_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', ''))) + 1) from KRIM_ATTR_DEFN_T where KIM_ATTR_DEFN_ID is not NULL and REGEXP_LIKE(KIM_ATTR_DEFN_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_ATTR_DEFN_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'appDocStatus', null, 'Y', 'KR-WKFLW', 'org.kuali.rice.kim.bo.impl.KimAttributes')
;

-- assign it to 'Document Type & Routing Node or State' type
INSERT INTO KRIM_TYP_ATTR_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_ATTR_T where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'a', (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-SYS' and NM='Document Type & Routing Node or State'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD='KR-WKFLW' and NM='appDocStatus'), 'Y')
;

-- create Recall permission template
INSERT INTO KRIM_PERM_TMPL_T VALUES ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', ''))) + 1) from krim_perm_tmpl_t where perm_tmpl_id is not NULL and REGEXP_LIKE(perm_tmpl_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_tmpl_id, '[^0-9]', '')) < 10000), sys_guid(), 1, 'KR-WKFLW', 'Recall Document', null, (select kim_typ_id from krim_typ_t where NMSPC_CD='KR-SYS' and NM='Document Type & Routing Node or State'), 'Y')
	]]></sql>
</changeSet>

<changeSet author="RICE21" id="2012-04-04_oracle" dbms="oracle">
	<sql><![CDATA[
	alter table KREW_RULE_ATTR_T add constraint KREW_RULE_ATTR_TC1 unique(NM)
	]]></sql>
</changeSet>

<changeSet author="RICE21" id="2012-04-11_oracle" dbms="oracle">
	<sql><![CDATA[
-- insert Recall permission for initiators
INSERT INTO KRIM_PERM_T (PERM_ID, OBJ_ID, VER_NBR, PERM_TMPL_ID, NMSPC_CD, NM) values ((select (max(TO_NUMBER(REGEXP_REPLACE(PERM_ID, '[^0-9]', ''))) + 1) from KRIM_PERM_T where PERM_ID is not NULL and REGEXP_LIKE(PERM_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(PERM_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, (select PERM_TMPL_ID from KRIM_PERM_TMPL_T where NMSPC_CD = 'KR-WKFLW' and NM = 'Recall Document'), 'KR-WKFLW', 'Recall Document')
;
-- define document type wildcard for permission
INSERT INTO KRIM_PERM_ATTR_DATA_T (ATTR_DATA_ID, OBJ_ID, VER_NBR, PERM_ID, KIM_TYP_ID, KIM_ATTR_DEFN_ID, ATTR_VAL) values ((select (max(TO_NUMBER(REGEXP_REPLACE(ATTR_DATA_ID, '[^0-9]', ''))) + 1) from KRIM_PERM_ATTR_DATA_T where ATTR_DATA_ID is not NULL and REGEXP_LIKE(ATTR_DATA_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(ATTR_DATA_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, (select PERM_ID from KRIM_PERM_T where NMSPC_CD = 'KR-WKFLW' and NM='Recall Document'), (select KIM_TYP_ID from KRIM_PERM_TMPL_T where NMSPC_CD = 'KR-WKFLW' and NM = 'Recall Document'), (select KIM_ATTR_DEFN_ID from KRIM_ATTR_DEFN_T where NMSPC_CD = 'KR-WKFLW' and NM = 'documentTypeName'), '*')
;
-- associate Recall permission with initiator derived role
INSERT INTO KRIM_ROLE_PERM_T (ROLE_PERM_ID, OBJ_ID, VER_NBR, ROLE_ID, PERM_ID, ACTV_IND) values ((select (max(TO_NUMBER(REGEXP_REPLACE(ROLE_PERM_ID, '[^0-9]', ''))) + 1) from KRIM_ROLE_PERM_T where ROLE_PERM_ID is not NULL and REGEXP_LIKE(ROLE_PERM_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(ROLE_PERM_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, (select ROLE_ID from KRIM_ROLE_T where ROLE_NM = 'Initiator' and NMSPC_CD = 'KR-WKFLW'), (select PERM_ID from KRIM_PERM_T where NMSPC_CD = 'KR-WKFLW' and NM='Recall Document'), 'Y')
;
	]]></sql>
</changeSet>


<changeSet author="RICE21" id="2012-04-12_oracle" dbms="oracle">
	<sql><![CDATA[
-- create a Kim Type wired to the documentRouterRoleTypeService permission-derived role service
INSERT INTO KRIM_TYP_T (KIM_TYP_ID, OBJ_ID, VER_NBR, NM, SRVC_NM, ACTV_IND, NMSPC_CD) values ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ID, '[^0-9]', ''))) + 1) from KRIM_TYP_T where KIM_TYP_ID is not NULL and REGEXP_LIKE(KIM_TYP_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'Derived Role: Permission (Route Document)', 'documentRouterRoleTypeService', 'Y', 'KR-WKFLW')
;
-- define the Route Document derived role
INSERT INTO KRIM_ROLE_T (ROLE_ID, OBJ_ID, VER_NBR, ROLE_NM, NMSPC_CD, DESC_TXT, KIM_TYP_ID, ACTV_IND) values ((select (max(TO_NUMBER(REGEXP_REPLACE(ROLE_ID, '[^0-9]', ''))) + 1) from KRIM_ROLE_T where ROLE_ID is not NULL and REGEXP_LIKE(ROLE_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(ROLE_ID, '[^0-9]', '')) < 10000), sys_guid(), 1, 'Document Router', 'KR-WKFLW', 'This role derives its members from users with the Route Document permission for a given document type.', (select KIM_TYP_ID from KRIM_TYP_T where NM = 'Derived Role: Permission (Route Document)' and NMSPC_CD = 'KR-WKFLW'), 'Y')
;
	]]></sql>
</changeSet>

<changeSet author="RICE21" id="2012-04-16_oracle" dbms="oracle">
	<sql><![CDATA[
-- KULRICE-7128 wire kim type attribute 'qualifierResolverProvidedIdentifier' to Responsibility type
Insert into krim_typ_attr_t
(KIM_TYP_ATTR_ID,
OBJ_ID,
VER_NBR,
SORT_CD,
KIM_TYP_ID,
KIM_ATTR_DEFN_ID,
ACTV_IND)
VALUES
  ((select (max(TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', ''))) + 1) from  krim_typ_attr_t where KIM_TYP_ATTR_ID is not NULL and REGEXP_LIKE(KIM_TYP_ATTR_ID, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(KIM_TYP_ATTR_ID, '[^0-9]', '')) < 10000),
  '69FA55ACC2EE2598E0404F8189D86880',
  1,
  'e',
  7,
  46,
  'Y')
	]]></sql>
</changeSet>

<changeSet author="RICE21" id="2012-04-19_oracle" dbms="oracle">
	<sql><![CDATA[
CREATE TABLE KRNS_MAINT_DOC_ATT_LST_T  (
    ATT_ID      VARCHAR2(40) NOT NULL,
	DOC_HDR_ID	VARCHAR2(14) NOT NULL,
	ATT_CNTNT 	blob NOT NULL,
	FILE_NM   	VARCHAR2(150) NULL,
	CNTNT_TYP 	VARCHAR2(255) NULL,
	OBJ_ID    	VARCHAR2(36) NOT NULL,
	VER_NBR   	NUMBER(8) DEFAULT 0 NOT NULL,
	PRIMARY KEY(ATT_ID),
	CONSTRAINT KRNS_MAINT_DOC_ATT_LST_FK1 foreign key (DOC_HDR_ID) references KRNS_MAINT_DOC_T (DOC_HDR_ID)
)
;
ALTER TABLE KRNS_MAINT_DOC_ATT_LST_T
	ADD CONSTRAINT KRNS_MAINT_DOC_ATT_LST_TC0
	UNIQUE (OBJ_ID)
;
CREATE INDEX KRNS_MAINT_DOC_ATT_LST_TI1 on KRNS_MAINT_DOC_ATT_LST_T (DOC_HDR_ID)
;
CREATE SEQUENCE KRNS_MAINT_DOC_ATT_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER;
	]]></sql>
</changeSet>
<changeSet author="RICE21" id="2012-04-25_oracle" dbms="oracle">
	<sql><![CDATA[
update krms_attr_defn_t set nm='actionTypeCode' where attr_defn_id='1004'
;
update krms_attr_defn_t set nm='actionMessage' where attr_defn_id='1005'
;
update krms_attr_defn_t set nm='ruleTypeCode' where attr_defn_id='1001'
;

delete from krms_typ_attr_t where ATTR_DEFN_ID = '1002'
;
delete from krms_typ_attr_t where ATTR_DEFN_ID = '1003'
;
delete from krms_attr_defn_t where ATTR_DEFN_ID = '1002'
;
delete from krms_attr_defn_t where ATTR_DEFN_ID = '1003'
;
	]]></sql>
</changeSet>

<changeSet author="RICE21" id="2012-05-11_oracle" dbms="oracle">
	<sql><![CDATA[
insert into krim_perm_t
(perm_id, perm_tmpl_id, nmspc_cd, nm, desc_txt, actv_ind, ver_nbr, obj_id)
values ((select (max(TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', ''))) + 1) from krim_perm_t where perm_id is not NULL and REGEXP_LIKE(perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(perm_id, '[^0-9]', '')) < 10000),
        (select perm_tmpl_id from krim_perm_tmpl_t where nm = 'Send Ad Hoc Request' and nmspc_cd = 'KR-NS'),
        'KR-SYS','Send Complete Request Kuali Document','Authorizes users to send Complete ad hoc requests for Kuali Documents','Y',1,sys_guid())
;

insert into krim_perm_attr_data_t
(attr_data_id, perm_id, kim_typ_id, kim_attr_defn_id, attr_val, ver_nbr, obj_id)
values ((select (max(TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', ''))) + 1) from krim_perm_attr_data_t where attr_data_id is not NULL and REGEXP_LIKE(attr_data_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', '')) < 10000),
        (select perm_id from krim_perm_t where nm = 'Send Complete Request Kuali Document' and nmspc_cd = 'KR-SYS'),
        (select kim_typ_id from krim_typ_t where nm = 'Ad Hoc Review' and nmspc_cd = 'KR-WKFLW'),
        (select kim_attr_defn_id from krim_attr_defn_t where nm = 'documentTypeName'), 'KualiDocument',1,sys_guid())
;


insert into krim_perm_attr_data_t
(attr_data_id, perm_id, kim_typ_id, kim_attr_defn_id, attr_val, ver_nbr, obj_id)
values ((select (max(TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', ''))) + 1) from krim_perm_attr_data_t where attr_data_id is not NULL and REGEXP_LIKE(attr_data_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(attr_data_id, '[^0-9]', '')) < 10000),
        (select perm_id from krim_perm_t where nm = 'Send Complete Request Kuali Document' and nmspc_cd = 'KR-SYS'),
        (select kim_typ_id from krim_typ_t where nm = 'Ad Hoc Review' and nmspc_cd = 'KR-WKFLW'),
        (select kim_attr_defn_id from krim_attr_defn_t where nm = 'actionRequestCd'), 'C',1,sys_guid())
;

insert into krim_role_perm_t
(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
values ((select (max(TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', ''))) + 1) from krim_role_perm_t where role_perm_id is not NULL and REGEXP_LIKE(role_perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', '')) < 10000),
        (select role_id from krim_role_t where role_nm = 'Document Opener' and nmspc_cd = 'KR-NS'),
        (select perm_id from krim_perm_t where nm = 'Send Complete Request Kuali Document' and nmspc_cd = 'KR-SYS'),
        'Y', 1, sys_guid())
;

--insert into krim_role_perm_t
--(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
--values ((select (max(TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', ''))) + 1) from krim_role_perm_t where role_perm_id is not NULL and REGEXP_LIKE(role_perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', '')) < 10000),
--        (select role_id from krim_role_t where role_nm = 'Initiator or Reviewer' and nmspc_cd = 'KR-WKFLW'),
--        (select perm_id from krim_perm_t where nm = 'Edit Kuali ENROUTE Document Route Status Code R' and nmspc_cd = 'KUALI'),
--        'Y', 1, sys_guid())
--

insert into krim_role_perm_t
(role_perm_id, role_id, perm_id, actv_ind, ver_nbr, obj_id)
values ((select (max(TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', ''))) + 1) from krim_role_perm_t where role_perm_id is not NULL and REGEXP_LIKE(role_perm_id, '^[1-9][0-9]*$') and TO_NUMBER(REGEXP_REPLACE(role_perm_id, '[^0-9]', '')) < 10000),
        (select role_id from krim_role_t where role_nm = 'Initiator or Reviewer' and nmspc_cd = 'KR-WKFLW'),
        (select perm_id from krim_perm_t where nm = 'Cancel Document' and nmspc_cd = 'KUALI'),
        'Y', 1, sys_guid())
;
	]]></sql>
</changeSet>

<changeSet author="RICE21" id="2012-05-21_oracle" dbms="oracle">
	<sql><![CDATA[
	update krim_perm_attr_data_t set ATTR_VAL='org.kuali.rice.core.web.impex.IngesterAction' where ATTR_VAL='org.kuali.rice.kew.batch.web.IngesterAction'	
	]]></sql>
</changeSet>
	<changeSet author="RICE21" id="RICE_SERVER_UPDATES_mysql" dbms="mysql">
		<sqlFile path="rice_21_final_mysql.sql" />
	</changeSet>


</databaseChangeLog>
	
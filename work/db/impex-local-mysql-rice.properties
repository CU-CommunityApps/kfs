#
# Copyright 2012 The Kuali Foundation
# 
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.opensource.org/licenses/ecl2.php
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# DO NOT add comments before the blank line below, or they will disappear.

# -------------------------------------------------------------------
#
#  D A T A B A S E  S E T T I N G S
#
# -------------------------------------------------------------------
# JDBC connection settings. This is used by the JDBCToXML task that
# will create an XML database schema from JDBC metadata. These
# settings are also used by the SQL Ant task to initialize your
# Torque system with the generated SQL.
#
# sameJavaName
#   If true, the JDBC task will set the javaName attribute for the tables
#   and columns to be the same as SQL name.
# -------------------------------------------------------------------

torque.project = kfs

torque.schema.dir=../../rice
torque.sql.dir=${torque.schema.dir}/sql
torque.output.dir=${torque.schema.dir}/sql

import.torque.database = mysql
import.torque.database.driver = com.mysql.jdbc.Driver
import.torque.database.url = jdbc:mysql://localhost:3306/rice
import.torque.database.user=rice
import.torque.database.schema=rice
import.torque.database.password=rice



post.import.liquibase.project=kfs
# after data import, have impex run liquibase scripts in this directory
# the scripts will be run in file name order within this directory
post.import.liquibase.xml.directory=../../../rice-data

# Set this to the contexts you want to execute - non matching changeSets will not be run
# If left blank, all contexts will be run
post.import.liquibase.contexts=bootstrap,demo

# after liquibase import, ingest workflow XML from the specified location

# project from which the workflow should be imported
# The existence of this property will be used to determine whether to
# attempt to run the workflow XML import
post.import.workflow.project=kfs
# directory which contains the workflow XML - will be ingested in alpha order
post.import.workflow.xml.directory=../../../../workflow
# path to the ant script which launches the ingester
post.import.workflow.ingester.launcher.ant.script=../../../../../build.xml
# target in the ant script which launches the ingester
post.import.workflow.ingester.launcher.ant.target=import-workflow-xml
# property name which must be passed in to identify the directory for the stib which launches the ingester
post.import.workflow.ingester.launcher.ant.xml.directory.property=workflow.dir

post.import.workflow.ingester.jdbc.url.property=datasource.url
post.import.workflow.ingester.username.property=datasource.username
post.import.workflow.ingester.password.property=datasource.password
post.import.workflow.ingester.additional.command.line=-Ddatasource.ojb.platform=MySQL \
-Dbuild.environment=dev \
-Dbase.directory=${torque.output.dir} \
-Dis.local.build= \
-Ddev.mode= \
-Drice.dev.mode= \
-Drice.ksb.batch.mode=true \
-Ddont.filter.project.rice= \
-Ddont.filter.project.spring.ide=


# uncomment this to skip some of the larger (and mostly unnecessary) tables in the system
# #import.exclude.data.pattern=LD_LDGR_ENTR_T.xml,GL_BALANCE_T.xml,GL_ENTRY_T.xml,LD_LDGR_BAL_T.xml,GL_ACCT_BALANCES_T.xml

# set if you want to use the ant script to set up the users and schemas for the import
# see build.properties for the commands that will be executed

# sample for oracle:
#import.admin.user=kuluser_admin
#import.admin.password=kuluser_admin

# sample for mysql:
import.admin.user=root
import.admin.password=

# this may need to be different if (like in the case of MySQL) there is a schema name on the URL
# admin commands will not run with that URL if the schema has not yet been created
#import.admin.url = ${import.torque.database.url}
# if using MySQL, you will need to remove the schema/database name from the end as below
import.admin.url=jdbc:mysql://localhost:3306

# these are used by the bootstrapping mechanism on Oracle databases only
oracle.usermaint.user=kulusermaint
oracle.usermaint.password=kulusermaint



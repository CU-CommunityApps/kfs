<jmeterTestPlan version="1.2" properties="1.8">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test BC Document - Single User" enabled="true">
        <longProp name="ThreadGroup.start_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for localhost:8080/kfs-dev" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-dev</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-reg" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-reg</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-cnv" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-cnv</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <collectionProp name="CookieManager.cookies"/>
        </CookieManager>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Per-user/thread parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="2051813379">
              <stringProp name="-1231992094">khuntley</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Recorded HTTP requests " enabled="false"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logging in" enabled="true"/>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="CAS authentication" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (auto-redirect to login page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service path" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICEPATH</stringProp>
                <stringProp name="RegexExtractor.regex">service=http[^:]*://[^/]*/[^/]*(/.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.refname">service_path</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse CAS login ticket" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASTICKET</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;lt&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">cas_login_ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICE</stringProp>
                <stringProp name="RegexExtractor.regex">service=(.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.refname">service</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/login Login Results" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${service}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">service</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">https%3A%2F%2Ftest.kuali.org%2Fkuali-reg%2Fportal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${username}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">username</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">day</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${cas_login_ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lt</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">LT-369-tZ5DkSs8VFHLJZlw1LV3</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_server_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">BADVALUE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://([^/]*)/</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_server_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_uri_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://[^/]*/([^&quot;]*)&quot;;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_uri_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse ticket_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=.*ticket=([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Login Successful" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1294094723">Login successful.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
                <objProp>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>false</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                  <name>saveConfig</name>
                </objProp>
                <stringProp name="filename"></stringProp>
                <boolProp name="ResultCollector.error_logging">true</boolProp>
              </ResultCollector>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (Session recovery page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}${service_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ticket</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ST-966-22IiviZJbBafXfkgFkY9</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (should have user name on page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert user name present" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-974989074">${__javaScript(&apos;${username}&apos;)}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="CAS Login" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">service</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Login HOATES" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">hoates</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">LT-68-2UtWXhaifkt5hQVflhdQ</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ST-24-iwUE0roRK9c8JJPR9Fgy</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ticket</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Enter Fiscal Year Chart of Accounts and Account Number" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">43</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Org Pull Up" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PULLUP</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">31</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">27</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Menu Screen" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">41</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPushdown.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPushdown.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Org Push Down" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PUSHDOWN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPushDownOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PushDownCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">55</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPushDown.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPushDown.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPushDownOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PushDownCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">36</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Menu Screen" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">48</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Org Pull Up" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PULLUP</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Menu Screen" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">16</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Load Document - HOATES" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="CAS Login" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Login Khuntley" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">khuntley</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">LT-124-k1ggfpHfldC6MzZg8heM</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ST-38-aRhAj0eqQsGJn3YM5hXm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Backdoor Login HOATES" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">hoates</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backdoorId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2Fkew%2FPortal.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Workflow+Services</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">imageField</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/kew/Portal.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kew/Portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">hoates</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backdoorId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.login.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/ChartService.getByPrimaryId.dwr" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/dwr/exec/ChartService.getByPrimaryId.dwr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1
c0-scriptName=ChartService
c0-methodName=getByPrimaryId
c0-id=2064_1243020967414
c0-param0=string:BL
xml=true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">callCount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1
c0-scriptName=AccountService
c0-methodName=getByPrimaryIdWithCaching
c0-id=1118_1243020977317
c0-param0=string:BL
c0-param1=string:2931476
xml=true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">callCount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Enter Fiscal Year Chart and Account" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">XXXXX RESEARCH-XXXXX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">69</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Load Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pickListMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">mainWindow</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">docHandler</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;document.documentHeader.documentNumber&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">documentNumber</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">routeHeaderId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Click Expenditures Tab - Apply Adjustments" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">mainWindow</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction 2010 BL 2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BAL FORWARD</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">TRANSFER IN</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">EX</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUM SES SAL</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUPP EXP</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FRNG BEN CST</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FICA</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DH</stringProp>
                    <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newNote.noteText</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.name">methodToCall.save.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">methodToCall.save.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">returnToActionList</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">session</stringProp>
                    <stringProp name="Argument.name">documentWebScope</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">routeHeaderId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">mainWindow</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction 2010 BL 2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BAL FORWARD</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">TRANSFER IN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">EX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUM SES SAL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUPP EXP</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FRNG BEN CST</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FICA</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DH</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newNote.noteText</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">32</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.close.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnToActionList</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">session</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">documentWebScope</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Confirm Close" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionIndex</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionErrorParameter</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">context</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">close</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">caller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">confirmationQuestion</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionType</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">showReasonField</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Would+you+like+to+save+this+document+before+you+close+it%3F</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionText</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reason</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">start</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionErrorKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCallPath</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionErrorPropertyName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Save Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">close</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">caller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionIndex</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">context</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCallPath</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">18</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.processAnswer.button0.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.processAnswer.button0.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstruction.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">QuestionRefresh</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">close</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCallAttribute</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">present</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionIndex</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">buttonClicked</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BudgetConstruction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Screen" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">XXXXX RESEARCH-XXXXX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARSC</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARSC</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">21</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
              <objProp>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
                <name>saveConfig</name>
              </objProp>
              <stringProp name="filename"></stringProp>
              <boolProp name="ResultCollector.error_logging">false</boolProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
              <objProp>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
                <name>saveConfig</name>
              </objProp>
              <stringProp name="filename"></stringProp>
              <boolProp name="ResultCollector.error_logging">false</boolProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <objProp>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
                <name>saveConfig</name>
              </objProp>
              <stringProp name="filename"></stringProp>
              <boolProp name="ResultCollector.error_logging">false</boolProp>
            </ResultCollector>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Load Document - RRUFFNER" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="CAS Login" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">service</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Login khuntley" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">khuntley</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">LT-130-JlcRaGcF5jh1PJDpisZZ</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lt</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ST-40-PkkFJPcQxkzQuklWfYnE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">ticket</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">rruffner</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backdoorId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2Fkew%2FPortal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Workflow+Services</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">login</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">imageField</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Backdoor Login rruffner" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/Portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">rruffner</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backdoorId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.login.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/ChartService.getByPrimaryId.dwr" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/exec/ChartService.getByPrimaryId.dwr</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1
c0-scriptName=ChartService
c0-methodName=getByPrimaryId
c0-id=6332_1243022265305
c0-param0=string:BL
xml=true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">callCount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Enter Fiscal Year Chart and Account" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">34</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1
c0-scriptName=AccountService
c0-methodName=getByPrimaryIdWithCaching
c0-id=7494_1243022299262
c0-param0=string:BL
c0-param1=string:2331460
xml=true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">callCount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Load Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pickListMode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">docHandler</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnAnchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BcDoc0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2168808105</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">principalId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;document.documentHeader.documentNumber&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="RegexExtractor.refname">documentNumber</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">routeHeaderId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Click Expenditures Tab - Apply Adjustments" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction 2010 BL 2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">IN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BAL FORWARD</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">revenueAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">EX</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ACAD SALARY</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">SUPP EXP</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">expenditureAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">54</stringProp>
                <stringProp name="Argument.name">methodToCall.performExpMonthSpread.anchorexpenditureControlsAnchor.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.name">methodToCall.performExpMonthSpread.anchorexpenditureControlsAnchor.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DH</stringProp>
                <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newNote.noteText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">returnToActionList</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">session</stringProp>
                <stringProp name="Argument.name">documentWebScope</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">routeHeaderId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction 2010 BL 2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">IN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BAL FORWARD</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">revenueAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">EX</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ACAD SALARY</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">SUPP EXP</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">expenditureAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DH</stringProp>
                <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newNote.noteText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">21</stringProp>
                <stringProp name="Argument.name">methodToCall.save.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">7</stringProp>
                <stringProp name="Argument.name">methodToCall.save.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">returnToActionList</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">session</stringProp>
                <stringProp name="Argument.name">documentWebScope</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">routeHeaderId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Confirm Close" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction 2010 BL 2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">IN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BAL FORWARD</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">revenueAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">EX</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ACAD SALARY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">SUPP EXP</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">expenditureAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DH</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newNote.noteText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">27</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.close.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnToActionList</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">session</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">documentWebScope</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/kr/questionPrompt.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionIndex</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionErrorParameter</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">context</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">close</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">caller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">confirmationQuestion</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionType</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showReasonField</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Would+you+like+to+save+this+document+before+you+close+it%3F</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">reason</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionErrorKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCallPath</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionErrorPropertyName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">topOfForm</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionAnchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Save Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">close</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">caller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionIndex</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">context</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">topOfForm</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionAnchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCallPath</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">29</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.processAnswer.button0.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">8</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.processAnswer.button0.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstruction.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">topOfForm</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">anchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">QuestionRefresh</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">refreshCaller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">close</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCallAttribute</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">present</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionIndex</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">buttonClicked</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">anchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BudgetConstruction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">refreshCaller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">refresh</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BcDoc0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Screen" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSYCHOLOGY COURSE BUYOUTS</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DOFDS</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroupCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroup.subFundGroupDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToChartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARSC</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToChartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToOrganizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.organization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToChartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARSC</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">30</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">7</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test BC Document - Multiple Users" enabled="true">
        <longProp name="ThreadGroup.start_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for localhost:8080/kfs-dev" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-dev</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-reg" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-reg</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-cnv" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-cnv</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <collectionProp name="CookieManager.cookies"/>
        </CookieManager>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Per-user/thread parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="2051813379">
              <stringProp name="-1231992094">khuntley</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Recorded HTTP requests " enabled="false"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logging in" enabled="true"/>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="CAS authentication" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (auto-redirect to login page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service path" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICEPATH</stringProp>
                <stringProp name="RegexExtractor.regex">service=http[^:]*://[^/]*/[^/]*(/.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">service_path</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse CAS login ticket" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASTICKET</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;lt&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">cas_login_ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICE</stringProp>
                <stringProp name="RegexExtractor.regex">service=(.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">service</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/login Login Results" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${service}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">service</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">https%3A%2F%2Ftest.kuali.org%2Fkuali-reg%2Fportal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${username}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">username</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">day</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${cas_login_ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lt</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">LT-369-tZ5DkSs8VFHLJZlw1LV3</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_server_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">BADVALUE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://([^/]*)/</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_server_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_uri_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://[^/]*/([^&quot;]*)&quot;;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_uri_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse ticket_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=.*ticket=([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Login Successful" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1294094723">Login successful.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
                <objProp>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>false</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                  <name>saveConfig</name>
                </objProp>
                <stringProp name="filename"></stringProp>
                <boolProp name="ResultCollector.error_logging">true</boolProp>
              </ResultCollector>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (Session recovery page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}${service_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ticket</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ST-966-22IiviZJbBafXfkgFkY9</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (should have user name on page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert user name present" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-974989074">${__javaScript(&apos;${username}&apos;)}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="CAS Login" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">service</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Login HOATES" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">hoates</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">LT-68-2UtWXhaifkt5hQVflhdQ</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ST-24-iwUE0roRK9c8JJPR9Fgy</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ticket</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Enter Fiscal Year Chart of Accounts and Account Number" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">43</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Org Pull Up" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PULLUP</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">31</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">27</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Menu Screen" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">41</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPushdown.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPushdown.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Org Push Down" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PUSHDOWN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPushDownOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PushDownCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">55</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPushDown.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPushDown.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPushDownOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PushDownCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">36</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Menu Screen" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">48</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performOrgPullup.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Org Pull Up" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PULLUP</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performPullUp.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCPullUpOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(PullUpCandidates)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Menu Screen" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">16</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Load Document - HOATES" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="CAS Login" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Login Khuntley" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">khuntley</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">LT-124-k1ggfpHfldC6MzZg8heM</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ST-38-aRhAj0eqQsGJn3YM5hXm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Backdoor Login HOATES" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">hoates</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backdoorId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2Fkew%2FPortal.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Workflow+Services</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">imageField</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/kew/Portal.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kew/Portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">hoates</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backdoorId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.login.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/ChartService.getByPrimaryId.dwr" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/dwr/exec/ChartService.getByPrimaryId.dwr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1
c0-scriptName=ChartService
c0-methodName=getByPrimaryId
c0-id=2064_1243020967414
c0-param0=string:BL
xml=true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">callCount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1
c0-scriptName=AccountService
c0-methodName=getByPrimaryIdWithCaching
c0-id=1118_1243020977317
c0-param0=string:BL
c0-param1=string:2931476
xml=true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">callCount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Enter Fiscal Year Chart and Account" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">XXXXX RESEARCH-XXXXX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">69</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Load Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pickListMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">mainWindow</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">docHandler</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;document.documentHeader.documentNumber&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <stringProp name="RegexExtractor.refname">documentNumber</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">routeHeaderId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Click Expenditures Tab - Apply Adjustments" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">mainWindow</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction 2010 BL 2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BAL FORWARD</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">TRANSFER IN</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">EX</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUM SES SAL</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUPP EXP</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FRNG BEN CST</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FICA</stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DH</stringProp>
                    <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">newNote.noteText</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.name">methodToCall.save.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">methodToCall.save.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">returnToActionList</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">session</stringProp>
                    <stringProp name="Argument.name">documentWebScope</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">routeHeaderId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">mainWindow</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction 2010 BL 2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget Construction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BAL FORWARD</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">TRANSFER IN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hideDetails</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-----</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BB</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">EX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUM SES SAL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SUPP EXP</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FRNG BEN CST</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[2].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FICA</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialObject.financialObjectCodeShortName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[3].financialSubObject.financialSubObjectCdshortNm</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DH</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">newNote.noteText</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CLOSE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">32</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.close.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnToActionList</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">session</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">documentWebScope</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Confirm Close" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionIndex</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionErrorParameter</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">context</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">close</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">caller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">confirmationQuestion</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionType</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">showReasonField</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Would+you+like+to+save+this+document+before+you+close+it%3F</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionText</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reason</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">start</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionErrorKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCallPath</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionErrorPropertyName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Save Document" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">close</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">caller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionIndex</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">formKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">context</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCallPath</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">18</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.processAnswer.button0.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.processAnswer.button0.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstruction.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">QuestionRefresh</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${documentNumber}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docNum</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">close</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCallAttribute</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">present</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">questionIndex</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">buttonClicked</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BudgetConstruction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Screen" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2931476</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">XXXXX RESEARCH-XXXXX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARSC</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARSC</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">21</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
              <objProp>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
                <name>saveConfig</name>
              </objProp>
              <stringProp name="filename"></stringProp>
              <boolProp name="ResultCollector.error_logging">false</boolProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
              <objProp>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
                <name>saveConfig</name>
              </objProp>
              <stringProp name="filename"></stringProp>
              <boolProp name="ResultCollector.error_logging">false</boolProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <objProp>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
                <name>saveConfig</name>
              </objProp>
              <stringProp name="filename"></stringProp>
              <boolProp name="ResultCollector.error_logging">false</boolProp>
            </ResultCollector>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Load Document - RRUFFNER" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Portal" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="CAS Login" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">service</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Login khuntley" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">khuntley</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">LT-130-JlcRaGcF5jh1PJDpisZZ</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lt</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ST-40-PkkFJPcQxkzQuklWfYnE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">ticket</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">rruffner</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backdoorId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2Fkew%2FPortal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Workflow+Services</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">login</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">imageField</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Backdoor Login rruffner" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/Portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">rruffner</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backdoorId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.login.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Select Budget Construction Selection" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/ChartService.getByPrimaryId.dwr" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/exec/ChartService.getByPrimaryId.dwr</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1
c0-scriptName=ChartService
c0-methodName=getByPrimaryId
c0-id=6332_1243022265305
c0-param0=string:BL
xml=true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">callCount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Enter Fiscal Year Chart and Account" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">34</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.performBCDocumentOpen.anchorbudgetConstructionHeaderAnchor.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/exec/AccountService.getByPrimaryIdWithCaching.dwr</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1
c0-scriptName=AccountService
c0-methodName=getByPrimaryIdWithCaching
c0-id=7494_1243022299262
c0-param0=string:BL
c0-param1=string:2331460
xml=true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">callCount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Load Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pickListMode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">docHandler</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnAnchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BcDoc0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2168808105</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">principalId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;document.documentHeader.documentNumber&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.refname">documentNumber</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">routeHeaderId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Click Expenditures Tab - Apply Adjustments" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction 2010 BL 2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">IN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BAL FORWARD</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">revenueAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">EX</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ACAD SALARY</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">SUPP EXP</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">expenditureAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">54</stringProp>
                <stringProp name="Argument.name">methodToCall.performExpMonthSpread.anchorexpenditureControlsAnchor.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.name">methodToCall.performExpMonthSpread.anchorexpenditureControlsAnchor.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DH</stringProp>
                <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newNote.noteText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">returnToActionList</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">session</stringProp>
                <stringProp name="Argument.name">documentWebScope</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">routeHeaderId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction 2010 BL 2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">IN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BAL FORWARD</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">revenueAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">EX</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ACAD SALARY</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">SUPP EXP</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">expenditureAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DH</stringProp>
                <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">newNote.noteText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">21</stringProp>
                <stringProp name="Argument.name">methodToCall.save.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">7</stringProp>
                <stringProp name="Argument.name">methodToCall.save.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <stringProp name="Argument.name">returnToActionList</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">session</stringProp>
                <stringProp name="Argument.name">documentWebScope</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kew/RouteLog.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">routeHeaderId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Confirm Close" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mainWindow</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(DocumentOverview)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction 2010 BL 2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.documentDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Budget Construction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.explanation</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.documentHeader.organizationDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(SystemInformation)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pushdownKeyCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Revenue)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">IN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newRevenueLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BAL FORWARD</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerRevenueLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">revenueAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">OPEN</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(Expenditure)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideAdjustmentMeasurement</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideDetails</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-----</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BB</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">EX</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.versionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialBeginningBalanceLineAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialObject.financialObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.financialSubObject.financialSubObjectCodeName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newExpenditureLine.accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ACAD SALARY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[0].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">SUPP EXP</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialObject.financialObjectCodeShortName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].financialSubObject.financialSubObjectCdshortNm</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">document.pendingBudgetConstructionGeneralLedgerExpenditureLines[1].accountLineAnnualBalanceAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">expenditureAdjustmentAmount</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(NotesandAttachments)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DH</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newNote.noteTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">newNote.noteText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CLOSE</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStates(RouteLog)</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">27</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.close.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnToActionList</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">session</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">documentWebScope</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype">application/octet-stream</stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD">attachmentFile</stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/kr/questionPrompt.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionIndex</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionErrorParameter</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">context</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">close</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">caller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">confirmationQuestion</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionType</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showReasonField</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Would+you+like+to+save+this+document+before+you+close+it%3F</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionText</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">reason</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionErrorKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCallPath</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionErrorPropertyName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">topOfForm</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionAnchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Save Document" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kr/questionPrompt.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstruction.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">close</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">caller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionIndex</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">context</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">topOfForm</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionAnchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCallPath</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">29</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.processAnswer.button0.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">8</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.processAnswer.button0.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstruction.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstruction.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">topOfForm</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">anchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">QuestionRefresh</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">refreshCaller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${documentNumber}</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docNum</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">close</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCallAttribute</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">present</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.close.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DocSaveBeforeClose</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">questionIndex</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">buttonClicked</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">budgetConstructionHeaderAnchor</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">anchor</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BudgetConstruction</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">refreshCaller</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">refresh</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BcDoc0</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Budget Construction Selection Screen" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2010</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BLOOMINGTON</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2331460</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSYCHOLOGY COURSE BUYOUTS</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DOFDS</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroupCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.subFundGroup.subFundGroupDescription</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToChartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARSC</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.account.organization.reportsToOrganization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToChartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.reportsToOrganizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">PSYCHOLOGY</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.organization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToChartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARSC</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganizationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">ARTS ~ SCIENCES</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">budgetConstructionHeader.budgetConstructionAccountReports.budgetConstructionOrganizationReports.reportsToOrganization.organizationName</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">30</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">7</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

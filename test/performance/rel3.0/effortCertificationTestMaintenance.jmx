<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2009 The Kuali Foundation
 
 Licensed under the Educational Community License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.opensource.org/licenses/ecl2.php
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Effort Certification Maintenace Document Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <collectionProp name="TestPlan.thread_groups"/>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Effort Certification Maintenence Document Multiple Users" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1248292287000</longProp>
        <longProp name="ThreadGroup.end_time">1248292287000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <boolProp name="TestElement.per_iteration">true</boolProp>
          <collectionProp name="UserParameters.names">
            <stringProp name="VIEWSTATE">VIEWSTATE</stringProp>
            <stringProp name="jsessionid">jsessionid</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="419789715">
              <stringProp name=""></stringProp>
              <stringProp name="480A2165D2E88E44F0F7A583EEC969CB">480A2165D2E88E44F0F7A583EEC969CB</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; InfoPath.2; Zune 3.0)</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">image/gif, image/jpeg, image/pjpeg, image/pjpeg, application/x-shockwave-flash, application/xaml+xml, application/vnd.ms-xpsdocument, application/x-ms-xbap, application/x-ms-application, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">en-us</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Test EC Maintenance Documents" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="http://localhost/kfs-dev" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="http://localhost/kfs-dev/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Duplicate Certifications Report</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kr/lookup.do?methodToCall=start</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.DuplicateCertificationsReport</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract CAS Login Ticket" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cas_login_ticket</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;lt&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Login CAS" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="service" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do?channelTitle=Duplicate%20Certifications%20Report&amp;channelUrl=kr/lookup.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ec.businessobject.DuplicateCertificationsReport&amp;docFormKey=88888888&amp;returnLocation=http://localhost:8080/kfs-dev/portal.do&amp;hideReturnLink=true</stringProp>
                  <stringProp name="Argument.name">service</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">khuntley</stringProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">demo</stringProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lt" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">${cas_login_ticket}</stringProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_eventId" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">submit</stringProp>
                  <stringProp name="Argument.name">_eventId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="submit" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">LOGIN</stringProp>
                  <stringProp name="Argument.name">submit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">test.kuali.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cas-stg/login;jsessionid=${jsessionid}.Kuali6_1Engine</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Login Successful" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="219523171">Logged in</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Report Definition Maintenance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Report Definition</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kr/lookup.do?methodToCall=start</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportDefinition</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Report Definition Maintenance Lookup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">start</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportDefinition</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Report Definition Maintenance Submit Fiscal Year" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="formKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">formKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupableImplServiceName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kualiLookupable</stringProp>
                  <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportDefinition</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conversionFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">conversionFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressActions" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">suppressActions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multipleValues" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">multipleValues</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupAnchor" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">lookupAnchor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="readOnlyFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">readOnlyFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="referencesToRefresh" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">referencesToRefresh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasReturnableRow" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hasReturnableRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docNum" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">docNum</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="showMaintenanceLinks" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">showMaintenanceLinks</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="effortCertificationReportNumber" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">effortCertificationReportNumber</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="effortCertificationReportTypeCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">effortCertificationReportTypeCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="effortCertificationReportPeriodStatusCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">effortCertificationReportPeriodStatusCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="active" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.name">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.x" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">31</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.y" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Document Number" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">documentNumber</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;document.documentHeader.documentNumber&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">500</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Submit Report Definition Document" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="effortCertificationReportNumber" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">A01</stringProp>
                  <stringProp name="Argument.name">effortCertificationReportNumber</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportDefinition</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">edit</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/maintenance.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="routeHeaderId" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">${documentNumber}</stringProp>
                  <stringProp name="Argument.name">routeHeaderId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kew/RouteLog.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Lookup Report Definition Document" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/kr/maintenance.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="formKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.name">formKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupableImplServiceName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kualiLookupable</stringProp>
                  <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.PositionObjectGroup</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conversionFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">positionObjectGroupCode:document.newMaintainableObject.add.effortCertificationReportPositions.effortCertificationReportPositionObjectGroupCode,</stringProp>
                  <stringProp name="Argument.name">conversionFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressActions" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">suppressActions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multipleValues" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">multipleValues</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupAnchor" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.name">lookupAnchor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="readOnlyFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">readOnlyFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="referencesToRefresh" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">positionObjectGroup</stringProp>
                  <stringProp name="Argument.name">referencesToRefresh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasReturnableRow" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hasReturnableRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docNum" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">${documentNumber}</stringProp>
                  <stringProp name="Argument.name">docNum</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="showMaintenanceLinks" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">showMaintenanceLinks</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="positionObjectGroupCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">positionObjectGroupCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="active" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.name">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.x" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.y" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="routeHeaderId" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">${documentNumber}</stringProp>
                  <stringProp name="Argument.name">routeHeaderId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kew/RouteLog.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Enter Document Search Criteria" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Document Search</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/kr/lookup.do?methodToCall=start</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.rice.kew.docsearch.DocSearchCriteriaDTO</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Document Lookup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">start</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.rice.kew.docsearch.DocSearchCriteriaDTO</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Submit Document Number" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="formKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">formKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupableImplServiceName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">docSearchCriteriaDTOLookupable</stringProp>
                  <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.rice.kew.docsearch.DocSearchCriteriaDTO</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conversionFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">conversionFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressActions" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">suppressActions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multipleValues" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">multipleValues</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupAnchor" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">lookupAnchor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="readOnlyFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">readOnlyFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="referencesToRefresh" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">referencesToRefresh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasReturnableRow" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hasReturnableRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docNum" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">docNum</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="showMaintenanceLinks" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">showMaintenanceLinks</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="savedSearchName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">savedSearchName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docTypeFullName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">docTypeFullName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="initiator" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">initiator</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="routeHeaderId" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">${documentNumber}</stringProp>
                  <stringProp name="Argument.name">routeHeaderId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDateCreated" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">fromDateCreated</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDateCreated" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">toDateCreated</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="namedSearch" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">namedSearch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isAdvancedSearch" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">NO</stringProp>
                  <stringProp name="Argument.name">isAdvancedSearch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="superUserSearch" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">NO</stringProp>
                  <stringProp name="Argument.name">superUserSearch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oldDocTypeFieldName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">oldDocTypeFieldName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.x" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">49</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.y" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">13</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">500</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Route Log" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="routeHeaderId" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">${documentNumber}</stringProp>
                  <stringProp name="Argument.name">routeHeaderId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kew/RouteLog.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Maintenance Tab" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedTab" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">maintenance</stringProp>
                  <stringProp name="Argument.name">selectedTab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Report Earn Paygroup Maintenance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Report Earn Paygroup</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kr/lookup.do?methodToCall=start</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportEarnPaygroup</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Lookup Document" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">start</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportEarnPaygroup</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Submit Fiscal Year Parameter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="formKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">formKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupableImplServiceName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kualiLookupable</stringProp>
                  <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportEarnPaygroup</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conversionFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">conversionFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressActions" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">suppressActions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multipleValues" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">multipleValues</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupAnchor" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">lookupAnchor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="readOnlyFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">readOnlyFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="referencesToRefresh" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">referencesToRefresh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasReturnableRow" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hasReturnableRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docNum" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">docNum</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="showMaintenanceLinks" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">showMaintenanceLinks</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="effortCertificationReportTypeCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">effortCertificationReportTypeCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="active" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.name">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.x" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.y" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">500</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Maintenance Tab" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedTab" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">maintenance</stringProp>
                  <stringProp name="Argument.name">selectedTab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Labor Object Code Lookup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Labor Object Code</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kr/lookup.do?methodToCall=start</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborObject</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Lookup Document" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">start</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborObject</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Submit Fiscal Year Parameter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="formKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">formKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupableImplServiceName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kualiLookupable</stringProp>
                  <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborObject</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conversionFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">conversionFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressActions" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">suppressActions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multipleValues" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">multipleValues</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupAnchor" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">lookupAnchor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="readOnlyFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">readOnlyFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="referencesToRefresh" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">referencesToRefresh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasReturnableRow" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hasReturnableRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docNum" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">docNum</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="showMaintenanceLinks" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">showMaintenanceLinks</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">financialObjectCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="financialObjectFringeOrSalaryCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">financialObjectFringeOrSalaryCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="financialObjectPayTypeCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">financialObjectPayTypeCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="positionObjectGroupCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">positionObjectGroupCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="detailPositionRequiredIndicator" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">detailPositionRequiredIndicator</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="financialObjectHoursRequiredIndicator" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">financialObjectHoursRequiredIndicator</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="active" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.name">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="methodToCall.search.x" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">28</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
                <elementProp name="methodToCall.search.y" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">500</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Maintenance Tab" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedTab" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">maintenance</stringProp>
                  <stringProp name="Argument.name">selectedTab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Report Period Status Code Maintenance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Report Period Status Code</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kr/lookup.do?methodToCall=start</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationPeriodStatusCode</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Lookup Document" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">start</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationPeriodStatusCode</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Submit Lookup Parameter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="formKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">formKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupableImplServiceName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kualiLookupable</stringProp>
                  <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationPeriodStatusCode</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conversionFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">conversionFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressActions" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">suppressActions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multipleValues" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">multipleValues</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupAnchor" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">lookupAnchor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="readOnlyFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">readOnlyFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="referencesToRefresh" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">referencesToRefresh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasReturnableRow" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hasReturnableRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docNum" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">docNum</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="showMaintenanceLinks" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">showMaintenanceLinks</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="effortCertificationReportPeriodStatusCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">effortCertificationReportPeriodStatusCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.x" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">32</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.y" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">500</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Maintenance Tab" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedTab" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">maintenance</stringProp>
                  <stringProp name="Argument.name">selectedTab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Report Type Maintenance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Report Type</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kr/lookup.do?methodToCall=start</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportType</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Lookup Document" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">start</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportType</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">returnLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Submit Lookup Parameter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/kfs-dev/portal.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="formKey" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">88888888</stringProp>
                  <stringProp name="Argument.name">formKey</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupableImplServiceName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">kualiLookupable</stringProp>
                  <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="businessObjectClassName" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.ec.businessobject.EffortCertificationReportType</stringProp>
                  <stringProp name="Argument.name">businessObjectClassName</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conversionFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">conversionFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hideReturnLink" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">hideReturnLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressActions" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">suppressActions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multipleValues" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">multipleValues</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lookupAnchor" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">lookupAnchor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="readOnlyFields" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">readOnlyFields</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="referencesToRefresh" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">referencesToRefresh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasReturnableRow" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">hasReturnableRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="docNum" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">docNum</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="showMaintenanceLinks" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Yes</stringProp>
                  <stringProp name="Argument.name">showMaintenanceLinks</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="effortCertificationReportTypeCode" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">effortCertificationReportTypeCode</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="active" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.name">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.x" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">29</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.search.y" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/kr/lookup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">500</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Maintenance Tab" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedTab" elementType="HTTPArgument">
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="Argument.value">maintenance</stringProp>
                  <stringProp name="Argument.name">selectedTab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.use_equals">true</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kfs-dev/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

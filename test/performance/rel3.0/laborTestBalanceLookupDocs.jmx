<jmeterTestPlan version="1.2" properties="1.8">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Labor Test Balance Lookup Documents" enabled="true">
        <longProp name="ThreadGroup.start_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for localhost:8080/kfs-dev" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-dev</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-reg" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-reg</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-cnv" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-cnv</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <collectionProp name="CookieManager.cookies"/>
        </CookieManager>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Per-user/thread parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="934845763">
              <stringProp name="-1231992094">bomiddle</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Recorded HTTP requests " enabled="false"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logging in" enabled="true"/>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="CAS authentication" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (auto-redirect to login page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service path" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICEPATH</stringProp>
                <stringProp name="RegexExtractor.regex">service=http[^:]*://[^/]*/[^/]*(/.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">service_path</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse CAS login ticket" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASTICKET</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;lt&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">cas_login_ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICE</stringProp>
                <stringProp name="RegexExtractor.regex">service=(.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">service</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/login Login Results" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${service}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">service</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">https%3A%2F%2Ftest.kuali.org%2Fkuali-reg%2Fportal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${username}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">username</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">day</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${cas_login_ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lt</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">LT-369-tZ5DkSs8VFHLJZlw1LV3</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_server_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">BADVALUE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://([^/]*)/</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_server_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_uri_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://[^/]*/([^&quot;]*)&quot;;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_uri_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse ticket_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=.*ticket=([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.refname">ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Login Successful" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1294094723">Login successful.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
                <objProp>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>false</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                  <name>saveConfig</name>
                </objProp>
                <stringProp name="filename"></stringProp>
                <boolProp name="ResultCollector.error_logging">true</boolProp>
              </ResultCollector>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (Session recovery page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}${service_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ticket</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ST-966-22IiviZJbBafXfkgFkY9</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (should have user name on page)" enabled="true">
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert user name present" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-974989074">${__javaScript(&apos;${username}&apos;)}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Start Labor Documents" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}" enabled="true">
            <stringProp name="HTTPSampler.path">${context}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/css/portal.css" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/css/portal.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;13518-1239976902046&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:01:42 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/icon-port-actionlist.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/icon-port-actionlist.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;946-1239976813437&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/icon-port-docsearch.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/icon-port-docsearch.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;959-1239976813546&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/headerback.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/headerback.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;1834-1239976813562&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/logo-kfs.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/logo-kfs.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;4978-1239976813437&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/left-red.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/left-red.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;498-1239976813546&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/left-tan.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/left-tan.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;219-1239976813578&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/right-red.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/right-red.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;1802-1239976813468&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/head2-back.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/head2-back.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;1258-1239976813453&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/searchback.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/searchback.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;1747-1239976813484&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/leftback-focus.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/leftback-focus.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;387-1239976813500&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/right-tan.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/right-tan.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;696-1239976813531&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/header2-left-focus.gif" enabled="true">
            <stringProp name="HTTPSampler.path">${context}/images-portal/header2-left-focus.gif</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">W/&quot;910-1239976813421&quot;</stringProp>
                  <stringProp name="Header.name">If-None-Match</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                  <stringProp name="Header.name">Referer</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept-Language</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                  <stringProp name="Header.name">Host</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  <stringProp name="Header.name">User-Agent</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                  <stringProp name="Header.name">If-Modified-Since</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                  <stringProp name="Header.name">Accept</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">300</stringProp>
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/bl-bevel-focus.gif" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/images-portal/bl-bevel-focus.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">W/&quot;1026-1239976813562&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/chanhead-back.gif" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/images-portal/chanhead-back.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">W/&quot;1317-1239976813515&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/images-portal/os-guy.gif" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/images-portal/os-guy.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">W/&quot;412-1239976813453&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/css/portal.css</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 14:00:13 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="/favicon.ico" enabled="true">
          <stringProp name="HTTPSampler.path">/favicon.ico</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">W/&quot;21630-1238630568156&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Thu, 02 Apr 2009 00:02:48 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glModifiedInquiry.do%3FmethodToCall%3Dstart%26businessObjectClassName%3Dorg.kuali.kfs.module.ld.businessobject.AccountStatusBaseFunds%26docFormKey%3D88888888%26returnLocation%3Dportal.do%26hideReturnLink%3Dtrue</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Account+Status+%28Base+Funds%29</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?ticket=ST-7-jDTwJFyW8G07csP7obfa</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.AccountStatusBaseFunds</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/engine.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/engine.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">&quot;1239986947000&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusBaseFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 16:49:07 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/util.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/util.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">&quot;1239986947000&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusBaseFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 16:49:07 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusBaseFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Account Status Base Funds" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BaseFundsLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.AccountStatusBaseFunds</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1031400</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Consolidation</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.consolidationOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">35</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">11</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusBaseFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Portal" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Account Status Current Funds" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Account%20Status%20(Current%20Funds)</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glModifiedInquiry.do?methodToCall=start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?selectedTab=main</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds</stringProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Account%20Status%20(Current%20Funds)&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CurrentFundsLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Consolidation</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.consolidationOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.pendingEntryOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">27</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">9</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Account Status Current Funds" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">CurrentFundsLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1031400</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Consolidation</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.consolidationOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.pendingEntryOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">26</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">9</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Account%20Status%20(Current%20Funds)&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.AccountStatusCurrentFunds&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Calculated Salary Foundation" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Calculated%20Salary%20Foundation</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glModifiedInquiry.do?methodToCall=start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborCalculatedSalaryFoundationTracker</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?selectedTab=main</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborCalculatedSalaryFoundationTracker</stringProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Calculated%20Salary%20Foundation&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborCalculatedSalaryFoundationTracker&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborCalculatedSalaryFoundationTracker&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">laborCalculatedSalaryFoundationTrackerLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborCalculatedSalaryFoundationTracker</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1031400</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">7</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborCalculatedSalaryFoundationTracker&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Calculated%20Salary%20Foundation&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborCalculatedSalaryFoundationTracker&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Employee Funding" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Employee%20Funding</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glModifiedInquiry.do?methodToCall=start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.EmployeeFunding</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?selectedTab=main</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.EmployeeFunding</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Employee%20Funding&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.EmployeeFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.EmployeeFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">EmployeeFundingLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.EmployeeFunding</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0000000305</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">emplid</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.pendingEntryOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.blankLineOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">29</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">13</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.EmployeeFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="July 1 Position Funding" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Employee%20Funding&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.EmployeeFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">July%201%20Position%20Funding</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glModifiedInquiry.do?methodToCall=start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.July1PositionFunding</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?selectedTab=main</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=July%201%20Position%20Funding&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.July1PositionFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/kr/css/kuali.css" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/kr/css/kuali.css</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">W/&quot;17973-1239973622000&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.July1PositionFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 13:07:02 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.July1PositionFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">july1PositionFundingLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.July1PositionFunding</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">BL</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">1031400</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">35</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">6</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.July1PositionFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/engine.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/engine.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">&quot;1239986947000&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 16:49:07 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/util.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/util.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">&quot;1239986947000&quot;</stringProp>
                <stringProp name="Header.name">If-None-Match</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Fri, 17 Apr 2009 16:49:07 GMT</stringProp>
                <stringProp name="Header.name">If-Modified-Since</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Labor Ledger View" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=July%201%20Position%20Funding&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.July1PositionFunding&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Labor%20Ledger%20View</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glBalanceInquiry.do?methodToCall=start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LedgerBalance</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">AC</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?selectedTab=main</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glBalanceInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glBalanceInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LedgerBalance</stringProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">AC</stringProp>
                <stringProp name="Argument.name">financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Labor%20Ledger%20View&amp;channelUrl=glBalanceInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LedgerBalance&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true&amp;financialBalanceTypeCode=AC</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glBalanceInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LedgerBalance&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true&amp;financialBalanceTypeCode=AC</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glBalanceInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glBalanceInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">laborLedgerBalanceLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LedgerBalance</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">0000000305</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">emplid</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">AC</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Consolidation</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.consolidationOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">No</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dummyBusinessObject.pendingEntryOption</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">45</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glBalanceInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LedgerBalance&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true&amp;financialBalanceTypeCode=AC</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glBalanceInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Labor Ledger Pending Entry" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Labor%20Ledger%20View&amp;channelUrl=glBalanceInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LedgerBalance&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true&amp;financialBalanceTypeCode=AC</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Labor%20Ledger%20Pending%20Entry</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glModifiedInquiry.do?methodToCall=start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborLedgerPendingEntry</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?selectedTab=main</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborLedgerPendingEntry</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Labor%20Ledger%20Pending%20Entry&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborLedgerPendingEntry&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborLedgerPendingEntry&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">laborPendingEntryLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.LaborLedgerPendingEntry</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">2007</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalYear</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chartOfAccountsCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">accountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subAccountNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialSubObjectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialBalanceTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialObjectTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">universityFiscalPeriodCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialDocumentTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">financialSystemOriginationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">documentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">organizationDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">projectCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">organizationReferenceId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">referenceFinancialDocumentTypeCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">referenceFinancialSystemOriginationCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">referenceFinancialDocumentNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">emplid</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">positionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">documentHeader.financialDocumentStatusCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">38</stringProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">8</stringProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborLedgerPendingEntry&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Position Inquiry" enabled="true"/>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Labor%20Ledger%20Pending%20Entry&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.LaborLedgerPendingEntry&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Position%20Inquiry</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelTitle</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">glModifiedInquiry.do?methodToCall=start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">channelUrl</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.PositionData</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?selectedTab=main</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">start</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.PositionData</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">docFormKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Position%20Inquiry&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.PositionData&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.PositionData&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/glModifiedInquiry.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/glModifiedInquiry.do</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">portal.do</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">backLocation</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">88888888</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">formKey</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">laborPositionDataLookupable</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lookupableImplServiceName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">org.kuali.kfs.module.ld.businessobject.PositionData</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessObjectClassName</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">conversionFields</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hideReturnLink</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">positionNumber</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">businessUnit</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">departmentId</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jobCode</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">positionStatus</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">description</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">positionSalaryPlanDefault</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">positionGradeDefault</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">39</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.x</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">12</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search.y</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">search</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">methodToCall.search</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tabStatesSize</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.PositionData&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/dwr/interface/PersonService.js" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/dwr/interface/PersonService.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/glModifiedInquiry.do</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">*/*</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
          <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">main</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">selectedTab</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.monitor">false</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSampler>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">gzip,deflate</stringProp>
                <stringProp name="Header.name">Accept-Encoding</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?channelTitle=Position%20Inquiry&amp;channelUrl=glModifiedInquiry.do?methodToCall=start&amp;businessObjectClassName=org.kuali.kfs.module.ld.businessobject.PositionData&amp;docFormKey=88888888&amp;returnLocation=portal.do&amp;hideReturnLink=true</stringProp>
                <stringProp name="Header.name">Referer</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                <stringProp name="Header.name">Accept-Language</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">${host}:${port}</stringProp>
                <stringProp name="Header.name">Host</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                <stringProp name="Header.name">Accept-Charset</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                <stringProp name="Header.name">User-Agent</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                <stringProp name="Header.name">Accept</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">300</stringProp>
                <stringProp name="Header.name">Keep-Alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <objProp>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
              <name>saveConfig</name>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.error_logging">false</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

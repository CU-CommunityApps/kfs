<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test BC reports multiple user" enabled="true">
        <longProp name="ThreadGroup.start_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1187728739000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for localhost:8080/kfs-dev" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-dev</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-reg" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-reg</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="URL parameters for test.kuali.org/kfs-cnv" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.name">protocol</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">test.kuali.org</stringProp>
              <stringProp name="Argument.name">host</stringProp>
            </elementProp>
            <elementProp name="context" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/kfs-cnv</stringProp>
              <stringProp name="Argument.name">context</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.name">port</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Per-user/thread parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="2051813379">
              <stringProp name="-1231992094">khuntley</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Recorded HTTP requests " enabled="false"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logging in" enabled="true"/>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="CAS authentication" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (auto-redirect to login page)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="selectedTab" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service path" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICEPATH</stringProp>
                <stringProp name="RegexExtractor.regex">service=http[^:]*://[^/]*/[^/]*(/.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.refname">service_path</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse CAS login ticket" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASTICKET</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;lt&quot; value=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">cas_login_ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse service" enabled="true">
                <stringProp name="RegexExtractor.default">BADCASSERVICE</stringProp>
                <stringProp name="RegexExtractor.regex">service=(.*)</stringProp>
                <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="RegexExtractor.refname">service</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/login Login Results" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="service" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${service}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">service</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">https%3A%2F%2Ftest.kuali.org%2Fkuali-reg%2Fportal.do</stringProp>
                  </elementProp>
                  <elementProp name="username" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${username}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">username</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">day</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="lt" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${cas_login_ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lt</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">LT-369-tZ5DkSs8VFHLJZlw1LV3</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_server_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">BADVALUE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://([^/]*)/</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_server_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse redirect_uri_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=&quot;https?://[^/]*/([^&quot;]*)&quot;;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">redirect_uri_after_login</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="parse ticket_after_login" enabled="true">
                <stringProp name="RegexExtractor.default">EXPENSE EXPENDITURE</stringProp>
                <stringProp name="RegexExtractor.regex">window.location.href=.*ticket=([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.refname">ticket</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Login Successful" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1294094723">Login successful.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
                <boolProp name="ResultCollector.error_logging">true</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>false</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (Session recovery page)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ticket" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${ticket}</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ticket</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ST-966-22IiviZJbBafXfkgFkY9</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}${service_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do (should have user name on page)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="selectedTab" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">portalMainMenuBody</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedTab</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">channelTitle</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disbursement+Voucher</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert user name present" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-974989074">${__javaScript(&apos;${username}&apos;)}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Start BC Reports " enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login HOATES" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="service" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">service</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXENT</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DFRES</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DOFDS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERB</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERC</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERE</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERJ</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERK</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENFND</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUM</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ROFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">38</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ticket" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ST-33-MR0LnGr37cTc21YtfsAK</stringProp>
                  <stringProp name="Argument.name">ticket</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?ticket=ST-33-MR0LnGr37cTc21YtfsAK</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">54</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------41184676334</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">IU</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">UNIV</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">16</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do&amp;returnFormKey=BcDoc0&amp;returnAnchor=orgControlsAnchor&amp;universityFiscalYear=2010&amp;principalId=1373503598&amp;methodToCall=loadExpansionScreen&amp;operatingMode=REPORTS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------265001916915724</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Salary Summary Report" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllObjectCodes.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">43</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllObjectCodes.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc1&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=SalarySummaryReport&amp;principalId=1373503598&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------24464570528145</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">23</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------23281168279961</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">21</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------491299511942</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="refreshCaller" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction</stringProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Org Object Detail" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXENT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DFRES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DOFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERB</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERC</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERE</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERJ</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERK</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENFND</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUM</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ROFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllSubFunds.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">41</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllSubFunds.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllSubFunds.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllSubFunds.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc2&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=AccountObjectDetailReport&amp;principalId=1373503598&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------146043902153</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXENT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DFRES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DOFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERB</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERC</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERE</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERJ</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERK</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENFND</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUM</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ROFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">38</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------2921238217421</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">27</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------187161971819895</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="refreshCaller" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction</stringProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">IU</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">UNIV</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1373503598</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].pullFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">22</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------54472172614771</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="refreshCaller" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">27</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------11538186919912</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Restart Report Selection" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login BUTT" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="refreshCaller" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">butt</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="lt" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">LT-97-GNHSHPZsW7ZLWx6MXpsX</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ticket" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ST-34-DnEhSdXdB1l78dwpavgO</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ticket</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?ticket=ST-34-DnEhSdXdB1l78dwpavgO</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">57</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------41184676334</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">IU</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">UNIV</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do&amp;returnFormKey=BcDoc0&amp;returnAnchor=orgControlsAnchor&amp;universityFiscalYear=2010&amp;principalId=2906405069&amp;methodToCall=loadExpansionScreen&amp;operatingMode=REPORTS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------265001916915724</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Salary Summary" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllObjectCodes.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllObjectCodes.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">13</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc1&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=SalarySummaryReport&amp;principalId=2906405069&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------24464570528145</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Account Object Detail" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">27</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------23281168279961</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">30</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------491299511942</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">IU</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">UNIV</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2906405069</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].pullFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">20</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------4827543632391</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="refreshCaller" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">13</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------146043902153</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login ABEAL" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="service" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  <stringProp name="Argument.name">service</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">abeal</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="lt" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">LT-98-4iFb7D8HVBFqEsRyZXYe</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ticket" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ST-35-1Jw2kqFoXhJ8tiZ3W5qk</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ticket</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channelUrl" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">channelUrl</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="channelTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                  <stringProp name="Argument.name">channelTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?ticket=ST-35-1Jw2kqFoXhJ8tiZ3W5qk</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">52</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------41184676334</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Salary Summary Report" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllObjectCodes.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">48</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllObjectCodes.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc1&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=SalarySummaryReport&amp;principalId=4161901639&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------114782935826962</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">35</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------24464570528145</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc1</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2400</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2480</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                  <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="checkboxToReset" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                  <stringProp name="Argument.name">checkboxToReset</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">38</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------23281168279961</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Account Object Detail" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXENT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DFRES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DOFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERB</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERC</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERE</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERJ</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERK</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENFND</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUM</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ROFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllSubFunds.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">52</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllSubFunds.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.selectAllSubFunds.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">13</stringProp>
                  <stringProp name="Argument.name">methodToCall.selectAllSubFunds.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------491299511942</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXENT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DFRES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DOFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERB</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERC</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERE</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERJ</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERK</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENFND</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUM</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ROFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc2&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=AccountObjectDetailReport&amp;principalId=4161901639&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------4827543632391</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------146043902153</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXENT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DFRES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DOFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERB</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERC</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERE</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERJ</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERK</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENFND</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUM</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ROFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">21</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------2921238217421</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">topOfForm</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc2</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                  <stringProp name="Argument.name">reportMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="reportConsolidation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">reportConsolidation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">No</stringProp>
                  <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXENT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DFRES</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                  <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DOFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERB</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERC</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERE</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERJ</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERK</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FEDERAL</stringProp>
                  <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDF</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENFND</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUM</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIEDUP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                  <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRA</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NONPRP</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">NON-PROFIT</stringProp>
                  <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">ROFDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                  <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">36</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------187161971819895</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="returnAnchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <stringProp name="Argument.name">returnAnchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="returnFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <stringProp name="Argument.name">returnFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="backLocation" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                  <stringProp name="Argument.name">backLocation</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingMode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">REPORTS</stringProp>
                  <stringProp name="Argument.name">operatingMode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                  <stringProp name="Argument.name">operatingModeTitle</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL-BL</stringProp>
                  <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">IU</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">UNIV</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">4161901639</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].pullFlag" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BL</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                  <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">OPEN</stringProp>
                  <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">23</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------54472172614771</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anchor" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                  <stringProp name="Argument.name">anchor</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="refreshCaller" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                  <stringProp name="Argument.name">refreshCaller</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">refresh</stringProp>
                  <stringProp name="Argument.name">methodToCall</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="docFormKey" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">BcDoc0</stringProp>
                  <stringProp name="Argument.name">docFormKey</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">2010</stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">30</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
                <elementProp name="tabStatesSize" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.name">tabStatesSize</stringProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=---------------------------11538186919912</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login alston" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="channelTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="channelUrl" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="service" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXENT</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DFRES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DOFDS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERB</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERC</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERE</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERJ</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERK</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENFND</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUM</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">38</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ticket" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ST-33-MR0LnGr37cTc21YtfsAK</stringProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="channelUrl" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="channelTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?ticket=ST-33-MR0LnGr37cTc21YtfsAK</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">54</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------41184676334</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IU</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">UNIV</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">16</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do&amp;returnFormKey=BcDoc0&amp;returnAnchor=orgControlsAnchor&amp;universityFiscalYear=2010&amp;principalId=1373503598&amp;methodToCall=loadExpansionScreen&amp;operatingMode=REPORTS</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------265001916915724</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Salary Summary Report" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllObjectCodes.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">43</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllObjectCodes.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc1&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=SalarySummaryReport&amp;principalId=1373503598&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------24464570528145</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">23</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------23281168279961</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">21</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------491299511942</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="anchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="refreshCaller" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction</stringProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="docFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Org Object Detail" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXENT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DFRES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DOFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERB</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERC</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERE</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERJ</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERK</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENFND</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUM</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllSubFunds.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">41</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllSubFunds.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllSubFunds.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllSubFunds.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc2&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=AccountObjectDetailReport&amp;principalId=1373503598&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------146043902153</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXENT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DFRES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DOFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERB</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERC</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERE</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERJ</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERK</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENFND</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUM</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">38</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------2921238217421</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">27</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------187161971819895</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="anchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="refreshCaller" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction</stringProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="docFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IU</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">UNIV</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1373503598</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].pullFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">22</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------54472172614771</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="anchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="refreshCaller" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="docFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">27</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------11538186919912</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Restart Report Selection" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login dcobb" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="channelTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="channelUrl" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="anchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="refreshCaller" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="docFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="username" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dcobb</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="lt" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">LT-97-GNHSHPZsW7ZLWx6MXpsX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ticket" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ST-34-DnEhSdXdB1l78dwpavgO</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="channelUrl" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="channelTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?ticket=ST-34-DnEhSdXdB1l78dwpavgO</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">57</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------41184676334</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IU</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">UNIV</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.(((SalarySummaryReport))).y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.(((SalarySummaryReport))).y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do&amp;returnFormKey=BcDoc0&amp;returnAnchor=orgControlsAnchor&amp;universityFiscalYear=2010&amp;principalId=2906405069&amp;methodToCall=loadExpansionScreen&amp;operatingMode=REPORTS</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------265001916915724</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Salary Summary" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllObjectCodes.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">40</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllObjectCodes.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">13</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc1&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=SalarySummaryReport&amp;principalId=2906405069&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------24464570528145</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Account Object Detail" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">27</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------23281168279961</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">30</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------491299511942</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IU</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">UNIV</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2906405069</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].pullFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">20</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------4827543632391</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="anchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="refreshCaller" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="docFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">26</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">13</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------146043902153</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login kcopley" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Budget Construction Selection" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="channelTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget%20Construction%20Selection</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="channelUrl" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="service" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                    <stringProp name="Argument.name">service</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/cas/login</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="username" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">kcopley</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="lt" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">LT-98-4iFb7D8HVBFqEsRyZXYe</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ticket" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ST-35-1Jw2kqFoXhJ8tiZ3W5qk</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/cas/login?service=${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="channelUrl" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetBudgetConstructionSelection.do%3FmethodToCall%3DloadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">channelUrl</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="channelTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Budget+Construction+Selection</stringProp>
                    <stringProp name="Argument.name">channelTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do?ticket=ST-35-1Jw2kqFoXhJ8tiZ3W5qk</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">52</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReportDump.anchororgControlsAnchor.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReportDump.anchororgControlsAnchor.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------41184676334</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetBudgetConstructionSelection.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">loadExpansionScreen</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?methodToCall=loadExpansionScreen</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Salary Summary Report" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllObjectCodes.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">48</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllObjectCodes.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllObjectCodes.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc1&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=SalarySummaryReport&amp;principalId=4161901639&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------114782935826962</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">35</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------24464570528145</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc1</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SalarySummaryReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Salary Object List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2000</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[0].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ACADEMIC SALARY</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[0].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2400</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[1].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[1].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2480</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[2].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">PROFESSIONAL NONEXEMPT</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[2].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].selectFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].selectFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].financialObjectCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2500</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].financialObjectCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="objectCodePickList[3].objectCodeDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-EXEMPT STAFF SALARIES</stringProp>
                    <stringProp name="Argument.name">objectCodePickList[3].objectCodeDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="checkboxToReset" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">budgetConstructionReportThresholdSettings.useThreshold</stringProp>
                    <stringProp name="Argument.name">checkboxToReset</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.thresholdPercent" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.thresholdPercent</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.useGreaterThanOperator" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.useGreaterThanOperator</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">38</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------23281168279961</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Account Object Detail" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXENT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DFRES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DOFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERB</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERC</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERE</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERJ</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERK</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENFND</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUM</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllSubFunds.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">52</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllSubFunds.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.selectAllSubFunds.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">13</stringProp>
                    <stringProp name="Argument.name">methodToCall.selectAllSubFunds.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------491299511942</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXENT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DFRES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DOFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERB</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERC</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERE</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERJ</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERK</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENFND</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUM</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">26</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do?backLocation=${protocol}%3A%2F%2F${host}%3A${port}%2Fkfs-dev%2FbudgetOrganizationSelectionTree.do&amp;returnFormKey=BcDoc2&amp;returnAnchor=topOfForm&amp;universityFiscalYear=2010&amp;reportMode=AccountObjectDetailReport&amp;principalId=4161901639&amp;methodToCall=start&amp;currentPointOfViewKeyCode=BL-BL</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------4827543632391</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------146043902153</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXENT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DFRES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DOFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERB</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERC</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERE</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERJ</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERK</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENFND</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUM</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">21</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.performReport.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">methodToCall.performReport.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------2921238217421</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationReportSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">topOfForm</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc2</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AccountObjectDetailReport</stringProp>
                    <stringProp name="Argument.name">reportMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="reportConsolidation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">reportConsolidation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionReportThresholdSettings.lockThreshold" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">budgetConstructionReportThresholdSettings.lockThreshold</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sub-Fund List Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXENT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[0].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">AUXILIARY ENTERPRISES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[0].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DFRES</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[1].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FACULTY RESEARCH</stringProp>
                    <stringProp name="Argument.name">subFundPickList[1].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DOFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[2].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DESIGNATED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[2].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[3].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[3].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERB</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[4].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[4].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERC</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[5].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[5].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERE</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[6].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[6].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[7].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[7].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERJ</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[8].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[8].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERK</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[9].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[9].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[10].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FEDERAL</stringProp>
                    <stringProp name="Argument.name">subFundPickList[10].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDF</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[11].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FOUNDATIONS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[11].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENFND</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[12].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">GENERAL FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[12].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUM</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[13].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[13].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIEDUP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[14].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">HIGHER EDUCATION</stringProp>
                    <stringProp name="Argument.name">subFundPickList[14].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRA</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[15].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[15].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NONPRP</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[16].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">NON-PROFIT</stringProp>
                    <stringProp name="Argument.name">subFundPickList[16].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].reportFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].reportFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroupCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ROFDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroupCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="subFundPickList[17].subFundGroup.subFundGroupDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">RESTRICTED OTHER FUNDS</stringProp>
                    <stringProp name="Argument.name">subFundPickList[17].subFundGroup.subFundGroupDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">36</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationReportSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationReportSelection.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------187161971819895</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetOrganizationSelectionTree.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="returnAnchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <stringProp name="Argument.name">returnAnchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="returnFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <stringProp name="Argument.name">returnFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="backLocation" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do</stringProp>
                    <stringProp name="Argument.name">backLocation</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingMode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">REPORTS</stringProp>
                    <stringProp name="Argument.name">operatingMode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(BCReportsOrganizationSelection)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(BCReportsOrganizationSelection)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="operatingModeTitle" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BC Reports Organization Selection</stringProp>
                    <stringProp name="Argument.name">operatingModeTitle</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="previousPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <stringProp name="Argument.name">previousPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="currentPointOfViewKeyCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL-BL</stringProp>
                    <stringProp name="Argument.name">currentPointOfViewKeyCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="pointOfViewOrg.organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <stringProp name="Argument.name">pointOfViewOrg.organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToChartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">IU</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToChartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].reportsToOrganizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">UNIV</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].reportsToOrganizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].versionNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].versionNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].principalId" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4161901639</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].principalId</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].pullFlag" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].pullFlag</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organizationCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BL</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organizationCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="selectionSubTreeOrgs[0].organization.organizationName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BLOOMINGTON CAMPUS</stringProp>
                    <stringProp name="Argument.name">selectionSubTreeOrgs[0].organization.organizationName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="tabStates(ReportsAndExports)" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">OPEN</stringProp>
                    <stringProp name="Argument.name">tabStates(ReportsAndExports)</stringProp>
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">23</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetOrganizationSelectionTree.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------54472172614771</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="anchor" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">orgControlsAnchor</stringProp>
                    <stringProp name="Argument.name">anchor</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="refreshCaller" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction</stringProp>
                    <stringProp name="Argument.name">refreshCaller</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">refresh</stringProp>
                    <stringProp name="Argument.name">methodToCall</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="docFormKey" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">BcDoc0</stringProp>
                    <stringProp name="Argument.name">docFormKey</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetOrganizationSelectionTree.do?anchor=topOfForm&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationReportSelectionAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Close" enabled="true"/>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/budgetBudgetConstructionSelection.do" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.universityFiscalYear" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2010</stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.universityFiscalYear</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.documentNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.documentNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccountsCode" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccountsCode</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.chartOfAccounts.finChartOfAccountDescription</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.accountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.accountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.account.accountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.account.accountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccountNumber" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccountNumber</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="budgetConstructionHeader.subAccount.subAccountName" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">budgetConstructionHeader.subAccount.subAccountName</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.x" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">30</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.x</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="methodToCall.returnToCaller.y" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.name">methodToCall.returnToCaller.y</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                  <elementProp name="tabStatesSize" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.name">tabStatesSize</stringProp>
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/budgetBudgetConstructionSelection.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=---------------------------11538186919912</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/index.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/index.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="${context}/portal.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${context}/portal.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSampler>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${protocol}://${host}:${port}${context}/budgetBudgetConstructionSelection.do?anchor=orgControlsAnchor&amp;refreshCaller=org.kuali.kfs.module.bc.document.web.struts.OrganizationSelectionTreeAction&amp;methodToCall=refresh&amp;docFormKey=BcDoc0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Keep-Alive</stringProp>
                    <stringProp name="Header.value">300</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Browser-derived headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${protocol}://${host}:${port}${context}/portal.jsp</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}:${port}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Keep-Alive</stringProp>
                  <stringProp name="Header.value">300</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

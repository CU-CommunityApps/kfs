# 1. PROJECT PROPERTIES

# directories

ddl.directory=ddl
licenses.directory=licenses
work.directory=work
source.directory=${work.directory}/src
database.directory=${work.directory}/db
webroot.directory=${work.directory}/web-root
help.directory=${webroot.directory}/static/help
webinf.directory=${webroot.directory}/WEB-INF
tags.directory=WEB-INF/tags
classes.directory=${webinf.directory}/classes
lib.directory=${webinf.directory}/lib
metainf.directory=${webroot.directory}/META-INF
test.source.directory=test/src
test.lib.directory=test/lib

build.directory=build
build.external.directory=${build.directory}/external
build.appserver.directory=${build.external.directory}/appserver
build.user.directory=${build.external.directory}/user
build.work.directory=${build.external.directory}/work
build.project.directory=${build.directory}/project

war.directory=${build.directory}/war
war.classes.directory=${war.directory}/WEB-INF/classes
make-source.target.directory=${war.classes.directory}
test.directory=${build.directory}/test
test.classes.directory=${test.directory}/classes
test.temp.directory=${test.directory}/temp
test.xml.results.directory=${test.directory}/xml
deployDir=${build.directory}
test.html.results.directory=${deployDir}/test

# files

context.file=context.xml
carol.file=carol.properties
log4j.file=log4j.properties
security.file=security.properties
configuration.file=configuration.properties
p6spy.file=spy.properties
web.file=web.xml
log4j.library.file=log4j-1.2.9.jar

# database independence

mysql.ojb.platform=MySQL
oracle.ojb.platform=Oracle9i
ojb.platform=${oracle.ojb.platform}
mysql.driver.class=com.mysql.jdbc.Driver
oracle.driver.class=oracle.jdbc.driver.OracleDriver
p6spy.driver.class=com.p6spy.engine.spy.P6SpyDriver
mysql.sequence.manager.class=org.apache.ojb.broker.platforms.KualiMySQLSequenceManagerImpl
oracle.sequence.manager.class=org.apache.ojb.broker.util.sequence.SequenceManagerNextValImpl
mysql.database.platform=org.kuali.core.dbplatform.KualiDBPlatformMySQL
oracle.database.platform=org.kuali.core.dbplatform.KualiDBPlatformOracle
mysql.workflow.database.platform=edu.iu.uis.eden.database.platform.MySQLPlatform
oracle.workflow.database.platform=edu.iu.uis.eden.database.platform.OraclePlatform

# unit testing

compile.min.memory=40m
compile.max.memory=128m

tests.includes=**/*Test.java
test.spring.shutdown=SpringShutdownTest

# application dependencies

cas.application=cas
rice.application=kr
workflow.application=en


# 2. INSTITUTION PROPERTIES

# determines where the build will look for your tomcat application server
appserver.home=/java/servers/apache-tomcat-5.5.16
appserver.lib.dir=${appserver.home}/common/lib
appserver.classes.dir=${appserver.home}/common/classes
appserver.deploy.dir=${appserver.home}/webapps
appserver.config.dir=${appserver.home}/conf
appserver.localhost.dir=${appserver.config.dir}/Catalina/localhost
appserver.work.dir=${appserver.home}/work/Catalina/localhost
# tells the build what the base url is for the tomcat instance where the application will be deployed
appserver.url=http://localhost:8080/

# determines what ${build.environment} the KualiConfigurationService considers your production environment
production.environment.code=prd
# determines where the build will look for your database drivers
drivers.directory=/java/drivers
# used by the build to configure ojb and determine the appropriate driver and KualiDBPlatform implementations to use
datasource.ojb.platform=Oracle9i
# used in datasource configuration to force transactions to timeout after they've run too long
transaction.timeout=14400
# determines the mail relay server used by MailService
mail.relay.server=mail-relay.iu.edu
# from email adress for mail sent by the batch framework (JobListener and other) and to email address for job failure messages
batch.mailing.list=kbatch-l@indiana.edu
# to and from email address for mail set by the StartupStatsMailAppender
configuration.manager.mailing.list=kfcm-l@indiana.edu
# determines how frequently the logging framework (Log4jConfigurer) will check for changes to log4j.properties
log4j.reload.minutes=5
# determines when the MemoryMonitor considers the appplication to have exceeded reasonable memory usage
memory.monitor.threshold=.85
# determines whether quartz (SchedulerService and scheduleJob) should be used for batch job scheduling and execution - impacts whether the batch scheduling ui works
use.quartz.scheduling=true
# determines whether the institutional user data is ever editable on the user document
maintain.users.locally=true
# determines whether cas requires that the application be secured via ssl
require.https=false
# determines whether the password field appears on the cas login screen and is validated
validate.password=false

# the files that define the spring context for the application - note that further configuration files may be specified in the module definitions
spring.source.files=org/kuali/kfs/KualiSpringBeansKfs.xml,org/kuali/module/ar/KualiSpringBeansAr.xml,\
org/kuali/module/budget/KualiSpringBeansBudget.xml,org/kuali/module/cams/KualiSpringBeansCams.xml,\
org/kuali/module/cg/KualiSpringBeansCg.xml,org/kuali/module/chart/KualiSpringBeansChart.xml,\
org/kuali/module/financial/KualiSpringBeansFinancial.xml,org/kuali/module/gl/KualiSpringBeansGl.xml,\
org/kuali/module/kra/KualiSpringBeansKra.xml,org/kuali/module/labor/KualiSpringBeansLabor.xml,\
org/kuali/module/pdp/KualiSpringBeansPdp.xml,org/kuali/module/purap/KualiSpringBeansPurap.xml,\
org/kuali/module/vendor/KualiSpringBeansVendor.xml
# the files that are included in the application spring context for unit testing
spring.test.files=SpringBeansTest.xml,org/kuali/kfs/KualiSpringBeansKfsTest.xml
# the base directory for external configuration files and work directories
external.config.directory=/opt
# the directory where secure application property files are located
security.directory=${external.config.directory}/sa_forms/java/${build.environment}/${ant.project.name}
# the single secure property file currently used by the application
security.property.file=${security.directory}/security.properties
# used by the DemostrationGradeEncryptionService and the workflow EncryptionService to encrypt / decrypt data in the database
encryption.key=7IC64w6ksLU
# the configuration property files that should be in the KualiConfigurationService context
property.files=classpath:ApplicationResources.properties,file:${security.property.file}
# the configuration property files that should be added to the KualiConfigurationService context for unit testing
property.test.files=classpath:test-configuration.properties
# the file that lists the tables and columns that should be processed by the PostDataLoadEncryptionStep
encrypt.attributes.properties.file=fieldsToEncrypt.properties
# the files that define the struts context for the application
struts.config.files=/WEB-INF/struts-config.xml
# the classes that wrap java constants for jsps and tags (see ApplicationInitializeListener)
jstl.constants.classnames=org.kuali.module.gl.GLConstants,org.kuali.module.kra.KraConstants,org.kuali.module.purap.PurapConstants,org.kuali.module.budget.BCConstants
# the directory that contains the non-secure property files that are nonetheless external to the deployed application
settings.directory=${external.config.directory}/j2ee/${build.environment}/${ant.project.name}
# the property file that contains the log4j configuration for the application
log4j.settings.file=${settings.directory}/log4j.properties

# the directory containing the log files output by the application
logs.directory=${external.config.directory}/logs/${build.environment}/${ant.project.name}
# the base working directory that is external to the application
external.work.directory=${external.config.directory}/${ant.project.name}/${build.environment}
# the base working directory for storage of note-associated attachments that are uploaded by users
attachments.directory=${external.work.directory}/attachments
# the base working directory for storage of batch input files
staging.directory=${external.work.directory}/staging
# the base working directory for oltp and batch report generation
reports.directory=${external.work.directory}/reports

# the base url of the application
application.url=${appserver.url}${ant.project.name}-${build.environment}
# the base url for environment-based static content that is external to the application
htdocs.url=${appserver.url}${ant.project.name}/${build.environment}/
# the base url for the logs directory, if accessible via the web
htdocs.logs.url=${htdocs.url}logs/
# the base urls for the staging directory, if accessible via the web
htdocs.staging.url=${htdocs.url}staging/
# the base url for static content like images and help that could reside within the application or be maintained by other group(s) on other server(s)
externalizable.static.content.url=${application.url}/static
# the base url for help content
externalizable.help.url=${externalizable.static.content.url}/help/
# the base url for images that can reside outside the application
externalizable.images.url=${externalizable.static.content.url}/images/

# rice & workflow
# determines whether the workflow processes that would normally be performed asynchronously are asynchronous (async) or are synchronous instead
rice.message.delivery=async
# how many times the service bus will try to send a message when it is encountering an exception that may be due to a resource outage, for example
rice.route.queue.max.retry.attempts=3
# the length of time the service bus will wait before retrying after each failed attempt to send a message
rice.route.queue.time.increment=1000

# are multiple applications at your institution using workflow, and do you therefore point to a central workflow deployment that they all use
rice.use.central.workflow.server=false

# the files that define the struts context for the rice struts module
rice.struts.config.files=/kr/WEB-INF/struts-config.xml
# the files that define the struts context for the workflow struts module
rice.workflow.struts.config.files=/en/WEB-INF/struts-config.xml
# the path to the file containing the log4j configuration for workflow
rice.workflow.log4j.settings.path=${log4j.settings.file}

# the directory where attachments uploaded through the workflow ui are stored
rice.workflow.attachment.directory=${attachments.directory}
# the directory where the xml files that define your workflow data should be stored when they are uploaded
rice.xml.directory=${rice.workflow.attachment.directory}/${build.environment}/${workflow.application}/xml
# the frequency wih which workflow checks for new files in the xml directory
rice.xml.poll.interval.secs=30
# the length of time workflow waits to do the first check of the xml directory when the application starts up
rice.xml.initial.delay.secs=10

# the base url for the rice struts module
rice.url=${application.url}/${rice.application}
# the base url for rice images that can reside outside the application
rice.externalizable.images.url=${application.url}/${rice.application}/static/images/
# the workflow deployment environment that this deployment of the application should use
rice.workflow.build.environment=${build.environment}
# the base url for the workflow struts module or the workflow application on the central server
rice.workflow.url=${application.url}/${workflow.application}


# 3. CONFIGURATION MANAGEMENT PROPERTIES

rice.name=rice
rice.kns.name=kns
rice.version=0.9.0.2
rice.output.directory=target
rice.output.directories=*/${rice.output.directory}/
rice.output.file.prefix=${rice.name}*
rice.output.lib.suffix=.jar
rice.output.web.suffix=-web.zip
rice.output.ddl.suffix=-ddl.zip
rice.output.licenses.suffix=-licenses.zip
rice.output.src.suffix=-sources.jar
rice.output.doc.suffix=-javadoc.jar
rice.excludes=testharness/**/**
rice.output.classes.directories=${rice.output.directories}classes/**/**
rice.sampleapp.directory=${rice.project.directory}/kns/src/test/webapp
rice.ddl.files=*/src/main/config/${ddl.directory}/**/*.ddl

workflow.name=kew
workflow.version=2.4.1.1-SNAPSHOT

projects.directory=/java/projects
dependencies.project.directory=${projects.directory}/kuali_dependencies
maven.home.directory=/java/tools/maven
rice.project.directory=${projects.directory}/${rice.name}
# still need this till licenses are moved into rice
workflow.project.directory=${projects.directory}/workflow
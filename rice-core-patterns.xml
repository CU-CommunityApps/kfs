<?xml version="1.0" encoding="UTF-8"?>
<rules>

	<rule name="CORE_moved_packages">
		<pattern>
			<match>org.kuali.rice.core.jaxb\.</match>
			<replacement>org.kuali.rice.core.util.jaxb.</replacement>
		</pattern>
		<!--  Blanket Package changes -->
		<pattern>
			<match>org.kuali.rice.core.resourceloader\.</match>
			<replacement>org.kuali.rice.core.api.resourceloader.</replacement>			
		</pattern>			
		<pattern>
			<match>org.kuali.rice.core.database.platform\.</match>
			<replacement>org.kuali.rice.core.framework.persistence.platform.</replacement>
		</pattern>
	</rule>
	
	<rule name="CORE_undo_moved_package_exceptions">
	</rule>
	

	<rule name="CORE_moved_classes" alsoRenameClass="true">
		<pattern>
			<match>org\.kuali\.rice\.core\.service\.EncryptionService</match>
			<replacement>org.kuali.rice.core.api.encryption.EncryptionService</replacement>
		</pattern>



					
		<pattern>
			<match>org.kuali.rice.core.util.WriterOutputStream</match>
			<replacement>org.apache.commons.io.output.WriterOutputStream</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.core.util.WriterOutputStream</match>
			<replacement>org.apache.commons.io.output.WriterOutputStream</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.core.util.KeyLabelPair</match>
			<replacement>org.kuali.rice.core.api.util.KeyValue</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.core.xml.TestSchemaValidationErrorHandler</match>
			<replacement>org.kuali.rice.core.xml.XmlTestSchemaValidationErrorHandler</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.core.xml.TestSchemaLSResourceResolver</match>
			<replacement>org.kuali.rice.core.xml.XmlTestSchemaLSResourceResolver</replacement>
		</pattern>
		<!-- 
		<pattern>
    			  <match>org.kuali.rice.ken.core.LifecycleBean</match>
			<replacement>org.kuali.rice.ken.core.LifecycleBean</replacement>
		</pattern>
		 -->
		<pattern>
			<match>org.kuali.rice.ken.exception.InvalidXMLException</match>
			<replacement>org.kuali.rice.core.api.util.xml.XmlException</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.core.proxy.TargetedInvocationHandler</match>
			<replacement>org.kuali.rice.core.api.reflect.TargetedInvocationHandler</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.ken.core.Lifecycle</match>
			<replacement>org.kuali.rice.core.lifecycle.Lifecycle</replacement>
		</pattern>
		<!-- Correction entry -->
		<pattern>
			<match>org.kuali.rice.core.lifecycle.Lifecycle</match>
			<replacement>org.kuali.rice.core.api.lifecycle.Lifecycle</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.ken.core.BaseLifecycle</match>
			<replacement>org.kuali.rice.core.lifecycle.BaseLifecycle</replacement>
		</pattern>
		<!-- Correction entry -->
		<pattern>
			<match>org.kuali.rice.core.lifecycle.BaseLifecycle</match>
			<replacement>org.kuali.rice.core.api.lifecycle.BaseLifecycle</replacement>
		</pattern>		
		<pattern>
			<match>org.kuali.rice.core.resourceloader.ContextualConfigLock</match>
			<replacement>org.kuali.rice.core.config.ContextualConfigLock</replacement>
		</pattern>
		<!-- Correction entry -->
		<pattern>
			<match>org.kuali.rice.core.config.ContextualConfigLock</match>
			<replacement>org.kuali.rice.core.api.config.property.ContextualConfigLock</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.core.resourceloader.ContextClassLoaderBinder</match>
			<replacement>org.kuali.rice.core.api.util.ContextClassLoaderBinder</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.core.util.WriterOutputStream</match>
			<replacement>org.apache.commons.io.output.WriterOutputStream</replacement>
		</pattern>
		<pattern>
			<match>org.kuali.rice.ksb.messaging.web.ValueLabelPair</match>
			<replacement>org.kuali.rice.core.api.util.KeyValue</replacement>
		</pattern>			
		

		<pattern>
			<match>org.kuali.rice.core.config.ConfigContext</match>
			<replacement>org.kuali.rice.core.api.config.property.ConfigContext</replacement>			
		</pattern>
		<pattern>
			<match>uk.ltd.getahead.dwr.create.SpringCreator</match>
			<replacement>org.directwebremoting.spring.SpringCreator</replacement>			
		</pattern>
		
		<pattern>
			<match>org\.kuali\.rice\.kns\.util\.Ojb([A-Za-z0-9]+)Conversion</match>
			<replacement>org.kuali.rice.core.framework.persistence.ojb.conversion.Ojb$1Conversion</replacement>
		</pattern>
		
		<pattern>
			<match>org\.kuali\.rice\.core\.util\.RiceConstants</match>
			<replacement>org.kuali.rice.core.api.util.RiceConstants</replacement>
		</pattern>			
		
	</rule>
	
	<rule name="CORE_special_replacements">
		<pattern>
			<match>import org\.kuali\.rice\.core\.util\.ClassLoaderUtils</match>
			<replacement>import org.kuali.rice.core.api.util.ClassLoaderUtils</replacement>
		</pattern>
		<pattern>
			<match>BaseResourceLoader.wrap\(\)</match>
			<replacement>BaseResourceLoader.postProcessService()</replacement>
		</pattern>
		<pattern>
			<match>BaseResourceLoader.wrap\(\)</match>
			<replacement>BaseResourceLoader.postProcessService()</replacement>
		</pattern>
		<pattern>
			<match>ConfigContext.getRootConfig\(\)</match>
			<replacement>ConfigContext.getCurrentContextConfig()</replacement>
		</pattern>
		<pattern>
			<match>Config.DEFAULT_NOTE_CLASS</match>
			<replacement>Config.DEFAULT_KEW_NOTE_CLASS</replacement>
		</pattern>
		<pattern>
			<match>Config.getDefaultNoteClass\(\)</match>
			<replacement>Config.getDefaultKewNoteClass()</replacement>
		</pattern>
		<pattern>
			<match>Config.overrideProperty</match>
			<replacement>Config.putProperty</replacement>
		</pattern>
		<pattern>
			<match>new KeyValue</match>
			<replacement addImport="org.kuali.rice.core.api.util.KeyValue:org.kuali.rice.core.api.util.KeyValue;
import org.kuali.rice.core.api.util.ConcreteKeyValue">new ConcreteKeyValue</replacement>
		</pattern>
		<pattern>
			<match>public void beforeInsert\(([^{]+)\{</match>
			<replacement>@Override protected void prePersist() {</replacement>
		</pattern>
		<pattern>
			<match>super\.beforeInsert\(([^)]*)\);</match>
			<replacement>super.prePersist();</replacement>
		</pattern>
		<pattern>
			<match>public void beforeUpdate\(([^{]+)\{</match>
			<replacement>@Override protected void preUpdate() {</replacement>
		</pattern>
		<pattern>
			<match>super\.beforeUpdate\(([^)]*)\);</match>
			<replacement>super.preUpdate();</replacement>
		</pattern>
	</rule>	
</rules>

# This property sets KFS to configure itself to work with a standalone Rice instance 
rice.standalone=false

# Sets the build process to install a Rice instance locally in the development Tomcat server
deploy.local.rice.server=false

rice.config.property.file=${appserver.home}/conf/rice-config.xml

rice.server.datasource.username=${datasource.username}
rice.server.datasource.password=${datasource.password}
rice.server.datasource.pool.size=${datasource.pool.size}
rice.server.datasource.connection.timeout=${datasource.connection.timeout}
rice.server.datasource.validating.query=${datasource.validating.query}
rice.server.datasource.maximum.cached.preparedstatements=${datasource.maximum.cached.preparedstatements}

# Where, on the classpath, to pull the OJB properties file for the rice components
rice.custom.ojb.properties=${ojb.properties.file}

# Base Rice version properties
rice.name=rice
rice.version=1.0.1-SNAPSHOT
rice.output.licenses.suffix=-licenses.zip
rice.server.war.file.name=${rice.name}-web-${rice.version}.war

rice.application=kr
kew.application=kew
ksb.application=ksb
kim.application=kim

# the KSB always runs locally
rice.ksb.url=${application.url}/${ksb.application}


# a logical name for the ${keystore.file}, should not need to be changed during development
keystore.alias=rice
# the password that will open the keystore
keystore.password=r1c3pw
# used by the DemonstrationGradeEncryptionService and the workflow EncryptionService to encrypt / decrypt data in the database
encryption.key=7IC64w6ksLU

# Determines whether data should be unmasked
rice.enable.nonproduction.data.unmasking=false 

# rice & notification
# determines if notifications coming out of KEW should be forwarded to KEN
rice.kew.enableKENNotification=false

# the files that define the struts context for the rice struts module
rice.struts.config.files=/${rice.application}/WEB-INF/struts-config.xml
rice.kns.struts.config.files=/${rice.application}/WEB-INF/struts-config.xml
# the files that define the struts context for the kew struts module
rice.kew.struts.config.files=/${kew.application}/WEB-INF/struts-config.xml
# the path to the file containing the log4j configuration for workflow
rice.kew.log4j.settings.path=${log4j.settings.file}
# the files that define the struts context for the ksb struts module
rice.ksb.struts.config.files=/${ksb.application}/WEB-INF/struts-config.xml
# the files that define the struts context for the kim struts module
rice.kim.struts.config.files=/${kim.application}/WEB-INF/struts-config.xml

# the directory where attachments uploaded through the workflow ui are stored
rice.kew.attachment.directory=${attachments.directory}
# the directory where the xml files that define your workflow data should be stored when they are uploaded
rice.kew.xml.directory=${staging.directory}/workflow
# the frequency wih which workflow checks for new files in the xml directory
rice.kew.xml.poll.interval.secs=30
# the length of time workflow waits to do the first check of the xml directory when the application starts up
rice.kew.xml.initial.delay.secs=60

# globally disable or enable the outbox (screen to which there is a link in the action list that shows the documents a user has taken action on)
rice.kew.actionlist.outbox=false

# Rice web service configuration
rice.kew.secure.workflowdocument.javaservice.endpoint=true
rice.kew.secure.workflowutility.javaservice.endpoint=true
rice.kew.simpleDocumentActionsService.security=true
rice.kew.secure.workflowutility.soapservice.endpoint=true
rice.kim.soapExposedService.jaxws.security=true


# determines whether the workflow processes that would normally be performed asynchronously are asynchronous (async) or are synchronous instead
rice.ksb.message.delivery=async
# how many times the service bus will try to send a message when it is encountering an exception that may be due to a resource outage, for example
rice.ksb.route.queue.max.retry.attempts=3
# the length of time the service bus will wait before retrying after each failed attempt to send a message
rice.ksb.route.queue.time.increment=1000
# the number of threads available to process service bus messages, i.e. deal with queued workflow documents
rice.ksb.thread.pool.size=20

rice.ksb.batch.mode=false

# KIM Cache Settings

rice.kim.cache.entity.max.size=3000
rice.kim.cache.entity.max.age.seconds=3600
rice.kim.cache.group.max.size=3000
rice.kim.cache.group.max.age.seconds=3600
rice.kim.cache.role.max.size=3000
rice.kim.cache.role.max.age.seconds=300
rice.kim.cache.permission.max.size=3000
rice.kim.cache.permission.max.age.seconds=30
rice.kim.cache.responsibility.max.size=3000
rice.kim.cache.responsibility.max.age.seconds=30
rice.kim.cache.person.max.size=3000
rice.kim.cache.person.max.age.seconds=3600

# KNS Cache Settings

rice.kns.cache.parameter.max.size=200
rice.kns.cache.parameter.max.age.seconds=3600
rice.kns.cache.nonDatabaseComponent.max.size=50
rice.kns.cache.nonDatabaseComponent.max.age.seconds=3600

rice.kns.cache.methodresult.max.size=1000
rice.kns.cache.methodresult.max.age.seconds=60
rice.kns.cache.methodresult.nocopy.max.size=1000
rice.kns.cache.methodresult.nocopy.max.age.seconds=600

rice.kns.session.document.cache.size=1000


# properties for Action List notification
rice.kew.email.reminder.lifecycle.enabled=false
rice.kew.mail.smtp.host=${mail.relay.server}
rice.kew.mail.transport.protocol=${mail.transport.protocol}

# Needed by DWR
classpath.resource.prefix=/WEB-INF/classes/

# whether to validate the DD upon startup
validate.data.dictionary=true
validate.ebo.references=true



#############################
##  Deployment properties
##     These properties affect the nature of deployment by the build script.
#############################

#is.local.build=true


# if this property is set, the build will copy files from this location into the project lib directory and to the server war
#additional.lib.directory=
#additional.source.directory=
#additional.test.lib.directory=
#additional.test.source.directory=

# Set the property below to add additional properties to the 
# configuration.properties file that is deployed with the application.
# It will be tokenized using the same properties available to 
# build/project/configuration.properties.
institutional.configuration.file=

# allows insertion of custom content into the tomcat context file
custom.context.content=


# the core configuration property files that should be available in the KualiConfigurationService context, along with configuration.properties
core.property.files=classpath:KR-ApplicationResources.properties,classpath:ApplicationResources.properties
# the institution specific configuration property files that should be available in the KualiConfigurationService context, along with configuration.properties
institution.property.files=
# all the configuration property files that should be available in the KualiConfigurationService context, along with configuration.properties
property.files=${core.property.files}${institution.property.files}

# the core configuration property files that should be added to the KualiConfigurationService context for unit testing
core.property.test.files=classpath:test-configuration.properties
# the institution specific configuration property files that should be added to the KualiConfigurationService context for unit testing
institution.property.test.files=
# all the configuration property files that should be added to the KualiConfigurationService context for unit testing
property.test.files=${core.property.test.files}${institution.property.test.files}

feedback.link.url=https://test.kuali.org/jira/secure/CreateIssue.jspa?pid=10091&amp;issuetype=1
licensing.contact.email=license@kuali.org


#########################
##  Various properties used by the build process
#########################

non.java.resources=**/*.properties,**/*.dtd,**/*.xml,**/*.html,**/*.xsd,**/*.jasper,**/*.jrxml,META-INF/*
tests.non.java.resources=${non.java.resources},**/*.txt,**/*.sql

# miscellaneous build.xml configuration

compile.min.memory=128M
compile.max.memory=512M

run.tests.min.memory=384M
run.tests.max.memory=1024M
run.tests.max.permsize=128M

run.postloadencrypt.min.memory=384M
run.postloadencrypt.max.memory=1024M
run.postloadencrypt.max.permsize=256M

tests.includes=**/*Test.java
tests.startup.class=ContinuousIntegrationStartup
tests.shutdown.class=ContinuousIntegrationShutdown

javadoc.max.memory=512M

# determines what ${build.environment} the KualiConfigurationService considers your production environment
production.environment.code=prd

# KFS Report Writer Service
report.writer.service.new.line.characters=\\n

# indicates whether schema files should be rebuilt or not
#dont.filter.project.schema=

# indicates whether schema validation should be built from data dictionary, otherwise validation is basic xsd types only
use.dd.schema.validation=false

nonproduction.notification.mailing.list=${batch.mailing.list}
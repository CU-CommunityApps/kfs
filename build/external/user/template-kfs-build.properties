#
# Copyright 2010 The Kuali Foundation
# 
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.opensource.org/licenses/ecl2.php
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# this property determines whether the build will do a local deployment or package for a deployment on the test node
# comment out if you want to run the test deployment process locally to evaluate the output
is.local.build=

base.directory=@input.base.directory@

# these properties are used for bypassing sections of clean and filter targets
#do.filter.project.help
#dont.filter.project.rice
#dont.filter.project.spring.ide
#dont.clean.local.work
# indicates whether schema files should be rebuilt
# NOTE: you will need to comment this out for one dist-local in order to generated the needed XSD files 
dont.filter.project.schema=

# this property can be used to turn p6spy logging on and off (we use p6spy to log the sql generated by ojb)
use.p6spy=false
# this property can be used to turn the batch schedule on and off
use.quartz.scheduling=false

# indicates whether schema validation should be built from data dictionary, otherwise validation is basic xsd types only
use.dd.schema.validation=false

# this property determines what tests are included when the test target is executed via test-local
tests.includes=**/*Test.java

# this property determines what log statements will be printed by default and whether the logs go to the log file or standard out
appenders=INFO, LogFile, StdOut

# this is the kuali and workflow environment
build.environment=dev

# these properties are related to ${build.environment} - you should review them, if you change that property
# you will need to obtain the values for these properties for a given ${build.environment} from someone on the project
datasource.username=@input.datasource.username@
datasource.password=@input.datasource.password@
mysql.datasource.url=@input.mysql.datasource.url@
oracle.datasource.url=@input.oracle.datasource.url@
# valid values are Oracle9i and MySQL
datasource.ojb.platform=@input.datasource.ojb.platform@

# determines the mail relay server used by MailService
mail.relay.server=[[FILL ME IN]]
# from email address for mail sent by the batch framework (JobListener and other) and to email address for job failure messages
# this property determines where exception e-mails are sent when batch jobs fail - fill in your e-mail address
batch.mailing.list=[[FILL ME IN]]
# to/from email address for mail sent by the incident reporting framework (KualiExceptionIncident, etc.)
# this property determined where exception e-mails are sent when the OLTP incident report is used - fill in your email address
incident.mailing.list=[[FILL ME IN]]

# change this to true this line to deploy a local rice instance in your tomcat server
deploy.local.rice.server=false
# change to true to run kfs with a standalone rice instance
rice.standalone=false
rice.server.datasource.username=${datasource.username}
rice.server.datasource.password=${datasource.password}

tomcat.version=5

#rice.ksb.batch.mode=true

# Use these properties to include institution-specific build and source files
#institution.project.directory=../your-project
#institution.build.directory=${institution.project.directory}/build
#institution.build.properties.file=${institution.build.directory}/build.properties
#institution.configuration.properties.file=${institution.build.directory}/project/configuration.properties
#institution.external.build.directory=${institution.build.directory}/external
#institution.appserver.directory=${institution.external.build.directory}/appserver
#institution.settings.directory=${institution.external.build.directory}/settings
#institution.security.directory=${institution.external.build.directory}/security
#institution.work.directory=${institution.external.build.directory}/work
#institution.source.directory=${institution.project.directory}/src
#institution.lib.directory=${institution.project.directory}/lib
#institution.test.source.directory=${institution.project.directory}/test/src
#institution.test.lib.directory=${institution.project.directory}/test/lib
#institution.web.content.directory=${institution.project.directory}/web-root
!
! Copyright 2006 The Kuali Foundation
! 
! Licensed under the Educational Community License, Version 2.0 (the "License");
! you may not use this file except in compliance with the License.
! You may obtain a copy of the License at
! 
! http://www.opensource.org/licenses/ecl2.php
! 
! Unless required by applicable law or agreed to in writing, software
! distributed under the License is distributed on an "AS IS" BASIS,
! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
! See the License for the specific language governing permissions and
! limitations under the License.
! DO NOT add comments before the blank line below, or they will disappear.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $Id: 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#include "kul_error.h"
#include "kul_check.h"
#include "kul_common.h"
#include "kul_enter.h"


begin-heading 14

   #debug display 'entering HEADING'

   if #change_page_number = 1
      #debug display '- change_page_number is set'
      let #page_number = 1
      let #change_page_number = 0
   else
      let #page_number = #page_number + 1
   end-if

   #debug display 'current page number is ' NOLINE
   #debug display #page_number

   if #print_lf = 1
      #debug display '- printing linefeed'
      let $lb = chr(12) 
      print $lb (1,1)
      print ' .' (,2) 
   end-if

   ! add a couple spaces to the first line on each page.
   print '  ' (,1)
   print $report_date (+2,2)
   print 'PAGE' (,121)
   print #page_number (,125,8) edit 99999999


   print 'FISCAL OFFICER:' (+1,81)
   print $old_account_nbr (,105,7)
   print $old_sub_acct_nbr (,114,5)
   print $old_fin_coa_cd (,121,2)

   print 'FOR THE MONTH ENDING ' (+1,2)
   print $display_for_month (,23)
   print 'EFFECTIVE DATE:' (,36)
   print $old_acct_effect_dt (,53)
   print 'FISCAL OFFICER:' (,81)
   print $old_mgr_person_nm (,105,27)

   print 'PERIOD:' (+1,2)
   print $display_univ_fscpd_cd (,10) edit 99
   print 'EXPIRATION DATE:' (,36)
   print $old_acct_expiration_dt (,53)
   print 'ACCOUNT TITLE:' (,81)
   print $old_account_nm (,105,27)

   print 'ACCOUNT STATUS' (+1,2)
   print 'SUB FUND GROUP:' (,36)
   print $old_sub_fund_grp_desc (,52)
   print 'SUB-ACCOUNT TITLE:' (,81)
   print $old_sub_acct_nm (,105,27)

   print 'REPORT ID:  ACCT_STAT' (+1,2)
   print 'ORGANIZATION TITLE:' (,81)
   print $old_org_nm (,105, 27)

   print 'RC TITLE:' (+1,81)
   print $old_rc_shrt_nm (,105,27)

   print $old_mo_nm (+2,62)
   print 'PROJECTED' (,109)

   print 'SUB' (+1,20)
   print 'OBJECT' (,29)
   print 'CURRENT' (,42)
   print 'ACTUAL' (,61)
   print 'YTD' (,80)
   print 'OUTSTANDING' (,92)
   print 'AVAILABLE' (,109)
   print 'PCT OF' (,126)
   

   print 'OBJECT' (+1,5)
   print 'OBJECT' (,18)
   print 'CODE' (,30)
   print 'BUDGET' (,42)
   print 'TRANSACTIONS' (,58)
   print 'ACTUAL' (,78)
   print 'ENCUMBRANCE' (,92)
   print 'BALANCE' (,110)
   print 'BUDGET' (,126)


   print '------------' (+1,2)
   print '------------' (,15)
   print '--------' (,28)
   print '----------------' (,37)
   print '----------------' (,56)
   print '----------------' (,73)
   print '--------------' (,90)
   print '----------------' (,105)
   print '------' (,126)

   let #line_count = 0
   let #print_lf = 0

end-heading




begin-footing 8

   if #print_footer = 1 
 
      print 'INFORMATION ABOUT THIS REPORT' (+2,2)
      print 'THE YTD ACTUAL COLUMN DOES NOT INCLUDE BEGINNING BALANCES, THEREFORE THE AMOUNTS SHOWN FOR ASSETS,' (+1,2)
      print 'LIABILITIES, AND FUND BALANCE DO NOT REFLECT ACTUAL BALANCE SHEET TOTALS.' (+1,2)
      print 'ASTERISKS HAVE BEEN ADDED NEXT TO THE VARIOUS SUBTOTALS TO HELP IDENTIFY THE LEVEL OF SUBTOTALING.' (+1,2)
      print 'OBJECT TYPE SUBTOTALS WILL HAVE FOUR ASTERISKS, CONSOLIDATION  SUBTOTALS WILL HAVE' (+1,2)
      print 'THREE ASTERISKS, AND LEVEL SUBTOTALS WILL HAVE TWO ASTERISKS.' (+1,2)

      let #print_footer = 0

   end-if

end-footing




begin-program

   Do GetParms
   Do Main

end-program



begin-procedure GetParms

   Do SetConstantGlobal

   input $fiscal_year 'Enter Fiscal Year'
   input $fiscal_period 'Enter Fiscal Period' 

   let $display_univ_fscpd_cd = $fiscal_period

   let #calendar_yr = to_number( $fiscal_year )
   let #fiscal_period = to_number( $fiscal_period )
   if ( #fiscal_period <= 6 )
      let #calendar_yr = #calendar_yr - 1
   end-if
   let $calendar_yr = to_char( #calendar_yr )

   ! determine the number of days in February for the current year
   Do SetFebruaryEnd( #calendar_yr, $feb_day_last )

   evaluate $display_univ_fscpd_cd
      when = '01'
         let $display_for_month = 'JULY 31,' || $calendar_yr
         break
      when = '02'
         let $display_for_month = 'AUG. 31,' || $calendar_yr
         break  
      when = '03'
         let $display_for_month = 'SEP. 30,' || $calendar_yr
         break
      when = '04'
         let $display_for_month = 'OCT. 31,' || $calendar_yr
         break
      when = '05'
         let $display_for_month = 'NOV. 30,' || $calendar_yr
         break
      when = '06'
         let $display_for_month = 'DEC. 31,' || $calendar_yr
         break
      when = '07'
         let $display_for_month = 'JAN. 31,' || $calendar_yr
         break
      when = '08'
         let $display_for_month = 'FEB. ' || $feb_day_last || ',' || $calendar_yr
         break
      when = '09'
         let $display_for_month = 'MAR. 31,' || $calendar_yr
         break
      when = '10'
         let $display_for_month = 'APR. 30,' || $calendar_yr
         break
      when = '11'
         let $display_for_month = 'MAY 31,' || $calendar_yr
         break
      when = '12'
         let $display_for_month = 'JUNE 30,' || $calendar_yr
         break
      when = '13'
         let $display_for_month = 'JUNE 30, ' || $calendar_yr
         break
      when-other
         let $display_for_month = ' '
   end-evaluate

   let $fiscal_year_w_quotes = '''' || $fiscal_year || ''''
   let $fiscal_period_w_quotes = '''' || $fiscal_period || ''''

end-procedure







begin-procedure Main

   ! Set any variables
   let #page_number = 0
   let #total_object_bdgt_ytd = 0
   let #total_object_act_trn = 0
   let #total_object_actual_ytd = 0
   let #total_object_ot_encb = 0
   let #total_object_av_bl = 0
   let #total_objcon_bdgt_ytd = 0
   let #total_objcon_act_trn = 0
   let #total_objcon_actual_ytd = 0
   let #total_objcon_ot_encb = 0
   let #total_objcon_av_bl = 0
   let #total_objlvl_bdgt_ytd = 0
   let #total_objlvl_act_trn = 0
   let #total_objlvl_actual_ytd = 0
   let #total_objlvl_ot_encb = 0
   let #total_objlvl_av_bl = 0
   let #just_printed_objlvl = 0
   let #just_change_acct = 1



BEGIN-SELECT
TO_CHAR(SYSDATE, 'MM/DD/YY')                 &report_date
a.account_nbr                                &account_nbr        ()        ON-BREAK LEVEL=1 PRINT=NEVER PROCEDURE=MakeNewPageRenum
a.account_nbr as a2                                              ()        ON-BREAK LEVEL=1 PRINT=NEVER AFTER=PrintFooter
a.sub_acct_nbr                               &sub_acct_nbr       ()        ON-BREAK LEVEL=1 PRINT=NEVER PROCEDURE=MakeNewPage
a.account_nbr || a.sub_acct_nbr as a3                            ()        ON-BREAK LEVEL=2 PRINT=NEVER AFTER=PrintCashBalance
a.fin_coa_cd                                 &fin_coa_cd
TO_CHAR(a.acct_effect_dt,'MM/DD/YYYY')       &acct_effect_dt
a.person_nm                                  &mgr_person_nm
TO_CHAR(a.acct_expiration_dt,'MM/DD/YYYY')   &acct_expiration_dt
a.account_nm                                 &account_nm
a.sub_fund_grp_cd                            &sub_fund_grp_cd
a.sub_fund_grp_desc                          &sub_fund_grp_desc
a.sub_acct_nm                                &sub_acct_nm
a.org_nm                                     &org_nm
a.rc_shrt_nm                                 &rc_shrt_nm
a.fin_cons_obj_cd                            &fin_cons_obj_cd
a.object_type                                &object_type        
a.object_type as o1                                              ()        ON-BREAK LEVEL=3 PRINT=NEVER BEFORE=PrintObjectInfo
a.object_type as o2                                              ()        ON-BREAK LEVEL=4 PRINT=NEVER AFTER=PrintObjectSubtotal
a.object_name                                &object_name
a.fin_objcon_rsrt_cd                                             ()        ON-BREAK LEVEL=5 PRINT=NEVER AFTER=PrintObjconSubtotal
a.fin_conobj_shrt_nm                         &fin_conobj_shrt_nm
a.fin_objlvl_rsrt_cd                                             ()        ON-BREAK LEVEL=6 PRINT=NEVER AFTER=PrintObjlvlSubtotal
a.fin_objlvl_shrt_nm                         &fin_objlvl_shrt_nm
a.fin_obj_cd_shrt_nm                                             (+1,2,12)
a.fin_subobj_shrt_nm                                             (,15,12)
a.object_code                                                    (,28,8)
sum(a.bdgt_ytd)                              &bdgt_ytd           (,38,15)  edit 99,999,999.99pf
max(a.budget_trans)                          &budget_trans       (,54,1)
sum(a.act_trn)                               &act_trn            (,57,15)  edit 99,999,999.99pf
sum(a.actual_ytd)                            &actual_ytd         (,74,15)  edit 99,999,999.99pf
sum(a.ot_encb)                               &ot_encb            (,90,14)  edit 9,999,999.99pf
sum(a.av_bl)                                 &av_bl              (,106,15) edit 99,999,999.99pf
max(a.begin_cash)                            &begin_cash
max(a.cash_balance)                          &cash_balance
a.mo_nm                                      &mo_nm
DECODE(sum(a.bdgt_ytd), 0, 0, (sum(a.actual_ytd) + sum(a.ot_encb)) / sum(a.bdgt_ytd) * 100) (,124,7) edit 999.99pf


   let $report_date = &report_date
   let $old_account_nbr = &account_nbr
   let $old_sub_acct_nbr = &sub_acct_nbr
   let $old_fin_coa_cd = &fin_coa_cd
   let $old_acct_effect_dt = &acct_effect_dt
   let $old_mgr_person_nm = &mgr_person_nm
   let $old_acct_expiration_dt = &acct_expiration_dt
   let $old_account_nm = &account_nm
   let $old_sub_fund_grp_cd = &sub_fund_grp_cd
   let $old_sub_fund_grp_desc = &sub_fund_grp_desc
   let $old_sub_acct_nm = &sub_acct_nm
   let $old_org_nm = &org_nm
   let $old_rc_shrt_nm = &rc_shrt_nm
   let $old_fin_cons_obj_cd = &fin_cons_obj_cd
   let $old_object_name = &object_name
   let $old_fin_conobj_shrt_nm = &fin_conobj_shrt_nm
   let $old_fin_objlvl_shrt_nm = &fin_objlvl_shrt_nm
   let #bdgt_ytd = &bdgt_ytd
   let #act_trn = &act_trn
   let #actual_ytd = &actual_ytd
   let #ot_encb = &ot_encb
   let #av_bl = &av_bl
   let $old_begin_cash = &begin_cash
   let $old_cash_balance = &cash_balance
   let $old_mo_nm = &mo_nm

   let #total_object_bdgt_ytd = #total_object_bdgt_ytd + #bdgt_ytd
   let #total_object_act_trn = #total_object_act_trn + #act_trn
   let #total_object_actual_ytd = #total_object_actual_ytd + #actual_ytd
   let #total_object_ot_encb = #total_object_ot_encb + #ot_encb
   let #total_object_av_bl = #total_object_av_bl + #av_bl

   let #total_objcon_bdgt_ytd = #total_objcon_bdgt_ytd + #bdgt_ytd
   let #total_objcon_act_trn = #total_objcon_act_trn + #act_trn
   let #total_objcon_actual_ytd = #total_objcon_actual_ytd + #actual_ytd
   let #total_objcon_ot_encb = #total_objcon_ot_encb + #ot_encb
   let #total_objcon_av_bl = #total_objcon_av_bl + #av_bl

   let #total_objlvl_bdgt_ytd = #total_objlvl_bdgt_ytd + #bdgt_ytd
   let #total_objlvl_act_trn = #total_objlvl_act_trn + #act_trn
   let #total_objlvl_actual_ytd = #total_objlvl_actual_ytd + #actual_ytd
   let #total_objlvl_ot_encb = #total_objlvl_ot_encb + #ot_encb
   let #total_objlvl_av_bl = #total_objlvl_av_bl + #av_bl

   let #just_printed_objlvl = 0

FROM     kul_acct_stat_v a

WHERE    a.univ_fiscal_yr = [$fiscal_year_w_quotes]
AND      a.fin_object_cd <> '8000'
AND      a.zerosum > 0

GROUP BY a.fin_coa_cd,
         a.account_nbr,
         a.account_nm,
         a.acct_effect_dt,
         a.acct_expiration_dt,
         a.sub_fund_grp_cd,
         a.sub_fund_grp_desc,
         a.person_nm,
         a.sub_acct_nbr,
         a.sub_acct_nm,
         a.org_nm,
         a.rc_shrt_nm,
         a.fin_cons_obj_cd,
         a.object_type,
         a.object_name,
         a.fin_objcon_rsrt_cd,
         a.fin_conobj_shrt_nm,
         a.fin_objlvl_rsrt_cd,
         a.fin_objlvl_shrt_nm,
         a.object_code,
         a.fin_obj_cd_shrt_nm,
         a.fin_subobj_shrt_nm,
         a.mo_nm
         
ORDER BY a.account_nbr,
         a.sub_acct_nbr,
         a.object_type,
         a.object_name,
         a.fin_objcon_rsrt_cd,
         a.fin_conobj_shrt_nm,
         a.fin_objlvl_rsrt_cd,
         a.fin_objlvl_shrt_nm,
         a.object_code,
         a.fin_obj_cd_shrt_nm,
         a.fin_subobj_shrt_nm

END-SELECT



   Do MakeNewPageRenum



BEGIN-SELECT
TO_CHAR(SYSDATE, 'MM/DD/YY')                 &report_date2
a.account_nbr                                &account_nbr2       ()        ON-BREAK LEVEL=1 PRINT=NEVER PROCEDURE=MakeNewPageRenum
a.account_nbr as a2                                              ()        ON-BREAK LEVEL=1 PRINT=NEVER AFTER=PrintFooter
a.sub_acct_nbr                               &sub_acct_nbr2      ()        ON-BREAK LEVEL=1 PRINT=NEVER PROCEDURE=MakeNewPage
a.account_nbr || a.sub_acct_nbr as a3                            ()        ON-BREAK LEVEL=2 PRINT=NEVER AFTER=PrintCashBalance2
a.fin_coa_cd                                 &fin_coa_cd2
TO_CHAR(a.acct_effect_dt,'MM/DD/YYYY')       &acct_effect_dt2
a.person_nm                                  &mgr_person_nm2
TO_CHAR(a.acct_expiration_dt,'MM/DD/YYYY')   &acct_expiration_dt2
a.account_nm                                 &account_nm2
a.sub_fund_grp_cd                            &sub_fund_grp_cd2
a.sub_fund_grp_desc                          &sub_fund_grp_desc2
b.sub_acct_nm                                &sub_acct_nm2
a.org_nm                                     &org_nm2
a.rc_shrt_nm                                 &rc_shrt_nm2
a.begin_cash                                 &begin_cash2
a.cash_balance                               &cash_balance2
a.mo_nm                                      &mo_nm2


   let $report_date = &report_date2
   let $old_account_nbr = &account_nbr2
   let $old_sub_acct_nbr = &sub_acct_nbr2
   let $old_fin_coa_cd = &fin_coa_cd2
   let $old_acct_effect_dt = &acct_effect_dt2
   let $old_mgr_person_nm = &mgr_person_nm2
   let $old_acct_expiration_dt = &acct_expiration_dt2
   let $old_account_nm = &account_nm2
   let $old_sub_fund_grp_cd = &sub_fund_grp_cd2
   let $old_sub_fund_grp_desc = &sub_fund_grp_desc2
   let $old_sub_acct_nm = &sub_acct_nm2
   let $old_org_nm = &org_nm2
   let $old_rc_shrt_nm = &rc_shrt_nm2
   let $old_begin_cash = &begin_cash2
   let $old_cash_balance = &cash_balance2
   let $old_mo_nm = &mo_nm2


FROM (

	SELECT
	account_nbr,
	MAX(sub_acct_nbr) as sub_acct_nbr,
	fin_coa_cd,
	acct_effect_dt,
	person_nm,
	acct_expiration_dt,
	account_nm,
	sub_fund_grp_cd,
	sub_fund_grp_desc,
	org_nm,
	rc_shrt_nm,
        mo_nm,
	MAX(begin_cash) as begin_cash,
	MAX(cash_balance) as cash_balance,
	SUM(DECODE(fin_object_cd, '8000', 0, '9899', 0, 1)) as screen_record
	
	FROM   kul_acct_stat_v a

	WHERE  univ_fiscal_yr = $fiscal_year 
	AND    (fin_object_cd = '8000' OR zerosum > 0)

        GROUP BY account_nbr,
	         fin_coa_cd,
	         acct_effect_dt,
	         person_nm,
	         acct_expiration_dt,
	         account_nm,
	         sub_fund_grp_cd,
	         sub_fund_grp_desc,
	         org_nm,
	         rc_shrt_nm,
                 mo_nm
     ) a,
     ca_sub_acct_t b 

WHERE a.screen_record = 0    
AND   (a.cash_balance <> 0 OR a.begin_cash <> 0)
AND   a.fin_coa_cd = b.fin_coa_cd (+)
AND   a.account_nbr = b.account_nbr (+)
AND   a.sub_acct_nbr = b.sub_acct_nbr (+)

ORDER BY a.account_nbr,
         a.sub_acct_nbr

END-SELECT




end-procedure




begin-procedure MakeNewPageRenum

   new-page
   let #just_change_acct = 1
   let #change_page_number = 1

end-procedure


begin-procedure PrintFooter

   let #print_footer = 1

end-procedure


begin-procedure PrintCashBalance

   if $old_sub_fund_grp_cd <> 'GENFND'
      print 'JULY 1 CASH BALANCE: ' (+1,2)
      print $old_begin_cash    (,23) edit 999,999,999,999.99pf
      print 'CURRENT CASH BALANCE: ' (,47)
      print $old_cash_balance  (,69) edit 999,999,999,999.99pf
   end-if

end-procedure


begin-procedure PrintCashBalance2

   print 'JULY 1 CASH BALANCE: ' (+2,2)
   print $old_begin_cash    (,23) edit 999,999,999,999.99pf
   print 'CURRENT CASH BALANCE: ' (,47)
   print $old_cash_balance  (,69) edit 999,999,999,999.99pf

end-procedure


begin-procedure MakeNewPage

   new-page

end-procedure


begin-procedure PrintObjectInfo

   let $object_name = &object_name

   if #just_change_acct = 1
      print $object_name (+2,2)      
      let #just_change_acct = 0
   else
      print $object_name (+1,2)
   end-if
   print ' ' (+1,2)

end-procedure


begin-procedure PrintObjectSubtotal

   if #total_object_bdgt_ytd <> 0
      let #total_object_pctbdgt = (#total_object_actual_ytd + #total_object_ot_encb) / #total_object_bdgt_ytd * 100
   else
      let #total_object_pctbdgt = 0
   end-if

   let $total_object_bdgt_ytd = #total_object_bdgt_ytd 
   let $total_object_act_trn = #total_object_act_trn 
   let $total_object_actual_ytd = #total_object_actual_ytd 
   let $total_object_ot_encb = #total_object_ot_encb 
   let $total_object_av_bl = #total_object_av_bl 
   let $total_object_pctbdgt = #total_object_pctbdgt

   if $old_object_name = 'EXPENDITURES'

      print ' ' (+1,2)
      let $line = '**** EXPENDITURES NET TRANSFERS IN'

      print $line (,4)
      print $total_object_bdgt_ytd   (,38,15)  edit 99,999,999.99pf
      print $total_object_act_trn    (,57,15)  edit 99,999,999.99pf
      print $total_object_actual_ytd (,74,15)  edit 99,999,999.99pf
      print $total_object_ot_encb    (,90,14)  edit 9,999,999.99pf
      print $total_object_av_bl      (,106,15) edit 99,999,999.99pf
      print $total_object_pctbdgt    (,124,7)  edit 999.99pf

      print '*********************************************************************************************************************************' (+2,2)
      print ' ' (+1,2)

   else

      let $line = '**** TOTAL ' || $old_object_name

      print $line (,4)
      print $total_object_bdgt_ytd   (,38,15)  edit 99,999,999.99pf
      print $total_object_act_trn    (,57,15)  edit 99,999,999.99pf
      print $total_object_actual_ytd (,74,15)  edit 99,999,999.99pf
      print $total_object_ot_encb    (,90,14)  edit 9,999,999.99pf
      print $total_object_av_bl      (,106,15) edit 99,999,999.99pf
      print $total_object_pctbdgt    (,124,7)  edit 999.99pf

      print '*********************************************************************************************************************************' (+2,2)
      print ' ' (+1,2)

   end-if

   let #total_object_bdgt_ytd = 0
   let #total_object_act_trn = 0
   let #total_object_actual_ytd = 0
   let #total_object_ot_encb = 0
   let #total_object_av_bl = 0

end-procedure


begin-procedure PrintObjconSubtotal

   if #total_objcon_bdgt_ytd <> 0
      let #total_objcon_pctbdgt = (#total_objcon_actual_ytd + #total_objcon_ot_encb) / #total_objcon_bdgt_ytd * 100
   else
      let #total_objcon_pctbdgt = 0
   end-if

   let $total_objcon_bdgt_ytd = #total_objcon_bdgt_ytd
   let $total_objcon_act_trn = #total_objcon_act_trn
   let $total_objcon_actual_ytd = #total_objcon_actual_ytd
   let $total_objcon_ot_encb = #total_objcon_ot_encb
   let $total_objcon_av_bl = #total_objcon_av_bl
   let $total_objcon_pctbdgt = #total_objcon_pctbdgt

   let $line = '*** TOTAL ' || $old_fin_conobj_shrt_nm

   if #just_printed_objlvl = 1
      print $line (,5)
   else
      print $line (+2,5)
   end-if

   print $total_objcon_bdgt_ytd   (,38,15)  edit 99,999,999.99pf
   print $total_objcon_act_trn    (,57,15)  edit 99,999,999.99pf
   print $total_objcon_actual_ytd (,74,15)  edit 99,999,999.99pf
   print $total_objcon_ot_encb    (,90,14)  edit 9,999,999.99pf
   print $total_objcon_av_bl      (,106,15) edit 99,999,999.99pf
   print $total_objcon_pctbdgt    (,124,7)  edit 999.99pf
   print ' ' (+1,2)

   let #total_objcon_bdgt_ytd = 0
   let #total_objcon_act_trn = 0
   let #total_objcon_actual_ytd = 0
   let #total_objcon_ot_encb = 0
   let #total_objcon_av_bl = 0

end-procedure



begin-procedure PrintObjlvlSubtotal

   if $old_fin_cons_obj_cd = 'CMPN'
      if #total_objlvl_bdgt_ytd <> 0
         let #total_objlvl_pctbdgt = (#total_objlvl_actual_ytd + #total_objlvl_ot_encb) / #total_objlvl_bdgt_ytd * 100
      else
         let #total_objlvl_pctbdgt = 0
      end-if

      let $total_objlvl_bdgt_ytd = #total_objlvl_bdgt_ytd
      let $total_objlvl_act_trn = #total_objlvl_act_trn
      let $total_objlvl_actual_ytd = #total_objlvl_actual_ytd
      let $total_objlvl_ot_encb = #total_objlvl_ot_encb
      let $total_objlvl_av_bl = #total_objlvl_av_bl
      let $total_objlvl_pctbdgt = #total_objlvl_pctbdgt

      let $line = '** TOTAL ' || $old_fin_objlvl_shrt_nm

      print $line (+2,6)
      print $total_objlvl_bdgt_ytd   (,38,15)  edit 99,999,999.99pf
      print $total_objlvl_act_trn    (,57,15)  edit 99,999,999.99pf
      print $total_objlvl_actual_ytd (,74,15)  edit 99,999,999.99pf
      print $total_objlvl_ot_encb    (,90,14)  edit 9,999,999.99pf
      print $total_objlvl_av_bl      (,106,15) edit 99,999,999.99pf
      print $total_objlvl_pctbdgt    (,124,7)  edit 999.99pf
      print ' ' (+1,2)

      let #just_printed_objlvl = 1
   end-if
   
   let #total_objlvl_bdgt_ytd = 0
   let #total_objlvl_act_trn = 0
   let #total_objlvl_actual_ytd = 0
   let #total_objlvl_ot_encb = 0
   let #total_objlvl_av_bl = 0


end-procedure



